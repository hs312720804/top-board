{"version":3,"file":"js/chunk-vendors-0ff46c1f.6dd36d13.js","mappings":"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","sources":["webpack://databoard/./node_modules/echarts/lib/chart/tree/traversalHelper.js","webpack://databoard/./node_modules/echarts/lib/chart/tree/treeLayout.js","webpack://databoard/./node_modules/echarts/lib/chart/tree/treeVisual.js","webpack://databoard/./node_modules/echarts/lib/chart/tree/treeAction.js","webpack://databoard/./node_modules/echarts/lib/chart/tree/install.js","webpack://databoard/./node_modules/echarts/lib/chart/tree/layoutHelper.js","webpack://databoard/./node_modules/echarts/lib/chart/treemap/treemapAction.js","webpack://databoard/./node_modules/echarts/lib/chart/treemap/TreemapSeries.js","webpack://databoard/./node_modules/echarts/lib/chart/treemap/Breadcrumb.js","webpack://databoard/./node_modules/echarts/lib/chart/treemap/TreemapView.js","webpack://databoard/./node_modules/echarts/lib/chart/treemap/treemapVisual.js","webpack://databoard/./node_modules/echarts/lib/chart/treemap/treemapLayout.js","webpack://databoard/./node_modules/echarts/lib/chart/treemap/install.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Traverse the tree from bottom to top and do something\n */\nfunction eachAfter(root, callback, separation) {\n  var nodes = [root];\n  var next = [];\n  var node;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    next.push(node);\n\n    if (node.isExpand) {\n      var children = node.children;\n\n      if (children.length) {\n        for (var i = 0; i < children.length; i++) {\n          nodes.push(children[i]);\n        }\n      }\n    }\n  }\n\n  while (node = next.pop()) {\n    // jshint ignore:line\n    callback(node, separation);\n  }\n}\n/**\n * Traverse the tree from top to bottom and do something\n */\n\n\nfunction eachBefore(root, callback) {\n  var nodes = [root];\n  var node;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    callback(node);\n\n    if (node.isExpand) {\n      var children = node.children;\n\n      if (children.length) {\n        for (var i = children.length - 1; i >= 0; i--) {\n          nodes.push(children[i]);\n        }\n      }\n    }\n  }\n}\n\nexport { eachAfter, eachBefore };","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { eachAfter, eachBefore } from './traversalHelper.js';\nimport { init, firstWalk, secondWalk, separation as sep, radialCoordinate, getViewRect } from './layoutHelper.js';\nexport default function treeLayout(ecModel, api) {\n  ecModel.eachSeriesByType('tree', function (seriesModel) {\n    commonLayout(seriesModel, api);\n  });\n}\n\nfunction commonLayout(seriesModel, api) {\n  var layoutInfo = getViewRect(seriesModel, api);\n  seriesModel.layoutInfo = layoutInfo;\n  var layout = seriesModel.get('layout');\n  var width = 0;\n  var height = 0;\n  var separation = null;\n\n  if (layout === 'radial') {\n    width = 2 * Math.PI;\n    height = Math.min(layoutInfo.height, layoutInfo.width) / 2;\n    separation = sep(function (node1, node2) {\n      return (node1.parentNode === node2.parentNode ? 1 : 2) / node1.depth;\n    });\n  } else {\n    width = layoutInfo.width;\n    height = layoutInfo.height;\n    separation = sep();\n  }\n\n  var virtualRoot = seriesModel.getData().tree.root;\n  var realRoot = virtualRoot.children[0];\n\n  if (realRoot) {\n    init(virtualRoot);\n    eachAfter(realRoot, firstWalk, separation);\n    virtualRoot.hierNode.modifier = -realRoot.hierNode.prelim;\n    eachBefore(realRoot, secondWalk);\n    var left_1 = realRoot;\n    var right_1 = realRoot;\n    var bottom_1 = realRoot;\n    eachBefore(realRoot, function (node) {\n      var x = node.getLayout().x;\n\n      if (x < left_1.getLayout().x) {\n        left_1 = node;\n      }\n\n      if (x > right_1.getLayout().x) {\n        right_1 = node;\n      }\n\n      if (node.depth > bottom_1.depth) {\n        bottom_1 = node;\n      }\n    });\n    var delta = left_1 === right_1 ? 1 : separation(left_1, right_1) / 2;\n    var tx_1 = delta - left_1.getLayout().x;\n    var kx_1 = 0;\n    var ky_1 = 0;\n    var coorX_1 = 0;\n    var coorY_1 = 0;\n\n    if (layout === 'radial') {\n      kx_1 = width / (right_1.getLayout().x + delta + tx_1); // here we use (node.depth - 1), bucause the real root's depth is 1\n\n      ky_1 = height / (bottom_1.depth - 1 || 1);\n      eachBefore(realRoot, function (node) {\n        coorX_1 = (node.getLayout().x + tx_1) * kx_1;\n        coorY_1 = (node.depth - 1) * ky_1;\n        var finalCoor = radialCoordinate(coorX_1, coorY_1);\n        node.setLayout({\n          x: finalCoor.x,\n          y: finalCoor.y,\n          rawX: coorX_1,\n          rawY: coorY_1\n        }, true);\n      });\n    } else {\n      var orient_1 = seriesModel.getOrient();\n\n      if (orient_1 === 'RL' || orient_1 === 'LR') {\n        ky_1 = height / (right_1.getLayout().x + delta + tx_1);\n        kx_1 = width / (bottom_1.depth - 1 || 1);\n        eachBefore(realRoot, function (node) {\n          coorY_1 = (node.getLayout().x + tx_1) * ky_1;\n          coorX_1 = orient_1 === 'LR' ? (node.depth - 1) * kx_1 : width - (node.depth - 1) * kx_1;\n          node.setLayout({\n            x: coorX_1,\n            y: coorY_1\n          }, true);\n        });\n      } else if (orient_1 === 'TB' || orient_1 === 'BT') {\n        kx_1 = width / (right_1.getLayout().x + delta + tx_1);\n        ky_1 = height / (bottom_1.depth - 1 || 1);\n        eachBefore(realRoot, function (node) {\n          coorX_1 = (node.getLayout().x + tx_1) * kx_1;\n          coorY_1 = orient_1 === 'TB' ? (node.depth - 1) * ky_1 : height - (node.depth - 1) * ky_1;\n          node.setLayout({\n            x: coorX_1,\n            y: coorY_1\n          }, true);\n        });\n      }\n    }\n  }\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { extend } from 'zrender/lib/core/util.js';\nexport default function treeVisual(ecModel) {\n  ecModel.eachSeriesByType('tree', function (seriesModel) {\n    var data = seriesModel.getData();\n    var tree = data.tree;\n    tree.eachNode(function (node) {\n      var model = node.getModel(); // TODO Optimize\n\n      var style = model.getModel('itemStyle').getItemStyle();\n      var existsStyle = data.ensureUniqueItemVisual(node.dataIndex, 'style');\n      extend(existsStyle, style);\n    });\n  });\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { updateCenterAndZoom } from '../../action/roamHelper.js';\nexport function installTreeAction(registers) {\n  registers.registerAction({\n    type: 'treeExpandAndCollapse',\n    event: 'treeExpandAndCollapse',\n    update: 'update'\n  }, function (payload, ecModel) {\n    ecModel.eachComponent({\n      mainType: 'series',\n      subType: 'tree',\n      query: payload\n    }, function (seriesModel) {\n      var dataIndex = payload.dataIndex;\n      var tree = seriesModel.getData().tree;\n      var node = tree.getNodeByDataIndex(dataIndex);\n      node.isExpand = !node.isExpand;\n    });\n  });\n  registers.registerAction({\n    type: 'treeRoam',\n    event: 'treeRoam',\n    // Here we set 'none' instead of 'update', because roam action\n    // just need to update the transform matrix without having to recalculate\n    // the layout. So don't need to go through the whole update process, such\n    // as 'dataPrcocess', 'coordSystemUpdate', 'layout' and so on.\n    update: 'none'\n  }, function (payload, ecModel, api) {\n    ecModel.eachComponent({\n      mainType: 'series',\n      subType: 'tree',\n      query: payload\n    }, function (seriesModel) {\n      var coordSys = seriesModel.coordinateSystem;\n      var res = updateCenterAndZoom(coordSys, payload, undefined, api);\n      seriesModel.setCenter && seriesModel.setCenter(res.center);\n      seriesModel.setZoom && seriesModel.setZoom(res.zoom);\n    });\n  });\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport TreeView from './TreeView.js';\nimport TreeSeriesModel from './TreeSeries.js';\nimport treeLayout from './treeLayout.js';\nimport treeVisual from './treeVisual.js';\nimport { installTreeAction } from './treeAction.js';\nexport function install(registers) {\n  registers.registerChartView(TreeView);\n  registers.registerSeriesModel(TreeSeriesModel);\n  registers.registerLayout(treeLayout);\n  registers.registerVisual(treeVisual);\n  installTreeAction(registers);\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* A third-party license is embedded for some of the code in this file:\n* The tree layoutHelper implementation was originally copied from\n* \"d3.js\"(https://github.com/d3/d3-hierarchy) with\n* some modifications made for this project.\n* (see more details in the comment of the specific method below.)\n* The use of the source code of this file is also subject to the terms\n* and consitions of the licence of \"d3.js\" (BSD-3Clause, see\n* </licenses/LICENSE-d3>).\n*/\n\n/**\n * @file The layout algorithm of node-link tree diagrams. Here we using Reingold-Tilford algorithm to drawing\n *       the tree.\n */\nimport * as layout from '../../util/layout.js';\n/**\n * Initialize all computational message for following algorithm.\n */\n\nexport function init(inRoot) {\n  var root = inRoot;\n  root.hierNode = {\n    defaultAncestor: null,\n    ancestor: root,\n    prelim: 0,\n    modifier: 0,\n    change: 0,\n    shift: 0,\n    i: 0,\n    thread: null\n  };\n  var nodes = [root];\n  var node;\n  var children;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    children = node.children;\n\n    if (node.isExpand && children.length) {\n      var n = children.length;\n\n      for (var i = n - 1; i >= 0; i--) {\n        var child = children[i];\n        child.hierNode = {\n          defaultAncestor: null,\n          ancestor: child,\n          prelim: 0,\n          modifier: 0,\n          change: 0,\n          shift: 0,\n          i: i,\n          thread: null\n        };\n        nodes.push(child);\n      }\n    }\n  }\n}\n/**\n * The implementation of this function was originally copied from \"d3.js\"\n * <https://github.com/d3/d3-hierarchy/blob/4c1f038f2725d6eae2e49b61d01456400694bac4/src/tree.js>\n * with some modifications made for this program.\n * See the license statement at the head of this file.\n *\n * Computes a preliminary x coordinate for node. Before that, this function is\n * applied recursively to the children of node, as well as the function\n * apportion(). After spacing out the children by calling executeShifts(), the\n * node is placed to the midpoint of its outermost children.\n */\n\nexport function firstWalk(node, separation) {\n  var children = node.isExpand ? node.children : [];\n  var siblings = node.parentNode.children;\n  var subtreeW = node.hierNode.i ? siblings[node.hierNode.i - 1] : null;\n\n  if (children.length) {\n    executeShifts(node);\n    var midPoint = (children[0].hierNode.prelim + children[children.length - 1].hierNode.prelim) / 2;\n\n    if (subtreeW) {\n      node.hierNode.prelim = subtreeW.hierNode.prelim + separation(node, subtreeW);\n      node.hierNode.modifier = node.hierNode.prelim - midPoint;\n    } else {\n      node.hierNode.prelim = midPoint;\n    }\n  } else if (subtreeW) {\n    node.hierNode.prelim = subtreeW.hierNode.prelim + separation(node, subtreeW);\n  }\n\n  node.parentNode.hierNode.defaultAncestor = apportion(node, subtreeW, node.parentNode.hierNode.defaultAncestor || siblings[0], separation);\n}\n/**\n * The implementation of this function was originally copied from \"d3.js\"\n * <https://github.com/d3/d3-hierarchy/blob/4c1f038f2725d6eae2e49b61d01456400694bac4/src/tree.js>\n * with some modifications made for this program.\n * See the license statement at the head of this file.\n *\n * Computes all real x-coordinates by summing up the modifiers recursively.\n */\n\nexport function secondWalk(node) {\n  var nodeX = node.hierNode.prelim + node.parentNode.hierNode.modifier;\n  node.setLayout({\n    x: nodeX\n  }, true);\n  node.hierNode.modifier += node.parentNode.hierNode.modifier;\n}\nexport function separation(cb) {\n  return arguments.length ? cb : defaultSeparation;\n}\n/**\n * Transform the common coordinate to radial coordinate.\n */\n\nexport function radialCoordinate(rad, r) {\n  rad -= Math.PI / 2;\n  return {\n    x: r * Math.cos(rad),\n    y: r * Math.sin(rad)\n  };\n}\n/**\n * Get the layout position of the whole view.\n */\n\nexport function getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n/**\n * All other shifts, applied to the smaller subtrees between w- and w+, are\n * performed by this function.\n *\n * The implementation of this function was originally copied from \"d3.js\"\n * <https://github.com/d3/d3-hierarchy/blob/4c1f038f2725d6eae2e49b61d01456400694bac4/src/tree.js>\n * with some modifications made for this program.\n * See the license statement at the head of this file.\n */\n\nfunction executeShifts(node) {\n  var children = node.children;\n  var n = children.length;\n  var shift = 0;\n  var change = 0;\n\n  while (--n >= 0) {\n    var child = children[n];\n    child.hierNode.prelim += shift;\n    child.hierNode.modifier += shift;\n    change += child.hierNode.change;\n    shift += child.hierNode.shift + change;\n  }\n}\n/**\n * The implementation of this function was originally copied from \"d3.js\"\n * <https://github.com/d3/d3-hierarchy/blob/4c1f038f2725d6eae2e49b61d01456400694bac4/src/tree.js>\n * with some modifications made for this program.\n * See the license statement at the head of this file.\n *\n * The core of the algorithm. Here, a new subtree is combined with the\n * previous subtrees. Threads are used to traverse the inside and outside\n * contours of the left and right subtree up to the highest common level.\n * Whenever two nodes of the inside contours conflict, we compute the left\n * one of the greatest uncommon ancestors using the function nextAncestor()\n * and call moveSubtree() to shift the subtree and prepare the shifts of\n * smaller subtrees. Finally, we add a new thread (if necessary).\n */\n\n\nfunction apportion(subtreeV, subtreeW, ancestor, separation) {\n  if (subtreeW) {\n    var nodeOutRight = subtreeV;\n    var nodeInRight = subtreeV;\n    var nodeOutLeft = nodeInRight.parentNode.children[0];\n    var nodeInLeft = subtreeW;\n    var sumOutRight = nodeOutRight.hierNode.modifier;\n    var sumInRight = nodeInRight.hierNode.modifier;\n    var sumOutLeft = nodeOutLeft.hierNode.modifier;\n    var sumInLeft = nodeInLeft.hierNode.modifier;\n\n    while (nodeInLeft = nextRight(nodeInLeft), nodeInRight = nextLeft(nodeInRight), nodeInLeft && nodeInRight) {\n      nodeOutRight = nextRight(nodeOutRight);\n      nodeOutLeft = nextLeft(nodeOutLeft);\n      nodeOutRight.hierNode.ancestor = subtreeV;\n      var shift = nodeInLeft.hierNode.prelim + sumInLeft - nodeInRight.hierNode.prelim - sumInRight + separation(nodeInLeft, nodeInRight);\n\n      if (shift > 0) {\n        moveSubtree(nextAncestor(nodeInLeft, subtreeV, ancestor), subtreeV, shift);\n        sumInRight += shift;\n        sumOutRight += shift;\n      }\n\n      sumInLeft += nodeInLeft.hierNode.modifier;\n      sumInRight += nodeInRight.hierNode.modifier;\n      sumOutRight += nodeOutRight.hierNode.modifier;\n      sumOutLeft += nodeOutLeft.hierNode.modifier;\n    }\n\n    if (nodeInLeft && !nextRight(nodeOutRight)) {\n      nodeOutRight.hierNode.thread = nodeInLeft;\n      nodeOutRight.hierNode.modifier += sumInLeft - sumOutRight;\n    }\n\n    if (nodeInRight && !nextLeft(nodeOutLeft)) {\n      nodeOutLeft.hierNode.thread = nodeInRight;\n      nodeOutLeft.hierNode.modifier += sumInRight - sumOutLeft;\n      ancestor = subtreeV;\n    }\n  }\n\n  return ancestor;\n}\n/**\n * This function is used to traverse the right contour of a subtree.\n * It returns the rightmost child of node or the thread of node. The function\n * returns null if and only if node is on the highest depth of its subtree.\n */\n\n\nfunction nextRight(node) {\n  var children = node.children;\n  return children.length && node.isExpand ? children[children.length - 1] : node.hierNode.thread;\n}\n/**\n * This function is used to traverse the left contour of a subtree (or a subforest).\n * It returns the leftmost child of node or the thread of node. The function\n * returns null if and only if node is on the highest depth of its subtree.\n */\n\n\nfunction nextLeft(node) {\n  var children = node.children;\n  return children.length && node.isExpand ? children[0] : node.hierNode.thread;\n}\n/**\n * If nodeInLeft’s ancestor is a sibling of node, returns nodeInLeft’s ancestor.\n * Otherwise, returns the specified ancestor.\n */\n\n\nfunction nextAncestor(nodeInLeft, node, ancestor) {\n  return nodeInLeft.hierNode.ancestor.parentNode === node.parentNode ? nodeInLeft.hierNode.ancestor : ancestor;\n}\n/**\n * The implementation of this function was originally copied from \"d3.js\"\n * <https://github.com/d3/d3-hierarchy/blob/4c1f038f2725d6eae2e49b61d01456400694bac4/src/tree.js>\n * with some modifications made for this program.\n * See the license statement at the head of this file.\n *\n * Shifts the current subtree rooted at wr.\n * This is done by increasing prelim(w+) and modifier(w+) by shift.\n */\n\n\nfunction moveSubtree(wl, wr, shift) {\n  var change = shift / (wr.hierNode.i - wl.hierNode.i);\n  wr.hierNode.change -= change;\n  wr.hierNode.shift += shift;\n  wr.hierNode.modifier += shift;\n  wr.hierNode.prelim += shift;\n  wl.hierNode.change += change;\n}\n/**\n * The implementation of this function was originally copied from \"d3.js\"\n * <https://github.com/d3/d3-hierarchy/blob/4c1f038f2725d6eae2e49b61d01456400694bac4/src/tree.js>\n * with some modifications made for this program.\n * See the license statement at the head of this file.\n */\n\n\nfunction defaultSeparation(node1, node2) {\n  return node1.parentNode === node2.parentNode ? 1 : 2;\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as helper from '../helper/treeHelper.js';\nimport { noop } from 'zrender/lib/core/util.js';\nvar actionTypes = ['treemapZoomToNode', 'treemapRender', 'treemapMove'];\nexport function installTreemapAction(registers) {\n  for (var i = 0; i < actionTypes.length; i++) {\n    registers.registerAction({\n      type: actionTypes[i],\n      update: 'updateView'\n    }, noop);\n  }\n\n  registers.registerAction({\n    type: 'treemapRootToNode',\n    update: 'updateView'\n  }, function (payload, ecModel) {\n    ecModel.eachComponent({\n      mainType: 'series',\n      subType: 'treemap',\n      query: payload\n    }, handleRootToNode);\n\n    function handleRootToNode(model, index) {\n      var types = ['treemapZoomToNode', 'treemapRootToNode'];\n      var targetInfo = helper.retrieveTargetInfo(payload, types, model);\n\n      if (targetInfo) {\n        var originViewRoot = model.getViewRoot();\n\n        if (originViewRoot) {\n          payload.direction = helper.aboveViewRoot(originViewRoot, targetInfo.node) ? 'rollUp' : 'drillDown';\n        }\n\n        model.resetViewRoot(targetInfo.node);\n      }\n    }\n  });\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport SeriesModel from '../../model/Series.js';\nimport Tree from '../../data/Tree.js';\nimport Model from '../../model/Model.js';\nimport { wrapTreePathInfo } from '../helper/treeHelper.js';\nimport { normalizeToArray } from '../../util/model.js';\nimport { createTooltipMarkup } from '../../component/tooltip/tooltipMarkup.js';\nimport enableAriaDecalForTree from '../helper/enableAriaDecalForTree.js';\n\nvar TreemapSeriesModel =\n/** @class */\nfunction (_super) {\n  __extends(TreemapSeriesModel, _super);\n\n  function TreemapSeriesModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = TreemapSeriesModel.type;\n    _this.preventUsingHoverLayer = true;\n    return _this;\n  }\n  /**\n   * @override\n   */\n\n\n  TreemapSeriesModel.prototype.getInitialData = function (option, ecModel) {\n    // Create a virtual root.\n    var root = {\n      name: option.name,\n      children: option.data\n    };\n    completeTreeValue(root);\n    var levels = option.levels || []; // Used in \"visual priority\" in `treemapVisual.js`.\n    // This way is a little tricky, must satisfy the precondition:\n    //   1. There is no `treeNode.getModel('itemStyle.xxx')` used.\n    //   2. The `Model.prototype.getModel()` will not use any clone-like way.\n\n    var designatedVisualItemStyle = this.designatedVisualItemStyle = {};\n    var designatedVisualModel = new Model({\n      itemStyle: designatedVisualItemStyle\n    }, this, ecModel);\n    levels = option.levels = setDefault(levels, ecModel);\n    var levelModels = zrUtil.map(levels || [], function (levelDefine) {\n      return new Model(levelDefine, designatedVisualModel, ecModel);\n    }, this); // Make sure always a new tree is created when setOption,\n    // in TreemapView, we check whether oldTree === newTree\n    // to choose mappings approach among old shapes and new shapes.\n\n    var tree = Tree.createTree(root, this, beforeLink);\n\n    function beforeLink(nodeData) {\n      nodeData.wrapMethod('getItemModel', function (model, idx) {\n        var node = tree.getNodeByDataIndex(idx);\n        var levelModel = node ? levelModels[node.depth] : null; // If no levelModel, we also need `designatedVisualModel`.\n\n        model.parentModel = levelModel || designatedVisualModel;\n        return model;\n      });\n    }\n\n    return tree.data;\n  };\n\n  TreemapSeriesModel.prototype.optionUpdated = function () {\n    this.resetViewRoot();\n  };\n  /**\n   * @override\n   * @param {number} dataIndex\n   * @param {boolean} [mutipleSeries=false]\n   */\n\n\n  TreemapSeriesModel.prototype.formatTooltip = function (dataIndex, multipleSeries, dataType) {\n    var data = this.getData();\n    var value = this.getRawValue(dataIndex);\n    var name = data.getName(dataIndex);\n    return createTooltipMarkup('nameValue', {\n      name: name,\n      value: value\n    });\n  };\n  /**\n   * Add tree path to tooltip param\n   *\n   * @override\n   * @param {number} dataIndex\n   * @return {Object}\n   */\n\n\n  TreemapSeriesModel.prototype.getDataParams = function (dataIndex) {\n    var params = _super.prototype.getDataParams.apply(this, arguments);\n\n    var node = this.getData().tree.getNodeByDataIndex(dataIndex);\n    params.treeAncestors = wrapTreePathInfo(node, this); // compatitable the previous code.\n\n    params.treePathInfo = params.treeAncestors;\n    return params;\n  };\n  /**\n   * @public\n   * @param {Object} layoutInfo {\n   *                                x: containerGroup x\n   *                                y: containerGroup y\n   *                                width: containerGroup width\n   *                                height: containerGroup height\n   *                            }\n   */\n\n\n  TreemapSeriesModel.prototype.setLayoutInfo = function (layoutInfo) {\n    /**\n     * @readOnly\n     * @type {Object}\n     */\n    this.layoutInfo = this.layoutInfo || {};\n    zrUtil.extend(this.layoutInfo, layoutInfo);\n  };\n  /**\n   * @param  {string} id\n   * @return {number} index\n   */\n\n\n  TreemapSeriesModel.prototype.mapIdToIndex = function (id) {\n    // A feature is implemented:\n    // index is monotone increasing with the sequence of\n    // input id at the first time.\n    // This feature can make sure that each data item and its\n    // mapped color have the same index between data list and\n    // color list at the beginning, which is useful for user\n    // to adjust data-color mapping.\n\n    /**\n     * @private\n     * @type {Object}\n     */\n    var idIndexMap = this._idIndexMap;\n\n    if (!idIndexMap) {\n      idIndexMap = this._idIndexMap = zrUtil.createHashMap();\n      /**\n       * @private\n       * @type {number}\n       */\n\n      this._idIndexMapCount = 0;\n    }\n\n    var index = idIndexMap.get(id);\n\n    if (index == null) {\n      idIndexMap.set(id, index = this._idIndexMapCount++);\n    }\n\n    return index;\n  };\n\n  TreemapSeriesModel.prototype.getViewRoot = function () {\n    return this._viewRoot;\n  };\n\n  TreemapSeriesModel.prototype.resetViewRoot = function (viewRoot) {\n    viewRoot ? this._viewRoot = viewRoot : viewRoot = this._viewRoot;\n    var root = this.getRawData().tree.root;\n\n    if (!viewRoot || viewRoot !== root && !root.contains(viewRoot)) {\n      this._viewRoot = root;\n    }\n  };\n\n  TreemapSeriesModel.prototype.enableAriaDecal = function () {\n    enableAriaDecalForTree(this);\n  };\n\n  TreemapSeriesModel.type = 'series.treemap';\n  TreemapSeriesModel.layoutMode = 'box';\n  TreemapSeriesModel.defaultOption = {\n    // Disable progressive rendering\n    progressive: 0,\n    // size: ['80%', '80%'],            // deprecated, compatible with ec2.\n    left: 'center',\n    top: 'middle',\n    width: '80%',\n    height: '80%',\n    sort: true,\n    clipWindow: 'origin',\n    squareRatio: 0.5 * (1 + Math.sqrt(5)),\n    leafDepth: null,\n    drillDownIcon: '▶',\n    // to align specialized icon. ▷▶❒❐▼✚\n    zoomToNodeRatio: 0.32 * 0.32,\n    roam: true,\n    nodeClick: 'zoomToNode',\n    animation: true,\n    animationDurationUpdate: 900,\n    animationEasing: 'quinticInOut',\n    breadcrumb: {\n      show: true,\n      height: 22,\n      left: 'center',\n      top: 'bottom',\n      // right\n      // bottom\n      emptyItemWidth: 25,\n      itemStyle: {\n        color: 'rgba(0,0,0,0.7)',\n        textStyle: {\n          color: '#fff'\n        }\n      },\n      emphasis: {\n        itemStyle: {\n          color: 'rgba(0,0,0,0.9)' // '#5793f3',\n\n        }\n      }\n    },\n    label: {\n      show: true,\n      // Do not use textDistance, for ellipsis rect just the same as treemap node rect.\n      distance: 0,\n      padding: 5,\n      position: 'inside',\n      // formatter: null,\n      color: '#fff',\n      overflow: 'truncate' // align\n      // verticalAlign\n\n    },\n    upperLabel: {\n      show: false,\n      position: [0, '50%'],\n      height: 20,\n      // formatter: null,\n      // color: '#fff',\n      overflow: 'truncate',\n      // align: null,\n      verticalAlign: 'middle'\n    },\n    itemStyle: {\n      color: null,\n      colorAlpha: null,\n      colorSaturation: null,\n      borderWidth: 0,\n      gapWidth: 0,\n      borderColor: '#fff',\n      borderColorSaturation: null // If specified, borderColor will be ineffective, and the\n      // border color is evaluated by color of current node and\n      // borderColorSaturation.\n\n    },\n    emphasis: {\n      upperLabel: {\n        show: true,\n        position: [0, '50%'],\n        overflow: 'truncate',\n        verticalAlign: 'middle'\n      }\n    },\n    visualDimension: 0,\n    visualMin: null,\n    visualMax: null,\n    color: [],\n    // level[n].color (if necessary).\n    // + Specify color list of each level. level[0].color would be global\n    // color list if not specified. (see method `setDefault`).\n    // + But set as a empty array to forbid fetch color from global palette\n    // when using nodeModel.get('color'), otherwise nodes on deep level\n    // will always has color palette set and are not able to inherit color\n    // from parent node.\n    // + TreemapSeries.color can not be set as 'none', otherwise effect\n    // legend color fetching (see seriesColor.js).\n    colorAlpha: null,\n    colorSaturation: null,\n    colorMappingBy: 'index',\n    visibleMin: 10,\n    // be rendered. Only works when sort is 'asc' or 'desc'.\n    childrenVisibleMin: null,\n    // grandchildren will not show.\n    // Why grandchildren? If not grandchildren but children,\n    // some siblings show children and some not,\n    // the appearance may be mess and not consistent,\n    levels: [] // Each item: {\n    //     visibleMin, itemStyle, visualDimension, label\n    // }\n\n  };\n  return TreemapSeriesModel;\n}(SeriesModel);\n/**\n * @param {Object} dataNode\n */\n\n\nfunction completeTreeValue(dataNode) {\n  // Postorder travel tree.\n  // If value of none-leaf node is not set,\n  // calculate it by suming up the value of all children.\n  var sum = 0;\n  zrUtil.each(dataNode.children, function (child) {\n    completeTreeValue(child);\n    var childValue = child.value;\n    zrUtil.isArray(childValue) && (childValue = childValue[0]);\n    sum += childValue;\n  });\n  var thisValue = dataNode.value;\n\n  if (zrUtil.isArray(thisValue)) {\n    thisValue = thisValue[0];\n  }\n\n  if (thisValue == null || isNaN(thisValue)) {\n    thisValue = sum;\n  } // Value should not less than 0.\n\n\n  if (thisValue < 0) {\n    thisValue = 0;\n  }\n\n  zrUtil.isArray(dataNode.value) ? dataNode.value[0] = thisValue : dataNode.value = thisValue;\n}\n/**\n * set default to level configuration\n */\n\n\nfunction setDefault(levels, ecModel) {\n  var globalColorList = normalizeToArray(ecModel.get('color'));\n  var globalDecalList = normalizeToArray(ecModel.get(['aria', 'decal', 'decals']));\n\n  if (!globalColorList) {\n    return;\n  }\n\n  levels = levels || [];\n  var hasColorDefine;\n  var hasDecalDefine;\n  zrUtil.each(levels, function (levelDefine) {\n    var model = new Model(levelDefine);\n    var modelColor = model.get('color');\n    var modelDecal = model.get('decal');\n\n    if (model.get(['itemStyle', 'color']) || modelColor && modelColor !== 'none') {\n      hasColorDefine = true;\n    }\n\n    if (model.get(['itemStyle', 'decal']) || modelDecal && modelDecal !== 'none') {\n      hasDecalDefine = true;\n    }\n  });\n  var level0 = levels[0] || (levels[0] = {});\n\n  if (!hasColorDefine) {\n    level0.color = globalColorList.slice();\n  }\n\n  if (!hasDecalDefine && globalDecalList) {\n    level0.decal = globalDecalList.slice();\n  }\n\n  return levels;\n}\n\nexport default TreemapSeriesModel;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as graphic from '../../util/graphic.js';\nimport { getECData } from '../../util/innerStore.js';\nimport * as layout from '../../util/layout.js';\nimport { wrapTreePathInfo } from '../helper/treeHelper.js';\nimport { curry, defaults } from 'zrender/lib/core/util.js';\nimport { convertOptionIdName } from '../../util/model.js';\nimport { toggleHoverEmphasis, Z2_EMPHASIS_LIFT } from '../../util/states.js';\nimport { createTextStyle } from '../../label/labelStyle.js';\nvar TEXT_PADDING = 8;\nvar ITEM_GAP = 8;\nvar ARRAY_LENGTH = 5;\n\nvar Breadcrumb =\n/** @class */\nfunction () {\n  function Breadcrumb(containerGroup) {\n    this.group = new graphic.Group();\n    containerGroup.add(this.group);\n  }\n\n  Breadcrumb.prototype.render = function (seriesModel, api, targetNode, onSelect) {\n    var model = seriesModel.getModel('breadcrumb');\n    var thisGroup = this.group;\n    thisGroup.removeAll();\n\n    if (!model.get('show') || !targetNode) {\n      return;\n    }\n\n    var normalStyleModel = model.getModel('itemStyle');\n    var emphasisModel = model.getModel('emphasis');\n    var textStyleModel = normalStyleModel.getModel('textStyle');\n    var emphasisTextStyleModel = emphasisModel.getModel(['itemStyle', 'textStyle']);\n    var layoutParam = {\n      pos: {\n        left: model.get('left'),\n        right: model.get('right'),\n        top: model.get('top'),\n        bottom: model.get('bottom')\n      },\n      box: {\n        width: api.getWidth(),\n        height: api.getHeight()\n      },\n      emptyItemWidth: model.get('emptyItemWidth'),\n      totalWidth: 0,\n      renderList: []\n    };\n\n    this._prepare(targetNode, layoutParam, textStyleModel);\n\n    this._renderContent(seriesModel, layoutParam, normalStyleModel, emphasisModel, textStyleModel, emphasisTextStyleModel, onSelect);\n\n    layout.positionElement(thisGroup, layoutParam.pos, layoutParam.box);\n  };\n  /**\n   * Prepare render list and total width\n   * @private\n   */\n\n\n  Breadcrumb.prototype._prepare = function (targetNode, layoutParam, textStyleModel) {\n    for (var node = targetNode; node; node = node.parentNode) {\n      var text = convertOptionIdName(node.getModel().get('name'), '');\n      var textRect = textStyleModel.getTextRect(text);\n      var itemWidth = Math.max(textRect.width + TEXT_PADDING * 2, layoutParam.emptyItemWidth);\n      layoutParam.totalWidth += itemWidth + ITEM_GAP;\n      layoutParam.renderList.push({\n        node: node,\n        text: text,\n        width: itemWidth\n      });\n    }\n  };\n  /**\n   * @private\n   */\n\n\n  Breadcrumb.prototype._renderContent = function (seriesModel, layoutParam, normalStyleModel, emphasisModel, textStyleModel, emphasisTextStyleModel, onSelect) {\n    // Start rendering.\n    var lastX = 0;\n    var emptyItemWidth = layoutParam.emptyItemWidth;\n    var height = seriesModel.get(['breadcrumb', 'height']);\n    var availableSize = layout.getAvailableSize(layoutParam.pos, layoutParam.box);\n    var totalWidth = layoutParam.totalWidth;\n    var renderList = layoutParam.renderList;\n    var emphasisItemStyle = emphasisModel.getModel('itemStyle').getItemStyle();\n\n    for (var i = renderList.length - 1; i >= 0; i--) {\n      var item = renderList[i];\n      var itemNode = item.node;\n      var itemWidth = item.width;\n      var text = item.text; // Hdie text and shorten width if necessary.\n\n      if (totalWidth > availableSize.width) {\n        totalWidth -= itemWidth - emptyItemWidth;\n        itemWidth = emptyItemWidth;\n        text = null;\n      }\n\n      var el = new graphic.Polygon({\n        shape: {\n          points: makeItemPoints(lastX, 0, itemWidth, height, i === renderList.length - 1, i === 0)\n        },\n        style: defaults(normalStyleModel.getItemStyle(), {\n          lineJoin: 'bevel'\n        }),\n        textContent: new graphic.Text({\n          style: createTextStyle(textStyleModel, {\n            text: text\n          })\n        }),\n        textConfig: {\n          position: 'inside'\n        },\n        z2: Z2_EMPHASIS_LIFT * 1e4,\n        onclick: curry(onSelect, itemNode)\n      });\n      el.disableLabelAnimation = true;\n      el.getTextContent().ensureState('emphasis').style = createTextStyle(emphasisTextStyleModel, {\n        text: text\n      });\n      el.ensureState('emphasis').style = emphasisItemStyle;\n      toggleHoverEmphasis(el, emphasisModel.get('focus'), emphasisModel.get('blurScope'), emphasisModel.get('disabled'));\n      this.group.add(el);\n      packEventData(el, seriesModel, itemNode);\n      lastX += itemWidth + ITEM_GAP;\n    }\n  };\n\n  Breadcrumb.prototype.remove = function () {\n    this.group.removeAll();\n  };\n\n  return Breadcrumb;\n}();\n\nfunction makeItemPoints(x, y, itemWidth, itemHeight, head, tail) {\n  var points = [[head ? x : x - ARRAY_LENGTH, y], [x + itemWidth, y], [x + itemWidth, y + itemHeight], [head ? x : x - ARRAY_LENGTH, y + itemHeight]];\n  !tail && points.splice(2, 0, [x + itemWidth + ARRAY_LENGTH, y + itemHeight / 2]);\n  !head && points.push([x, y + itemHeight / 2]);\n  return points;\n} // Package custom mouse event.\n\n\nfunction packEventData(el, seriesModel, itemNode) {\n  getECData(el).eventData = {\n    componentType: 'series',\n    componentSubType: 'treemap',\n    componentIndex: seriesModel.componentIndex,\n    seriesIndex: seriesModel.seriesIndex,\n    seriesName: seriesModel.name,\n    seriesType: 'treemap',\n    selfType: 'breadcrumb',\n    nodeData: {\n      dataIndex: itemNode && itemNode.dataIndex,\n      name: itemNode && itemNode.name\n    },\n    treePathInfo: itemNode && wrapTreePathInfo(itemNode, seriesModel)\n  };\n}\n\nexport default Breadcrumb;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport { bind, each, indexOf, curry, extend, normalizeCssArray, isFunction } from 'zrender/lib/core/util.js';\nimport * as graphic from '../../util/graphic.js';\nimport { getECData } from '../../util/innerStore.js';\nimport { isHighDownDispatcher, setAsHighDownDispatcher, setDefaultStateProxy, enableHoverFocus, Z2_EMPHASIS_LIFT } from '../../util/states.js';\nimport DataDiffer from '../../data/DataDiffer.js';\nimport * as helper from '../helper/treeHelper.js';\nimport Breadcrumb from './Breadcrumb.js';\nimport RoamController from '../../component/helper/RoamController.js';\nimport BoundingRect from 'zrender/lib/core/BoundingRect.js';\nimport * as matrix from 'zrender/lib/core/matrix.js';\nimport * as animationUtil from '../../util/animation.js';\nimport makeStyleMapper from '../../model/mixin/makeStyleMapper.js';\nimport ChartView from '../../view/Chart.js';\nimport Displayable from 'zrender/lib/graphic/Displayable.js';\nimport { makeInner, convertOptionIdName } from '../../util/model.js';\nimport { windowOpen } from '../../util/format.js';\nimport { setLabelStyle, getLabelStatesModels } from '../../label/labelStyle.js';\nvar Group = graphic.Group;\nvar Rect = graphic.Rect;\nvar DRAG_THRESHOLD = 3;\nvar PATH_LABEL_NOAMAL = 'label';\nvar PATH_UPPERLABEL_NORMAL = 'upperLabel'; // Should larger than emphasis states lift z\n\nvar Z2_BASE = Z2_EMPHASIS_LIFT * 10; // Should bigger than every z2.\n\nvar Z2_BG = Z2_EMPHASIS_LIFT * 2;\nvar Z2_CONTENT = Z2_EMPHASIS_LIFT * 3;\nvar getStateItemStyle = makeStyleMapper([['fill', 'color'], // `borderColor` and `borderWidth` has been occupied,\n// so use `stroke` to indicate the stroke of the rect.\n['stroke', 'strokeColor'], ['lineWidth', 'strokeWidth'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor'] // Option decal is in `DecalObject` but style.decal is in `PatternObject`.\n// So do not transfer decal directly.\n]);\n\nvar getItemStyleNormal = function (model) {\n  // Normal style props should include emphasis style props.\n  var itemStyle = getStateItemStyle(model); // Clear styles set by emphasis.\n\n  itemStyle.stroke = itemStyle.fill = itemStyle.lineWidth = null;\n  return itemStyle;\n};\n\nvar inner = makeInner();\n\nvar TreemapView =\n/** @class */\nfunction (_super) {\n  __extends(TreemapView, _super);\n\n  function TreemapView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = TreemapView.type;\n    _this._state = 'ready';\n    _this._storage = createStorage();\n    return _this;\n  }\n  /**\n   * @override\n   */\n\n\n  TreemapView.prototype.render = function (seriesModel, ecModel, api, payload) {\n    var models = ecModel.findComponents({\n      mainType: 'series',\n      subType: 'treemap',\n      query: payload\n    });\n\n    if (indexOf(models, seriesModel) < 0) {\n      return;\n    }\n\n    this.seriesModel = seriesModel;\n    this.api = api;\n    this.ecModel = ecModel;\n    var types = ['treemapZoomToNode', 'treemapRootToNode'];\n    var targetInfo = helper.retrieveTargetInfo(payload, types, seriesModel);\n    var payloadType = payload && payload.type;\n    var layoutInfo = seriesModel.layoutInfo;\n    var isInit = !this._oldTree;\n    var thisStorage = this._storage; // Mark new root when action is treemapRootToNode.\n\n    var reRoot = payloadType === 'treemapRootToNode' && targetInfo && thisStorage ? {\n      rootNodeGroup: thisStorage.nodeGroup[targetInfo.node.getRawIndex()],\n      direction: payload.direction\n    } : null;\n\n    var containerGroup = this._giveContainerGroup(layoutInfo);\n\n    var hasAnimation = seriesModel.get('animation');\n\n    var renderResult = this._doRender(containerGroup, seriesModel, reRoot);\n\n    hasAnimation && !isInit && (!payloadType || payloadType === 'treemapZoomToNode' || payloadType === 'treemapRootToNode') ? this._doAnimation(containerGroup, renderResult, seriesModel, reRoot) : renderResult.renderFinally();\n\n    this._resetController(api);\n\n    this._renderBreadcrumb(seriesModel, api, targetInfo);\n  };\n\n  TreemapView.prototype._giveContainerGroup = function (layoutInfo) {\n    var containerGroup = this._containerGroup;\n\n    if (!containerGroup) {\n      // FIXME\n      // 加一层containerGroup是为了clip，但是现在clip功能并没有实现。\n      containerGroup = this._containerGroup = new Group();\n\n      this._initEvents(containerGroup);\n\n      this.group.add(containerGroup);\n    }\n\n    containerGroup.x = layoutInfo.x;\n    containerGroup.y = layoutInfo.y;\n    return containerGroup;\n  };\n\n  TreemapView.prototype._doRender = function (containerGroup, seriesModel, reRoot) {\n    var thisTree = seriesModel.getData().tree;\n    var oldTree = this._oldTree; // Clear last shape records.\n\n    var lastsForAnimation = createStorage();\n    var thisStorage = createStorage();\n    var oldStorage = this._storage;\n    var willInvisibleEls = [];\n\n    function doRenderNode(thisNode, oldNode, parentGroup, depth) {\n      return renderNode(seriesModel, thisStorage, oldStorage, reRoot, lastsForAnimation, willInvisibleEls, thisNode, oldNode, parentGroup, depth);\n    } // Notice: When thisTree and oldTree are the same tree (see list.cloneShallow),\n    // the oldTree is actually losted, so we cannot find all of the old graphic\n    // elements from tree. So we use this strategy: make element storage, move\n    // from old storage to new storage, clear old storage.\n\n\n    dualTravel(thisTree.root ? [thisTree.root] : [], oldTree && oldTree.root ? [oldTree.root] : [], containerGroup, thisTree === oldTree || !oldTree, 0); // Process all removing.\n\n    var willDeleteEls = clearStorage(oldStorage);\n    this._oldTree = thisTree;\n    this._storage = thisStorage;\n    return {\n      lastsForAnimation: lastsForAnimation,\n      willDeleteEls: willDeleteEls,\n      renderFinally: renderFinally\n    };\n\n    function dualTravel(thisViewChildren, oldViewChildren, parentGroup, sameTree, depth) {\n      // When 'render' is triggered by action,\n      // 'this' and 'old' may be the same tree,\n      // we use rawIndex in that case.\n      if (sameTree) {\n        oldViewChildren = thisViewChildren;\n        each(thisViewChildren, function (child, index) {\n          !child.isRemoved() && processNode(index, index);\n        });\n      } // Diff hierarchically (diff only in each subtree, but not whole).\n      // because, consistency of view is important.\n      else {\n          new DataDiffer(oldViewChildren, thisViewChildren, getKey, getKey).add(processNode).update(processNode).remove(curry(processNode, null)).execute();\n        }\n\n      function getKey(node) {\n        // Identify by name or raw index.\n        return node.getId();\n      }\n\n      function processNode(newIndex, oldIndex) {\n        var thisNode = newIndex != null ? thisViewChildren[newIndex] : null;\n        var oldNode = oldIndex != null ? oldViewChildren[oldIndex] : null;\n        var group = doRenderNode(thisNode, oldNode, parentGroup, depth);\n        group && dualTravel(thisNode && thisNode.viewChildren || [], oldNode && oldNode.viewChildren || [], group, sameTree, depth + 1);\n      }\n    }\n\n    function clearStorage(storage) {\n      var willDeleteEls = createStorage();\n      storage && each(storage, function (store, storageName) {\n        var delEls = willDeleteEls[storageName];\n        each(store, function (el) {\n          el && (delEls.push(el), inner(el).willDelete = true);\n        });\n      });\n      return willDeleteEls;\n    }\n\n    function renderFinally() {\n      each(willDeleteEls, function (els) {\n        each(els, function (el) {\n          el.parent && el.parent.remove(el);\n        });\n      });\n      each(willInvisibleEls, function (el) {\n        el.invisible = true; // Setting invisible is for optimizing, so no need to set dirty,\n        // just mark as invisible.\n\n        el.dirty();\n      });\n    }\n  };\n\n  TreemapView.prototype._doAnimation = function (containerGroup, renderResult, seriesModel, reRoot) {\n    var durationOption = seriesModel.get('animationDurationUpdate');\n    var easingOption = seriesModel.get('animationEasing'); // TODO: do not support function until necessary.\n\n    var duration = (isFunction(durationOption) ? 0 : durationOption) || 0;\n    var easing = (isFunction(easingOption) ? null : easingOption) || 'cubicOut';\n    var animationWrap = animationUtil.createWrap(); // Make delete animations.\n\n    each(renderResult.willDeleteEls, function (store, storageName) {\n      each(store, function (el, rawIndex) {\n        if (el.invisible) {\n          return;\n        }\n\n        var parent = el.parent; // Always has parent, and parent is nodeGroup.\n\n        var target;\n        var innerStore = inner(parent);\n\n        if (reRoot && reRoot.direction === 'drillDown') {\n          target = parent === reRoot.rootNodeGroup // This is the content element of view root.\n          // Only `content` will enter this branch, because\n          // `background` and `nodeGroup` will not be deleted.\n          ? {\n            shape: {\n              x: 0,\n              y: 0,\n              width: innerStore.nodeWidth,\n              height: innerStore.nodeHeight\n            },\n            style: {\n              opacity: 0\n            }\n          } // Others.\n          : {\n            style: {\n              opacity: 0\n            }\n          };\n        } else {\n          var targetX = 0;\n          var targetY = 0;\n\n          if (!innerStore.willDelete) {\n            // Let node animate to right-bottom corner, cooperating with fadeout,\n            // which is appropriate for user understanding.\n            // Divided by 2 for reRoot rolling up effect.\n            targetX = innerStore.nodeWidth / 2;\n            targetY = innerStore.nodeHeight / 2;\n          }\n\n          target = storageName === 'nodeGroup' ? {\n            x: targetX,\n            y: targetY,\n            style: {\n              opacity: 0\n            }\n          } : {\n            shape: {\n              x: targetX,\n              y: targetY,\n              width: 0,\n              height: 0\n            },\n            style: {\n              opacity: 0\n            }\n          };\n        } // TODO: do not support delay until necessary.\n\n\n        target && animationWrap.add(el, target, duration, 0, easing);\n      });\n    }); // Make other animations\n\n    each(this._storage, function (store, storageName) {\n      each(store, function (el, rawIndex) {\n        var last = renderResult.lastsForAnimation[storageName][rawIndex];\n        var target = {};\n\n        if (!last) {\n          return;\n        }\n\n        if (el instanceof graphic.Group) {\n          if (last.oldX != null) {\n            target.x = el.x;\n            target.y = el.y;\n            el.x = last.oldX;\n            el.y = last.oldY;\n          }\n        } else {\n          if (last.oldShape) {\n            target.shape = extend({}, el.shape);\n            el.setShape(last.oldShape);\n          }\n\n          if (last.fadein) {\n            el.setStyle('opacity', 0);\n            target.style = {\n              opacity: 1\n            };\n          } // When animation is stopped for succedent animation starting,\n          // el.style.opacity might not be 1\n          else if (el.style.opacity !== 1) {\n              target.style = {\n                opacity: 1\n              };\n            }\n        }\n\n        animationWrap.add(el, target, duration, 0, easing);\n      });\n    }, this);\n    this._state = 'animating';\n    animationWrap.finished(bind(function () {\n      this._state = 'ready';\n      renderResult.renderFinally();\n    }, this)).start();\n  };\n\n  TreemapView.prototype._resetController = function (api) {\n    var controller = this._controller; // Init controller.\n\n    if (!controller) {\n      controller = this._controller = new RoamController(api.getZr());\n      controller.enable(this.seriesModel.get('roam'));\n      controller.on('pan', bind(this._onPan, this));\n      controller.on('zoom', bind(this._onZoom, this));\n    }\n\n    var rect = new BoundingRect(0, 0, api.getWidth(), api.getHeight());\n    controller.setPointerChecker(function (e, x, y) {\n      return rect.contain(x, y);\n    });\n  };\n\n  TreemapView.prototype._clearController = function () {\n    var controller = this._controller;\n\n    if (controller) {\n      controller.dispose();\n      controller = null;\n    }\n  };\n\n  TreemapView.prototype._onPan = function (e) {\n    if (this._state !== 'animating' && (Math.abs(e.dx) > DRAG_THRESHOLD || Math.abs(e.dy) > DRAG_THRESHOLD)) {\n      // These param must not be cached.\n      var root = this.seriesModel.getData().tree.root;\n\n      if (!root) {\n        return;\n      }\n\n      var rootLayout = root.getLayout();\n\n      if (!rootLayout) {\n        return;\n      }\n\n      this.api.dispatchAction({\n        type: 'treemapMove',\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        rootRect: {\n          x: rootLayout.x + e.dx,\n          y: rootLayout.y + e.dy,\n          width: rootLayout.width,\n          height: rootLayout.height\n        }\n      });\n    }\n  };\n\n  TreemapView.prototype._onZoom = function (e) {\n    var mouseX = e.originX;\n    var mouseY = e.originY;\n\n    if (this._state !== 'animating') {\n      // These param must not be cached.\n      var root = this.seriesModel.getData().tree.root;\n\n      if (!root) {\n        return;\n      }\n\n      var rootLayout = root.getLayout();\n\n      if (!rootLayout) {\n        return;\n      }\n\n      var rect = new BoundingRect(rootLayout.x, rootLayout.y, rootLayout.width, rootLayout.height);\n      var layoutInfo = this.seriesModel.layoutInfo; // Transform mouse coord from global to containerGroup.\n\n      mouseX -= layoutInfo.x;\n      mouseY -= layoutInfo.y; // Scale root bounding rect.\n\n      var m = matrix.create();\n      matrix.translate(m, m, [-mouseX, -mouseY]);\n      matrix.scale(m, m, [e.scale, e.scale]);\n      matrix.translate(m, m, [mouseX, mouseY]);\n      rect.applyTransform(m);\n      this.api.dispatchAction({\n        type: 'treemapRender',\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        rootRect: {\n          x: rect.x,\n          y: rect.y,\n          width: rect.width,\n          height: rect.height\n        }\n      });\n    }\n  };\n\n  TreemapView.prototype._initEvents = function (containerGroup) {\n    var _this = this;\n\n    containerGroup.on('click', function (e) {\n      if (_this._state !== 'ready') {\n        return;\n      }\n\n      var nodeClick = _this.seriesModel.get('nodeClick', true);\n\n      if (!nodeClick) {\n        return;\n      }\n\n      var targetInfo = _this.findTarget(e.offsetX, e.offsetY);\n\n      if (!targetInfo) {\n        return;\n      }\n\n      var node = targetInfo.node;\n\n      if (node.getLayout().isLeafRoot) {\n        _this._rootToNode(targetInfo);\n      } else {\n        if (nodeClick === 'zoomToNode') {\n          _this._zoomToNode(targetInfo);\n        } else if (nodeClick === 'link') {\n          var itemModel = node.hostTree.data.getItemModel(node.dataIndex);\n          var link = itemModel.get('link', true);\n          var linkTarget = itemModel.get('target', true) || 'blank';\n          link && windowOpen(link, linkTarget);\n        }\n      }\n    }, this);\n  };\n\n  TreemapView.prototype._renderBreadcrumb = function (seriesModel, api, targetInfo) {\n    var _this = this;\n\n    if (!targetInfo) {\n      targetInfo = seriesModel.get('leafDepth', true) != null ? {\n        node: seriesModel.getViewRoot()\n      } // FIXME\n      // better way?\n      // Find breadcrumb tail on center of containerGroup.\n      : this.findTarget(api.getWidth() / 2, api.getHeight() / 2);\n\n      if (!targetInfo) {\n        targetInfo = {\n          node: seriesModel.getData().tree.root\n        };\n      }\n    }\n\n    (this._breadcrumb || (this._breadcrumb = new Breadcrumb(this.group))).render(seriesModel, api, targetInfo.node, function (node) {\n      if (_this._state !== 'animating') {\n        helper.aboveViewRoot(seriesModel.getViewRoot(), node) ? _this._rootToNode({\n          node: node\n        }) : _this._zoomToNode({\n          node: node\n        });\n      }\n    });\n  };\n  /**\n   * @override\n   */\n\n\n  TreemapView.prototype.remove = function () {\n    this._clearController();\n\n    this._containerGroup && this._containerGroup.removeAll();\n    this._storage = createStorage();\n    this._state = 'ready';\n    this._breadcrumb && this._breadcrumb.remove();\n  };\n\n  TreemapView.prototype.dispose = function () {\n    this._clearController();\n  };\n\n  TreemapView.prototype._zoomToNode = function (targetInfo) {\n    this.api.dispatchAction({\n      type: 'treemapZoomToNode',\n      from: this.uid,\n      seriesId: this.seriesModel.id,\n      targetNode: targetInfo.node\n    });\n  };\n\n  TreemapView.prototype._rootToNode = function (targetInfo) {\n    this.api.dispatchAction({\n      type: 'treemapRootToNode',\n      from: this.uid,\n      seriesId: this.seriesModel.id,\n      targetNode: targetInfo.node\n    });\n  };\n  /**\n   * @public\n   * @param {number} x Global coord x.\n   * @param {number} y Global coord y.\n   * @return {Object} info If not found, return undefined;\n   * @return {number} info.node Target node.\n   * @return {number} info.offsetX x refer to target node.\n   * @return {number} info.offsetY y refer to target node.\n   */\n\n\n  TreemapView.prototype.findTarget = function (x, y) {\n    var targetInfo;\n    var viewRoot = this.seriesModel.getViewRoot();\n    viewRoot.eachNode({\n      attr: 'viewChildren',\n      order: 'preorder'\n    }, function (node) {\n      var bgEl = this._storage.background[node.getRawIndex()]; // If invisible, there might be no element.\n\n\n      if (bgEl) {\n        var point = bgEl.transformCoordToLocal(x, y);\n        var shape = bgEl.shape; // For performance consideration, don't use 'getBoundingRect'.\n\n        if (shape.x <= point[0] && point[0] <= shape.x + shape.width && shape.y <= point[1] && point[1] <= shape.y + shape.height) {\n          targetInfo = {\n            node: node,\n            offsetX: point[0],\n            offsetY: point[1]\n          };\n        } else {\n          return false; // Suppress visit subtree.\n        }\n      }\n    }, this);\n    return targetInfo;\n  };\n\n  TreemapView.type = 'treemap';\n  return TreemapView;\n}(ChartView);\n/**\n * @inner\n */\n\n\nfunction createStorage() {\n  return {\n    nodeGroup: [],\n    background: [],\n    content: []\n  };\n}\n/**\n * @inner\n * @return Return undefined means do not travel further.\n */\n\n\nfunction renderNode(seriesModel, thisStorage, oldStorage, reRoot, lastsForAnimation, willInvisibleEls, thisNode, oldNode, parentGroup, depth) {\n  // Whether under viewRoot.\n  if (!thisNode) {\n    // Deleting nodes will be performed finally. This method just find\n    // element from old storage, or create new element, set them to new\n    // storage, and set styles.\n    return;\n  } // -------------------------------------------------------------------\n  // Start of closure variables available in \"Procedures in renderNode\".\n\n\n  var thisLayout = thisNode.getLayout();\n  var data = seriesModel.getData();\n  var nodeModel = thisNode.getModel(); // Only for enabling highlight/downplay. Clear firstly.\n  // Because some node will not be rendered.\n\n  data.setItemGraphicEl(thisNode.dataIndex, null);\n\n  if (!thisLayout || !thisLayout.isInView) {\n    return;\n  }\n\n  var thisWidth = thisLayout.width;\n  var thisHeight = thisLayout.height;\n  var borderWidth = thisLayout.borderWidth;\n  var thisInvisible = thisLayout.invisible;\n  var thisRawIndex = thisNode.getRawIndex();\n  var oldRawIndex = oldNode && oldNode.getRawIndex();\n  var thisViewChildren = thisNode.viewChildren;\n  var upperHeight = thisLayout.upperHeight;\n  var isParent = thisViewChildren && thisViewChildren.length;\n  var itemStyleNormalModel = nodeModel.getModel('itemStyle');\n  var itemStyleEmphasisModel = nodeModel.getModel(['emphasis', 'itemStyle']);\n  var itemStyleBlurModel = nodeModel.getModel(['blur', 'itemStyle']);\n  var itemStyleSelectModel = nodeModel.getModel(['select', 'itemStyle']);\n  var borderRadius = itemStyleNormalModel.get('borderRadius') || 0; // End of closure ariables available in \"Procedures in renderNode\".\n  // -----------------------------------------------------------------\n  // Node group\n\n  var group = giveGraphic('nodeGroup', Group);\n\n  if (!group) {\n    return;\n  }\n\n  parentGroup.add(group); // x,y are not set when el is above view root.\n\n  group.x = thisLayout.x || 0;\n  group.y = thisLayout.y || 0;\n  group.markRedraw();\n  inner(group).nodeWidth = thisWidth;\n  inner(group).nodeHeight = thisHeight;\n\n  if (thisLayout.isAboveViewRoot) {\n    return group;\n  } // Background\n\n\n  var bg = giveGraphic('background', Rect, depth, Z2_BG);\n  bg && renderBackground(group, bg, isParent && thisLayout.upperLabelHeight);\n  var emphasisModel = nodeModel.getModel('emphasis');\n  var focus = emphasisModel.get('focus');\n  var blurScope = emphasisModel.get('blurScope');\n  var isDisabled = emphasisModel.get('disabled');\n  var focusOrIndices = focus === 'ancestor' ? thisNode.getAncestorsIndices() : focus === 'descendant' ? thisNode.getDescendantIndices() : focus; // No children, render content.\n\n  if (isParent) {\n    // Because of the implementation about \"traverse\" in graphic hover style, we\n    // can not set hover listener on the \"group\" of non-leaf node. Otherwise the\n    // hover event from the descendents will be listenered.\n    if (isHighDownDispatcher(group)) {\n      setAsHighDownDispatcher(group, false);\n    }\n\n    if (bg) {\n      setAsHighDownDispatcher(bg, !isDisabled); // Only for enabling highlight/downplay.\n\n      data.setItemGraphicEl(thisNode.dataIndex, bg);\n      enableHoverFocus(bg, focusOrIndices, blurScope);\n    }\n  } else {\n    var content = giveGraphic('content', Rect, depth, Z2_CONTENT);\n    content && renderContent(group, content);\n    bg.disableMorphing = true;\n\n    if (bg && isHighDownDispatcher(bg)) {\n      setAsHighDownDispatcher(bg, false);\n    }\n\n    setAsHighDownDispatcher(group, !isDisabled); // Only for enabling highlight/downplay.\n\n    data.setItemGraphicEl(thisNode.dataIndex, group);\n    enableHoverFocus(group, focusOrIndices, blurScope);\n  }\n\n  return group; // ----------------------------\n  // | Procedures in renderNode |\n  // ----------------------------\n\n  function renderBackground(group, bg, useUpperLabel) {\n    var ecData = getECData(bg); // For tooltip.\n\n    ecData.dataIndex = thisNode.dataIndex;\n    ecData.seriesIndex = seriesModel.seriesIndex;\n    bg.setShape({\n      x: 0,\n      y: 0,\n      width: thisWidth,\n      height: thisHeight,\n      r: borderRadius\n    });\n\n    if (thisInvisible) {\n      // If invisible, do not set visual, otherwise the element will\n      // change immediately before animation. We think it is OK to\n      // remain its origin color when moving out of the view window.\n      processInvisible(bg);\n    } else {\n      bg.invisible = false;\n      var style = thisNode.getVisual('style');\n      var visualBorderColor = style.stroke;\n      var normalStyle = getItemStyleNormal(itemStyleNormalModel);\n      normalStyle.fill = visualBorderColor;\n      var emphasisStyle = getStateItemStyle(itemStyleEmphasisModel);\n      emphasisStyle.fill = itemStyleEmphasisModel.get('borderColor');\n      var blurStyle = getStateItemStyle(itemStyleBlurModel);\n      blurStyle.fill = itemStyleBlurModel.get('borderColor');\n      var selectStyle = getStateItemStyle(itemStyleSelectModel);\n      selectStyle.fill = itemStyleSelectModel.get('borderColor');\n\n      if (useUpperLabel) {\n        var upperLabelWidth = thisWidth - 2 * borderWidth;\n        prepareText( // PENDING: convert ZRColor to ColorString for text.\n        bg, visualBorderColor, style.opacity, {\n          x: borderWidth,\n          y: 0,\n          width: upperLabelWidth,\n          height: upperHeight\n        });\n      } // For old bg.\n      else {\n          bg.removeTextContent();\n        }\n\n      bg.setStyle(normalStyle);\n      bg.ensureState('emphasis').style = emphasisStyle;\n      bg.ensureState('blur').style = blurStyle;\n      bg.ensureState('select').style = selectStyle;\n      setDefaultStateProxy(bg);\n    }\n\n    group.add(bg);\n  }\n\n  function renderContent(group, content) {\n    var ecData = getECData(content); // For tooltip.\n\n    ecData.dataIndex = thisNode.dataIndex;\n    ecData.seriesIndex = seriesModel.seriesIndex;\n    var contentWidth = Math.max(thisWidth - 2 * borderWidth, 0);\n    var contentHeight = Math.max(thisHeight - 2 * borderWidth, 0);\n    content.culling = true;\n    content.setShape({\n      x: borderWidth,\n      y: borderWidth,\n      width: contentWidth,\n      height: contentHeight,\n      r: borderRadius\n    });\n\n    if (thisInvisible) {\n      // If invisible, do not set visual, otherwise the element will\n      // change immediately before animation. We think it is OK to\n      // remain its origin color when moving out of the view window.\n      processInvisible(content);\n    } else {\n      content.invisible = false;\n      var nodeStyle = thisNode.getVisual('style');\n      var visualColor = nodeStyle.fill;\n      var normalStyle = getItemStyleNormal(itemStyleNormalModel);\n      normalStyle.fill = visualColor;\n      normalStyle.decal = nodeStyle.decal;\n      var emphasisStyle = getStateItemStyle(itemStyleEmphasisModel);\n      var blurStyle = getStateItemStyle(itemStyleBlurModel);\n      var selectStyle = getStateItemStyle(itemStyleSelectModel); // PENDING: convert ZRColor to ColorString for text.\n\n      prepareText(content, visualColor, nodeStyle.opacity, null);\n      content.setStyle(normalStyle);\n      content.ensureState('emphasis').style = emphasisStyle;\n      content.ensureState('blur').style = blurStyle;\n      content.ensureState('select').style = selectStyle;\n      setDefaultStateProxy(content);\n    }\n\n    group.add(content);\n  }\n\n  function processInvisible(element) {\n    // Delay invisible setting utill animation finished,\n    // avoid element vanish suddenly before animation.\n    !element.invisible && willInvisibleEls.push(element);\n  }\n\n  function prepareText(rectEl, visualColor, visualOpacity, // Can be null/undefined\n  upperLabelRect) {\n    var normalLabelModel = nodeModel.getModel(upperLabelRect ? PATH_UPPERLABEL_NORMAL : PATH_LABEL_NOAMAL);\n    var defaultText = convertOptionIdName(nodeModel.get('name'), null);\n    var isShow = normalLabelModel.getShallow('show');\n    setLabelStyle(rectEl, getLabelStatesModels(nodeModel, upperLabelRect ? PATH_UPPERLABEL_NORMAL : PATH_LABEL_NOAMAL), {\n      defaultText: isShow ? defaultText : null,\n      inheritColor: visualColor,\n      defaultOpacity: visualOpacity,\n      labelFetcher: seriesModel,\n      labelDataIndex: thisNode.dataIndex\n    });\n    var textEl = rectEl.getTextContent();\n\n    if (!textEl) {\n      return;\n    }\n\n    var textStyle = textEl.style;\n    var textPadding = normalizeCssArray(textStyle.padding || 0);\n\n    if (upperLabelRect) {\n      rectEl.setTextConfig({\n        layoutRect: upperLabelRect\n      });\n      textEl.disableLabelLayout = true;\n    }\n\n    textEl.beforeUpdate = function () {\n      var width = Math.max((upperLabelRect ? upperLabelRect.width : rectEl.shape.width) - textPadding[1] - textPadding[3], 0);\n      var height = Math.max((upperLabelRect ? upperLabelRect.height : rectEl.shape.height) - textPadding[0] - textPadding[2], 0);\n\n      if (textStyle.width !== width || textStyle.height !== height) {\n        textEl.setStyle({\n          width: width,\n          height: height\n        });\n      }\n    };\n\n    textStyle.truncateMinChar = 2;\n    textStyle.lineOverflow = 'truncate';\n    addDrillDownIcon(textStyle, upperLabelRect, thisLayout);\n    var textEmphasisState = textEl.getState('emphasis');\n    addDrillDownIcon(textEmphasisState ? textEmphasisState.style : null, upperLabelRect, thisLayout);\n  }\n\n  function addDrillDownIcon(style, upperLabelRect, thisLayout) {\n    var text = style ? style.text : null;\n\n    if (!upperLabelRect && thisLayout.isLeafRoot && text != null) {\n      var iconChar = seriesModel.get('drillDownIcon', true);\n      style.text = iconChar ? iconChar + ' ' + text : text;\n    }\n  }\n\n  function giveGraphic(storageName, Ctor, depth, z) {\n    var element = oldRawIndex != null && oldStorage[storageName][oldRawIndex];\n    var lasts = lastsForAnimation[storageName];\n\n    if (element) {\n      // Remove from oldStorage\n      oldStorage[storageName][oldRawIndex] = null;\n      prepareAnimationWhenHasOld(lasts, element);\n    } // If invisible and no old element, do not create new element (for optimizing).\n    else if (!thisInvisible) {\n        element = new Ctor();\n\n        if (element instanceof Displayable) {\n          element.z2 = calculateZ2(depth, z);\n        }\n\n        prepareAnimationWhenNoOld(lasts, element);\n      } // Set to thisStorage\n\n\n    return thisStorage[storageName][thisRawIndex] = element;\n  }\n\n  function prepareAnimationWhenHasOld(lasts, element) {\n    var lastCfg = lasts[thisRawIndex] = {};\n\n    if (element instanceof Group) {\n      lastCfg.oldX = element.x;\n      lastCfg.oldY = element.y;\n    } else {\n      lastCfg.oldShape = extend({}, element.shape);\n    }\n  } // If a element is new, we need to find the animation start point carefully,\n  // otherwise it will looks strange when 'zoomToNode'.\n\n\n  function prepareAnimationWhenNoOld(lasts, element) {\n    var lastCfg = lasts[thisRawIndex] = {};\n    var parentNode = thisNode.parentNode;\n    var isGroup = element instanceof graphic.Group;\n\n    if (parentNode && (!reRoot || reRoot.direction === 'drillDown')) {\n      var parentOldX = 0;\n      var parentOldY = 0; // New nodes appear from right-bottom corner in 'zoomToNode' animation.\n      // For convenience, get old bounding rect from background.\n\n      var parentOldBg = lastsForAnimation.background[parentNode.getRawIndex()];\n\n      if (!reRoot && parentOldBg && parentOldBg.oldShape) {\n        parentOldX = parentOldBg.oldShape.width;\n        parentOldY = parentOldBg.oldShape.height;\n      } // When no parent old shape found, its parent is new too,\n      // so we can just use {x:0, y:0}.\n\n\n      if (isGroup) {\n        lastCfg.oldX = 0;\n        lastCfg.oldY = parentOldY;\n      } else {\n        lastCfg.oldShape = {\n          x: parentOldX,\n          y: parentOldY,\n          width: 0,\n          height: 0\n        };\n      }\n    } // Fade in, user can be aware that these nodes are new.\n\n\n    lastCfg.fadein = !isGroup;\n  }\n} // We cannot set all background with the same z, because the behaviour of\n// drill down and roll up differ background creation sequence from tree\n// hierarchy sequence, which cause lower background elements to overlap\n// upper ones. So we calculate z based on depth.\n// Moreover, we try to shrink down z interval to [0, 1] to avoid that\n// treemap with large z overlaps other components.\n\n\nfunction calculateZ2(depth, z2InLevel) {\n  return depth * Z2_BASE + z2InLevel;\n}\n\nexport default TreemapView;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport VisualMapping from '../../visual/VisualMapping.js';\nimport { each, extend, isArray } from 'zrender/lib/core/util.js';\nimport { modifyHSL, modifyAlpha } from 'zrender/lib/tool/color.js';\nimport { makeInner } from '../../util/model.js';\nvar ITEM_STYLE_NORMAL = 'itemStyle';\nvar inner = makeInner();\nexport default {\n  seriesType: 'treemap',\n  reset: function (seriesModel) {\n    var tree = seriesModel.getData().tree;\n    var root = tree.root;\n\n    if (root.isRemoved()) {\n      return;\n    }\n\n    travelTree(root, // Visual should calculate from tree root but not view root.\n    {}, seriesModel.getViewRoot().getAncestors(), seriesModel);\n  }\n};\n\nfunction travelTree(node, designatedVisual, viewRootAncestors, seriesModel) {\n  var nodeModel = node.getModel();\n  var nodeLayout = node.getLayout();\n  var data = node.hostTree.data; // Optimize\n\n  if (!nodeLayout || nodeLayout.invisible || !nodeLayout.isInView) {\n    return;\n  }\n\n  var nodeItemStyleModel = nodeModel.getModel(ITEM_STYLE_NORMAL);\n  var visuals = buildVisuals(nodeItemStyleModel, designatedVisual, seriesModel);\n  var existsStyle = data.ensureUniqueItemVisual(node.dataIndex, 'style'); // calculate border color\n\n  var borderColor = nodeItemStyleModel.get('borderColor');\n  var borderColorSaturation = nodeItemStyleModel.get('borderColorSaturation');\n  var thisNodeColor;\n\n  if (borderColorSaturation != null) {\n    // For performance, do not always execute 'calculateColor'.\n    thisNodeColor = calculateColor(visuals);\n    borderColor = calculateBorderColor(borderColorSaturation, thisNodeColor);\n  }\n\n  existsStyle.stroke = borderColor;\n  var viewChildren = node.viewChildren;\n\n  if (!viewChildren || !viewChildren.length) {\n    thisNodeColor = calculateColor(visuals); // Apply visual to this node.\n\n    existsStyle.fill = thisNodeColor;\n  } else {\n    var mapping_1 = buildVisualMapping(node, nodeModel, nodeLayout, nodeItemStyleModel, visuals, viewChildren); // Designate visual to children.\n\n    each(viewChildren, function (child, index) {\n      // If higher than viewRoot, only ancestors of viewRoot is needed to visit.\n      if (child.depth >= viewRootAncestors.length || child === viewRootAncestors[child.depth]) {\n        var childVisual = mapVisual(nodeModel, visuals, child, index, mapping_1, seriesModel);\n        travelTree(child, childVisual, viewRootAncestors, seriesModel);\n      }\n    });\n  }\n}\n\nfunction buildVisuals(nodeItemStyleModel, designatedVisual, seriesModel) {\n  var visuals = extend({}, designatedVisual);\n  var designatedVisualItemStyle = seriesModel.designatedVisualItemStyle;\n  each(['color', 'colorAlpha', 'colorSaturation'], function (visualName) {\n    // Priority: thisNode > thisLevel > parentNodeDesignated > seriesModel\n    designatedVisualItemStyle[visualName] = designatedVisual[visualName];\n    var val = nodeItemStyleModel.get(visualName);\n    designatedVisualItemStyle[visualName] = null;\n    val != null && (visuals[visualName] = val);\n  });\n  return visuals;\n}\n\nfunction calculateColor(visuals) {\n  var color = getValueVisualDefine(visuals, 'color');\n\n  if (color) {\n    var colorAlpha = getValueVisualDefine(visuals, 'colorAlpha');\n    var colorSaturation = getValueVisualDefine(visuals, 'colorSaturation');\n\n    if (colorSaturation) {\n      color = modifyHSL(color, null, null, colorSaturation);\n    }\n\n    if (colorAlpha) {\n      color = modifyAlpha(color, colorAlpha);\n    }\n\n    return color;\n  }\n}\n\nfunction calculateBorderColor(borderColorSaturation, thisNodeColor) {\n  return thisNodeColor != null // Can only be string\n  ? modifyHSL(thisNodeColor, null, null, borderColorSaturation) : null;\n}\n\nfunction getValueVisualDefine(visuals, name) {\n  var value = visuals[name];\n\n  if (value != null && value !== 'none') {\n    return value;\n  }\n}\n\nfunction buildVisualMapping(node, nodeModel, nodeLayout, nodeItemStyleModel, visuals, viewChildren) {\n  if (!viewChildren || !viewChildren.length) {\n    return;\n  }\n\n  var rangeVisual = getRangeVisual(nodeModel, 'color') || visuals.color != null && visuals.color !== 'none' && (getRangeVisual(nodeModel, 'colorAlpha') || getRangeVisual(nodeModel, 'colorSaturation'));\n\n  if (!rangeVisual) {\n    return;\n  }\n\n  var visualMin = nodeModel.get('visualMin');\n  var visualMax = nodeModel.get('visualMax');\n  var dataExtent = nodeLayout.dataExtent.slice();\n  visualMin != null && visualMin < dataExtent[0] && (dataExtent[0] = visualMin);\n  visualMax != null && visualMax > dataExtent[1] && (dataExtent[1] = visualMax);\n  var colorMappingBy = nodeModel.get('colorMappingBy');\n  var opt = {\n    type: rangeVisual.name,\n    dataExtent: dataExtent,\n    visual: rangeVisual.range\n  };\n\n  if (opt.type === 'color' && (colorMappingBy === 'index' || colorMappingBy === 'id')) {\n    opt.mappingMethod = 'category';\n    opt.loop = true; // categories is ordinal, so do not set opt.categories.\n  } else {\n    opt.mappingMethod = 'linear';\n  }\n\n  var mapping = new VisualMapping(opt);\n  inner(mapping).drColorMappingBy = colorMappingBy;\n  return mapping;\n} // Notice: If we don't have the attribute 'colorRange', but only use\n// attribute 'color' to represent both concepts of 'colorRange' and 'color',\n// (It means 'colorRange' when 'color' is Array, means 'color' when not array),\n// this problem will be encountered:\n// If a level-1 node doesn't have children, and its siblings have children,\n// and colorRange is set on level-1, then the node cannot be colored.\n// So we separate 'colorRange' and 'color' to different attributes.\n\n\nfunction getRangeVisual(nodeModel, name) {\n  // 'colorRange', 'colorARange', 'colorSRange'.\n  // If not exists on this node, fetch from levels and series.\n  var range = nodeModel.get(name);\n  return isArray(range) && range.length ? {\n    name: name,\n    range: range\n  } : null;\n}\n\nfunction mapVisual(nodeModel, visuals, child, index, mapping, seriesModel) {\n  var childVisuals = extend({}, visuals);\n\n  if (mapping) {\n    // Only support color, colorAlpha, colorSaturation.\n    var mappingType = mapping.type;\n    var colorMappingBy = mappingType === 'color' && inner(mapping).drColorMappingBy;\n    var value = colorMappingBy === 'index' ? index : colorMappingBy === 'id' ? seriesModel.mapIdToIndex(child.getId()) : child.getValue(nodeModel.get('visualDimension'));\n    childVisuals[mappingType] = mapping.mapValueToVisual(value);\n  }\n\n  return childVisuals;\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* A third-party license is embedded for some of the code in this file:\n* The treemap layout implementation was originally copied from\n* \"d3.js\" with some modifications made for this project.\n* (See more details in the comment of the method \"squarify\" below.)\n* The use of the source code of this file is also subject to the terms\n* and consitions of the license of \"d3.js\" (BSD-3Clause, see\n* </licenses/LICENSE-d3>).\n*/\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport BoundingRect from 'zrender/lib/core/BoundingRect.js';\nimport { parsePercent, MAX_SAFE_INTEGER } from '../../util/number.js';\nimport * as layout from '../../util/layout.js';\nimport * as helper from '../helper/treeHelper.js';\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar retrieveValue = zrUtil.retrieve;\nvar each = zrUtil.each;\nvar PATH_BORDER_WIDTH = ['itemStyle', 'borderWidth'];\nvar PATH_GAP_WIDTH = ['itemStyle', 'gapWidth'];\nvar PATH_UPPER_LABEL_SHOW = ['upperLabel', 'show'];\nvar PATH_UPPER_LABEL_HEIGHT = ['upperLabel', 'height'];\n;\n/**\n * @public\n */\n\nexport default {\n  seriesType: 'treemap',\n  reset: function (seriesModel, ecModel, api, payload) {\n    // Layout result in each node:\n    // {x, y, width, height, area, borderWidth}\n    var ecWidth = api.getWidth();\n    var ecHeight = api.getHeight();\n    var seriesOption = seriesModel.option;\n    var layoutInfo = layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n    var size = seriesOption.size || []; // Compatible with ec2.\n\n    var containerWidth = parsePercent(retrieveValue(layoutInfo.width, size[0]), ecWidth);\n    var containerHeight = parsePercent(retrieveValue(layoutInfo.height, size[1]), ecHeight); // Fetch payload info.\n\n    var payloadType = payload && payload.type;\n    var types = ['treemapZoomToNode', 'treemapRootToNode'];\n    var targetInfo = helper.retrieveTargetInfo(payload, types, seriesModel);\n    var rootRect = payloadType === 'treemapRender' || payloadType === 'treemapMove' ? payload.rootRect : null;\n    var viewRoot = seriesModel.getViewRoot();\n    var viewAbovePath = helper.getPathToRoot(viewRoot);\n\n    if (payloadType !== 'treemapMove') {\n      var rootSize = payloadType === 'treemapZoomToNode' ? estimateRootSize(seriesModel, targetInfo, viewRoot, containerWidth, containerHeight) : rootRect ? [rootRect.width, rootRect.height] : [containerWidth, containerHeight];\n      var sort_1 = seriesOption.sort;\n\n      if (sort_1 && sort_1 !== 'asc' && sort_1 !== 'desc') {\n        // Default to be desc order.\n        sort_1 = 'desc';\n      }\n\n      var options = {\n        squareRatio: seriesOption.squareRatio,\n        sort: sort_1,\n        leafDepth: seriesOption.leafDepth\n      }; // layout should be cleared because using updateView but not update.\n\n      viewRoot.hostTree.clearLayouts(); // TODO\n      // optimize: if out of view clip, do not layout.\n      // But take care that if do not render node out of view clip,\n      // how to calculate start po\n\n      var viewRootLayout_1 = {\n        x: 0,\n        y: 0,\n        width: rootSize[0],\n        height: rootSize[1],\n        area: rootSize[0] * rootSize[1]\n      };\n      viewRoot.setLayout(viewRootLayout_1);\n      squarify(viewRoot, options, false, 0); // Supplement layout.\n\n      viewRootLayout_1 = viewRoot.getLayout();\n      each(viewAbovePath, function (node, index) {\n        var childValue = (viewAbovePath[index + 1] || viewRoot).getValue();\n        node.setLayout(zrUtil.extend({\n          dataExtent: [childValue, childValue],\n          borderWidth: 0,\n          upperHeight: 0\n        }, viewRootLayout_1));\n      });\n    }\n\n    var treeRoot = seriesModel.getData().tree.root;\n    treeRoot.setLayout(calculateRootPosition(layoutInfo, rootRect, targetInfo), true);\n    seriesModel.setLayoutInfo(layoutInfo); // FIXME\n    // 现在没有clip功能，暂时取ec高宽。\n\n    prunning(treeRoot, // Transform to base element coordinate system.\n    new BoundingRect(-layoutInfo.x, -layoutInfo.y, ecWidth, ecHeight), viewAbovePath, viewRoot, 0);\n  }\n};\n/**\n * Layout treemap with squarify algorithm.\n * The original presentation of this algorithm\n * was made by Mark Bruls, Kees Huizing, and Jarke J. van Wijk\n * <https://graphics.ethz.ch/teaching/scivis_common/Literature/squarifiedTreeMaps.pdf>.\n * The implementation of this algorithm was originally copied from \"d3.js\"\n * <https://github.com/d3/d3/blob/9cc9a875e636a1dcf36cc1e07bdf77e1ad6e2c74/src/layout/treemap.js>\n * with some modifications made for this program.\n * See the license statement at the head of this file.\n *\n * @protected\n * @param {module:echarts/data/Tree~TreeNode} node\n * @param {Object} options\n * @param {string} options.sort 'asc' or 'desc'\n * @param {number} options.squareRatio\n * @param {boolean} hideChildren\n * @param {number} depth\n */\n\nfunction squarify(node, options, hideChildren, depth) {\n  var width;\n  var height;\n\n  if (node.isRemoved()) {\n    return;\n  }\n\n  var thisLayout = node.getLayout();\n  width = thisLayout.width;\n  height = thisLayout.height; // Considering border and gap\n\n  var nodeModel = node.getModel();\n  var borderWidth = nodeModel.get(PATH_BORDER_WIDTH);\n  var halfGapWidth = nodeModel.get(PATH_GAP_WIDTH) / 2;\n  var upperLabelHeight = getUpperLabelHeight(nodeModel);\n  var upperHeight = Math.max(borderWidth, upperLabelHeight);\n  var layoutOffset = borderWidth - halfGapWidth;\n  var layoutOffsetUpper = upperHeight - halfGapWidth;\n  node.setLayout({\n    borderWidth: borderWidth,\n    upperHeight: upperHeight,\n    upperLabelHeight: upperLabelHeight\n  }, true);\n  width = mathMax(width - 2 * layoutOffset, 0);\n  height = mathMax(height - layoutOffset - layoutOffsetUpper, 0);\n  var totalArea = width * height;\n  var viewChildren = initChildren(node, nodeModel, totalArea, options, hideChildren, depth);\n\n  if (!viewChildren.length) {\n    return;\n  }\n\n  var rect = {\n    x: layoutOffset,\n    y: layoutOffsetUpper,\n    width: width,\n    height: height\n  };\n  var rowFixedLength = mathMin(width, height);\n  var best = Infinity; // the best row score so far\n\n  var row = [];\n  row.area = 0;\n\n  for (var i = 0, len = viewChildren.length; i < len;) {\n    var child = viewChildren[i];\n    row.push(child);\n    row.area += child.getLayout().area;\n    var score = worst(row, rowFixedLength, options.squareRatio); // continue with this orientation\n\n    if (score <= best) {\n      i++;\n      best = score;\n    } // abort, and try a different orientation\n    else {\n        row.area -= row.pop().getLayout().area;\n        position(row, rowFixedLength, rect, halfGapWidth, false);\n        rowFixedLength = mathMin(rect.width, rect.height);\n        row.length = row.area = 0;\n        best = Infinity;\n      }\n  }\n\n  if (row.length) {\n    position(row, rowFixedLength, rect, halfGapWidth, true);\n  }\n\n  if (!hideChildren) {\n    var childrenVisibleMin = nodeModel.get('childrenVisibleMin');\n\n    if (childrenVisibleMin != null && totalArea < childrenVisibleMin) {\n      hideChildren = true;\n    }\n  }\n\n  for (var i = 0, len = viewChildren.length; i < len; i++) {\n    squarify(viewChildren[i], options, hideChildren, depth + 1);\n  }\n}\n/**\n * Set area to each child, and calculate data extent for visual coding.\n */\n\n\nfunction initChildren(node, nodeModel, totalArea, options, hideChildren, depth) {\n  var viewChildren = node.children || [];\n  var orderBy = options.sort;\n  orderBy !== 'asc' && orderBy !== 'desc' && (orderBy = null);\n  var overLeafDepth = options.leafDepth != null && options.leafDepth <= depth; // leafDepth has higher priority.\n\n  if (hideChildren && !overLeafDepth) {\n    return node.viewChildren = [];\n  } // Sort children, order by desc.\n\n\n  viewChildren = zrUtil.filter(viewChildren, function (child) {\n    return !child.isRemoved();\n  });\n  sort(viewChildren, orderBy);\n  var info = statistic(nodeModel, viewChildren, orderBy);\n\n  if (info.sum === 0) {\n    return node.viewChildren = [];\n  }\n\n  info.sum = filterByThreshold(nodeModel, totalArea, info.sum, orderBy, viewChildren);\n\n  if (info.sum === 0) {\n    return node.viewChildren = [];\n  } // Set area to each child.\n\n\n  for (var i = 0, len = viewChildren.length; i < len; i++) {\n    var area = viewChildren[i].getValue() / info.sum * totalArea; // Do not use setLayout({...}, true), because it is needed to clear last layout.\n\n    viewChildren[i].setLayout({\n      area: area\n    });\n  }\n\n  if (overLeafDepth) {\n    viewChildren.length && node.setLayout({\n      isLeafRoot: true\n    }, true);\n    viewChildren.length = 0;\n  }\n\n  node.viewChildren = viewChildren;\n  node.setLayout({\n    dataExtent: info.dataExtent\n  }, true);\n  return viewChildren;\n}\n/**\n * Consider 'visibleMin'. Modify viewChildren and get new sum.\n */\n\n\nfunction filterByThreshold(nodeModel, totalArea, sum, orderBy, orderedChildren) {\n  // visibleMin is not supported yet when no option.sort.\n  if (!orderBy) {\n    return sum;\n  }\n\n  var visibleMin = nodeModel.get('visibleMin');\n  var len = orderedChildren.length;\n  var deletePoint = len; // Always travel from little value to big value.\n\n  for (var i = len - 1; i >= 0; i--) {\n    var value = orderedChildren[orderBy === 'asc' ? len - i - 1 : i].getValue();\n\n    if (value / sum * totalArea < visibleMin) {\n      deletePoint = i;\n      sum -= value;\n    }\n  }\n\n  orderBy === 'asc' ? orderedChildren.splice(0, len - deletePoint) : orderedChildren.splice(deletePoint, len - deletePoint);\n  return sum;\n}\n/**\n * Sort\n */\n\n\nfunction sort(viewChildren, orderBy) {\n  if (orderBy) {\n    viewChildren.sort(function (a, b) {\n      var diff = orderBy === 'asc' ? a.getValue() - b.getValue() : b.getValue() - a.getValue();\n      return diff === 0 ? orderBy === 'asc' ? a.dataIndex - b.dataIndex : b.dataIndex - a.dataIndex : diff;\n    });\n  }\n\n  return viewChildren;\n}\n/**\n * Statistic\n */\n\n\nfunction statistic(nodeModel, children, orderBy) {\n  // Calculate sum.\n  var sum = 0;\n\n  for (var i = 0, len = children.length; i < len; i++) {\n    sum += children[i].getValue();\n  } // Statistic data extent for latter visual coding.\n  // Notice: data extent should be calculate based on raw children\n  // but not filtered view children, otherwise visual mapping will not\n  // be stable when zoom (where children is filtered by visibleMin).\n\n\n  var dimension = nodeModel.get('visualDimension');\n  var dataExtent; // The same as area dimension.\n\n  if (!children || !children.length) {\n    dataExtent = [NaN, NaN];\n  } else if (dimension === 'value' && orderBy) {\n    dataExtent = [children[children.length - 1].getValue(), children[0].getValue()];\n    orderBy === 'asc' && dataExtent.reverse();\n  } // Other dimension.\n  else {\n      dataExtent = [Infinity, -Infinity];\n      each(children, function (child) {\n        var value = child.getValue(dimension);\n        value < dataExtent[0] && (dataExtent[0] = value);\n        value > dataExtent[1] && (dataExtent[1] = value);\n      });\n    }\n\n  return {\n    sum: sum,\n    dataExtent: dataExtent\n  };\n}\n/**\n * Computes the score for the specified row,\n * as the worst aspect ratio.\n */\n\n\nfunction worst(row, rowFixedLength, ratio) {\n  var areaMax = 0;\n  var areaMin = Infinity;\n\n  for (var i = 0, area = void 0, len = row.length; i < len; i++) {\n    area = row[i].getLayout().area;\n\n    if (area) {\n      area < areaMin && (areaMin = area);\n      area > areaMax && (areaMax = area);\n    }\n  }\n\n  var squareArea = row.area * row.area;\n  var f = rowFixedLength * rowFixedLength * ratio;\n  return squareArea ? mathMax(f * areaMax / squareArea, squareArea / (f * areaMin)) : Infinity;\n}\n/**\n * Positions the specified row of nodes. Modifies `rect`.\n */\n\n\nfunction position(row, rowFixedLength, rect, halfGapWidth, flush) {\n  // When rowFixedLength === rect.width,\n  // it is horizontal subdivision,\n  // rowFixedLength is the width of the subdivision,\n  // rowOtherLength is the height of the subdivision,\n  // and nodes will be positioned from left to right.\n  // wh[idx0WhenH] means: when horizontal,\n  //      wh[idx0WhenH] => wh[0] => 'width'.\n  //      xy[idx1WhenH] => xy[1] => 'y'.\n  var idx0WhenH = rowFixedLength === rect.width ? 0 : 1;\n  var idx1WhenH = 1 - idx0WhenH;\n  var xy = ['x', 'y'];\n  var wh = ['width', 'height'];\n  var last = rect[xy[idx0WhenH]];\n  var rowOtherLength = rowFixedLength ? row.area / rowFixedLength : 0;\n\n  if (flush || rowOtherLength > rect[wh[idx1WhenH]]) {\n    rowOtherLength = rect[wh[idx1WhenH]]; // over+underflow\n  }\n\n  for (var i = 0, rowLen = row.length; i < rowLen; i++) {\n    var node = row[i];\n    var nodeLayout = {};\n    var step = rowOtherLength ? node.getLayout().area / rowOtherLength : 0;\n    var wh1 = nodeLayout[wh[idx1WhenH]] = mathMax(rowOtherLength - 2 * halfGapWidth, 0); // We use Math.max/min to avoid negative width/height when considering gap width.\n\n    var remain = rect[xy[idx0WhenH]] + rect[wh[idx0WhenH]] - last;\n    var modWH = i === rowLen - 1 || remain < step ? remain : step;\n    var wh0 = nodeLayout[wh[idx0WhenH]] = mathMax(modWH - 2 * halfGapWidth, 0);\n    nodeLayout[xy[idx1WhenH]] = rect[xy[idx1WhenH]] + mathMin(halfGapWidth, wh1 / 2);\n    nodeLayout[xy[idx0WhenH]] = last + mathMin(halfGapWidth, wh0 / 2);\n    last += modWH;\n    node.setLayout(nodeLayout, true);\n  }\n\n  rect[xy[idx1WhenH]] += rowOtherLength;\n  rect[wh[idx1WhenH]] -= rowOtherLength;\n} // Return [containerWidth, containerHeight] as default.\n\n\nfunction estimateRootSize(seriesModel, targetInfo, viewRoot, containerWidth, containerHeight) {\n  // If targetInfo.node exists, we zoom to the node,\n  // so estimate whole width and height by target node.\n  var currNode = (targetInfo || {}).node;\n  var defaultSize = [containerWidth, containerHeight];\n\n  if (!currNode || currNode === viewRoot) {\n    return defaultSize;\n  }\n\n  var parent;\n  var viewArea = containerWidth * containerHeight;\n  var area = viewArea * seriesModel.option.zoomToNodeRatio;\n\n  while (parent = currNode.parentNode) {\n    // jshint ignore:line\n    var sum = 0;\n    var siblings = parent.children;\n\n    for (var i = 0, len = siblings.length; i < len; i++) {\n      sum += siblings[i].getValue();\n    }\n\n    var currNodeValue = currNode.getValue();\n\n    if (currNodeValue === 0) {\n      return defaultSize;\n    }\n\n    area *= sum / currNodeValue; // Considering border, suppose aspect ratio is 1.\n\n    var parentModel = parent.getModel();\n    var borderWidth = parentModel.get(PATH_BORDER_WIDTH);\n    var upperHeight = Math.max(borderWidth, getUpperLabelHeight(parentModel));\n    area += 4 * borderWidth * borderWidth + (3 * borderWidth + upperHeight) * Math.pow(area, 0.5);\n    area > MAX_SAFE_INTEGER && (area = MAX_SAFE_INTEGER);\n    currNode = parent;\n  }\n\n  area < viewArea && (area = viewArea);\n  var scale = Math.pow(area / viewArea, 0.5);\n  return [containerWidth * scale, containerHeight * scale];\n} // Root position based on coord of containerGroup\n\n\nfunction calculateRootPosition(layoutInfo, rootRect, targetInfo) {\n  if (rootRect) {\n    return {\n      x: rootRect.x,\n      y: rootRect.y\n    };\n  }\n\n  var defaultPosition = {\n    x: 0,\n    y: 0\n  };\n\n  if (!targetInfo) {\n    return defaultPosition;\n  } // If targetInfo is fetched by 'retrieveTargetInfo',\n  // old tree and new tree are the same tree,\n  // so the node still exists and we can visit it.\n\n\n  var targetNode = targetInfo.node;\n  var layout = targetNode.getLayout();\n\n  if (!layout) {\n    return defaultPosition;\n  } // Transform coord from local to container.\n\n\n  var targetCenter = [layout.width / 2, layout.height / 2];\n  var node = targetNode;\n\n  while (node) {\n    var nodeLayout = node.getLayout();\n    targetCenter[0] += nodeLayout.x;\n    targetCenter[1] += nodeLayout.y;\n    node = node.parentNode;\n  }\n\n  return {\n    x: layoutInfo.width / 2 - targetCenter[0],\n    y: layoutInfo.height / 2 - targetCenter[1]\n  };\n} // Mark nodes visible for prunning when visual coding and rendering.\n// Prunning depends on layout and root position, so we have to do it after layout.\n\n\nfunction prunning(node, clipRect, viewAbovePath, viewRoot, depth) {\n  var nodeLayout = node.getLayout();\n  var nodeInViewAbovePath = viewAbovePath[depth];\n  var isAboveViewRoot = nodeInViewAbovePath && nodeInViewAbovePath === node;\n\n  if (nodeInViewAbovePath && !isAboveViewRoot || depth === viewAbovePath.length && node !== viewRoot) {\n    return;\n  }\n\n  node.setLayout({\n    // isInView means: viewRoot sub tree + viewAbovePath\n    isInView: true,\n    // invisible only means: outside view clip so that the node can not\n    // see but still layout for animation preparation but not render.\n    invisible: !isAboveViewRoot && !clipRect.intersect(nodeLayout),\n    isAboveViewRoot: isAboveViewRoot\n  }, true); // Transform to child coordinate.\n\n  var childClipRect = new BoundingRect(clipRect.x - nodeLayout.x, clipRect.y - nodeLayout.y, clipRect.width, clipRect.height);\n  each(node.viewChildren || [], function (child) {\n    prunning(child, childClipRect, viewAbovePath, viewRoot, depth + 1);\n  });\n}\n\nfunction getUpperLabelHeight(model) {\n  return model.get(PATH_UPPER_LABEL_SHOW) ? model.get(PATH_UPPER_LABEL_HEIGHT) : 0;\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { installTreemapAction } from './treemapAction.js';\nimport TreemapSeriesModel from './TreemapSeries.js';\nimport TreemapView from './TreemapView.js';\nimport treemapVisual from './treemapVisual.js';\nimport treemapLayout from './treemapLayout.js';\nexport function install(registers) {\n  registers.registerSeriesModel(TreemapSeriesModel);\n  registers.registerChartView(TreemapView);\n  registers.registerVisual(treemapVisual);\n  registers.registerLayout(treemapLayout);\n  installTreemapAction(registers);\n}"],"names":["eachAfter","root","callback","separation","node","nodes","next","pop","push","isExpand","children","length","i","eachBefore","treeLayout","ecModel","api","eachSeriesByType","seriesModel","commonLayout","layoutInfo","getViewRect","layout","get","width","height","Math","PI","min","sep","node1","node2","parentNode","depth","virtualRoot","getData","tree","realRoot","init","firstWalk","hierNode","modifier","prelim","secondWalk","left_1","right_1","bottom_1","x","getLayout","delta","tx_1","kx_1","ky_1","coorX_1","coorY_1","finalCoor","radialCoordinate","setLayout","y","rawX","rawY","orient_1","getOrient","treeVisual","data","eachNode","model","getModel","style","getItemStyle","existsStyle","ensureUniqueItemVisual","dataIndex","extend","installTreeAction","registers","registerAction","type","event","update","payload","eachComponent","mainType","subType","query","getNodeByDataIndex","coordSys","coordinateSystem","res","updateCenterAndZoom","undefined","setCenter","center","setZoom","zoom","install","registerChartView","TreeView","registerSeriesModel","TreeSeriesModel","registerLayout","registerVisual","inRoot","defaultAncestor","ancestor","change","shift","thread","n","child","siblings","subtreeW","executeShifts","midPoint","apportion","nodeX","cb","arguments","defaultSeparation","rad","r","cos","sin","getBoxLayoutParams","getWidth","getHeight","subtreeV","nodeOutRight","nodeInRight","nodeOutLeft","nodeInLeft","sumOutRight","sumInRight","sumOutLeft","sumInLeft","nextRight","nextLeft","moveSubtree","nextAncestor","wl","wr","actionTypes","installTreemapAction","noop","handleRootToNode","index","types","targetInfo","helper","originViewRoot","getViewRoot","direction","resetViewRoot","TreemapSeriesModel","_super","_this","apply","this","preventUsingHoverLayer","__extends","prototype","getInitialData","option","name","completeTreeValue","levels","designatedVisualItemStyle","designatedVisualModel","Model","itemStyle","setDefault","levelModels","zrUtil","levelDefine","Tree","beforeLink","nodeData","wrapMethod","idx","levelModel","parentModel","optionUpdated","formatTooltip","multipleSeries","dataType","value","getRawValue","getName","createTooltipMarkup","getDataParams","params","treeAncestors","wrapTreePathInfo","treePathInfo","setLayoutInfo","mapIdToIndex","id","idIndexMap","_idIndexMap","_idIndexMapCount","set","_viewRoot","viewRoot","getRawData","contains","enableAriaDecal","enableAriaDecalForTree","layoutMode","defaultOption","progressive","left","top","sort","clipWindow","squareRatio","sqrt","leafDepth","drillDownIcon","zoomToNodeRatio","roam","nodeClick","animation","animationDurationUpdate","animationEasing","breadcrumb","show","emptyItemWidth","color","textStyle","emphasis","label","distance","padding","position","overflow","upperLabel","verticalAlign","colorAlpha","colorSaturation","borderWidth","gapWidth","borderColor","borderColorSaturation","visualDimension","visualMin","visualMax","colorMappingBy","visibleMin","childrenVisibleMin","SeriesModel","dataNode","sum","childValue","thisValue","isNaN","globalColorList","normalizeToArray","globalDecalList","hasColorDefine","hasDecalDefine","modelColor","modelDecal","level0","slice","decal","TEXT_PADDING","ITEM_GAP","ARRAY_LENGTH","Breadcrumb","containerGroup","group","graphic","add","render","targetNode","onSelect","thisGroup","removeAll","normalStyleModel","emphasisModel","textStyleModel","emphasisTextStyleModel","layoutParam","pos","right","bottom","box","totalWidth","renderList","_prepare","_renderContent","text","convertOptionIdName","textRect","getTextRect","itemWidth","max","lastX","availableSize","emphasisItemStyle","item","itemNode","el","shape","points","makeItemPoints","defaults","lineJoin","textContent","createTextStyle","textConfig","z2","Z2_EMPHASIS_LIFT","onclick","curry","disableLabelAnimation","getTextContent","ensureState","toggleHoverEmphasis","packEventData","remove","itemHeight","head","tail","splice","getECData","eventData","componentType","componentSubType","componentIndex","seriesIndex","seriesName","seriesType","selfType","Group","Rect","DRAG_THRESHOLD","PATH_LABEL_NOAMAL","PATH_UPPERLABEL_NORMAL","Z2_BASE","Z2_BG","Z2_CONTENT","getStateItemStyle","makeStyleMapper","getItemStyleNormal","stroke","fill","lineWidth","inner","makeInner","TreemapView","_state","_storage","createStorage","models","findComponents","indexOf","payloadType","isInit","_oldTree","thisStorage","reRoot","rootNodeGroup","nodeGroup","getRawIndex","_giveContainerGroup","hasAnimation","renderResult","_doRender","renderFinally","_doAnimation","_resetController","_renderBreadcrumb","_containerGroup","_initEvents","thisTree","oldTree","lastsForAnimation","oldStorage","willInvisibleEls","doRenderNode","thisNode","oldNode","parentGroup","renderNode","dualTravel","willDeleteEls","clearStorage","thisViewChildren","oldViewChildren","sameTree","getKey","getId","processNode","newIndex","oldIndex","viewChildren","each","isRemoved","DataDiffer","execute","storage","store","storageName","delEls","willDelete","els","parent","invisible","dirty","durationOption","easingOption","duration","isFunction","easing","animationWrap","animationUtil","rawIndex","target","innerStore","nodeWidth","nodeHeight","opacity","targetX","targetY","last","oldX","oldY","oldShape","setShape","fadein","setStyle","finished","bind","start","controller","_controller","RoamController","getZr","enable","on","_onPan","_onZoom","rect","BoundingRect","setPointerChecker","e","contain","_clearController","dispose","abs","dx","dy","rootLayout","dispatchAction","from","uid","seriesId","rootRect","mouseX","originX","mouseY","originY","m","matrix","create","translate","scale","applyTransform","findTarget","offsetX","offsetY","isLeafRoot","_rootToNode","_zoomToNode","itemModel","hostTree","getItemModel","link","linkTarget","windowOpen","_breadcrumb","attr","order","bgEl","background","point","transformCoordToLocal","ChartView","content","thisLayout","nodeModel","setItemGraphicEl","isInView","thisWidth","thisHeight","thisInvisible","thisRawIndex","oldRawIndex","upperHeight","isParent","itemStyleNormalModel","itemStyleEmphasisModel","itemStyleBlurModel","itemStyleSelectModel","borderRadius","giveGraphic","markRedraw","isAboveViewRoot","bg","renderBackground","upperLabelHeight","focus","blurScope","isDisabled","focusOrIndices","getAncestorsIndices","getDescendantIndices","isHighDownDispatcher","setAsHighDownDispatcher","enableHoverFocus","renderContent","disableMorphing","useUpperLabel","ecData","processInvisible","getVisual","visualBorderColor","normalStyle","emphasisStyle","blurStyle","selectStyle","upperLabelWidth","prepareText","removeTextContent","setDefaultStateProxy","contentWidth","contentHeight","culling","nodeStyle","visualColor","element","rectEl","visualOpacity","upperLabelRect","normalLabelModel","defaultText","isShow","getShallow","setLabelStyle","getLabelStatesModels","inheritColor","defaultOpacity","labelFetcher","labelDataIndex","textEl","textPadding","normalizeCssArray","setTextConfig","layoutRect","disableLabelLayout","beforeUpdate","truncateMinChar","lineOverflow","addDrillDownIcon","textEmphasisState","getState","iconChar","Ctor","z","lasts","prepareAnimationWhenHasOld","Displayable","calculateZ2","prepareAnimationWhenNoOld","lastCfg","isGroup","parentOldX","parentOldY","parentOldBg","z2InLevel","ITEM_STYLE_NORMAL","reset","travelTree","getAncestors","designatedVisual","viewRootAncestors","nodeLayout","thisNodeColor","nodeItemStyleModel","visuals","buildVisuals","calculateColor","calculateBorderColor","mapping_1","buildVisualMapping","childVisual","mapVisual","visualName","val","getValueVisualDefine","modifyHSL","modifyAlpha","rangeVisual","getRangeVisual","dataExtent","opt","visual","range","mappingMethod","loop","mapping","VisualMapping","drColorMappingBy","isArray","childVisuals","mappingType","getValue","mapValueToVisual","mathMax","mathMin","retrieveValue","PATH_BORDER_WIDTH","PATH_GAP_WIDTH","PATH_UPPER_LABEL_SHOW","PATH_UPPER_LABEL_HEIGHT","ecWidth","ecHeight","seriesOption","size","containerWidth","parsePercent","containerHeight","viewAbovePath","rootSize","estimateRootSize","sort_1","options","clearLayouts","viewRootLayout_1","area","squarify","treeRoot","calculateRootPosition","prunning","hideChildren","halfGapWidth","getUpperLabelHeight","layoutOffset","layoutOffsetUpper","totalArea","initChildren","rowFixedLength","best","Infinity","row","len","score","worst","orderBy","overLeafDepth","info","statistic","filterByThreshold","orderedChildren","deletePoint","a","b","diff","dimension","reverse","NaN","ratio","areaMax","areaMin","squareArea","f","flush","idx0WhenH","idx1WhenH","xy","wh","rowOtherLength","rowLen","step","wh1","remain","modWH","wh0","currNode","defaultSize","viewArea","currNodeValue","pow","MAX_SAFE_INTEGER","defaultPosition","targetCenter","clipRect","nodeInViewAbovePath","intersect","childClipRect","treemapVisual","treemapLayout"],"sourceRoot":""}