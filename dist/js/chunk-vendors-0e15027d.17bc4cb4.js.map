{"version":3,"file":"js/chunk-vendors-0e15027d.17bc4cb4.js","mappings":"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","sources":["webpack://databoard/./node_modules/echarts/lib/component/aria/preprocessor.js","webpack://databoard/./node_modules/echarts/lib/component/aria/install.js","webpack://databoard/./node_modules/echarts/lib/component/axisPointer/BaseAxisPointer.js","webpack://databoard/./node_modules/echarts/lib/component/axisPointer/PolarAxisPointer.js","webpack://databoard/./node_modules/echarts/lib/component/axisPointer/SingleAxisPointer.js","webpack://databoard/./node_modules/echarts/lib/component/axisPointer/findPointFromSeries.js","webpack://databoard/./node_modules/echarts/lib/component/axisPointer/globalListener.js","webpack://databoard/./node_modules/echarts/lib/component/axisPointer/CartesianAxisPointer.js","webpack://databoard/./node_modules/echarts/lib/component/axisPointer/AxisPointerModel.js","webpack://databoard/./node_modules/echarts/lib/component/axisPointer/AxisPointerView.js","webpack://databoard/./node_modules/echarts/lib/component/axisPointer/axisTrigger.js","webpack://databoard/./node_modules/echarts/lib/component/axisPointer/install.js","webpack://databoard/./node_modules/echarts/lib/component/axisPointer/modelHelper.js","webpack://databoard/./node_modules/echarts/lib/component/axisPointer/viewHelper.js","webpack://databoard/./node_modules/echarts/lib/component/axis/AngleAxisView.js","webpack://databoard/./node_modules/echarts/lib/component/axis/AxisBuilder.js","webpack://databoard/./node_modules/echarts/lib/component/axis/AxisView.js","webpack://databoard/./node_modules/echarts/lib/component/axis/CartesianAxisView.js","webpack://databoard/./node_modules/echarts/lib/component/axis/ParallelAxisView.js","webpack://databoard/./node_modules/echarts/lib/component/axis/RadiusAxisView.js","webpack://databoard/./node_modules/echarts/lib/component/axis/SingleAxisView.js","webpack://databoard/./node_modules/echarts/lib/component/axis/axisSplitHelper.js","webpack://databoard/./node_modules/echarts/lib/component/axis/parallelAxisAction.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as zrUtil from 'zrender/lib/core/util.js';\nexport default function ariaPreprocessor(option) {\n  if (!option || !option.aria) {\n    return;\n  }\n\n  var aria = option.aria; // aria.show is deprecated and should use aria.enabled instead\n\n  if (aria.show != null) {\n    aria.enabled = aria.show;\n  }\n\n  aria.label = aria.label || {}; // move description, general, series, data to be under aria.label\n\n  zrUtil.each(['description', 'general', 'series', 'data'], function (name) {\n    if (aria[name] != null) {\n      aria.label[name] = aria[name];\n    }\n  });\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport ariaVisual from '../../visual/aria.js';\nimport ariaPreprocessor from './preprocessor.js';\nexport function install(registers) {\n  registers.registerPreprocessor(ariaPreprocessor);\n  registers.registerVisual(registers.PRIORITY.VISUAL.ARIA, ariaVisual);\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport * as graphic from '../../util/graphic.js';\nimport * as axisPointerModelHelper from './modelHelper.js';\nimport * as eventTool from 'zrender/lib/core/event.js';\nimport * as throttleUtil from '../../util/throttle.js';\nimport { makeInner } from '../../util/model.js';\nvar inner = makeInner();\nvar clone = zrUtil.clone;\nvar bind = zrUtil.bind;\n/**\n * Base axis pointer class in 2D.\n */\n\nvar BaseAxisPointer =\n/** @class */\nfunction () {\n  function BaseAxisPointer() {\n    this._dragging = false;\n    /**\n     * In px, arbitrary value. Do not set too small,\n     * no animation is ok for most cases.\n     */\n\n    this.animationThreshold = 15;\n  }\n  /**\n   * @implement\n   */\n\n\n  BaseAxisPointer.prototype.render = function (axisModel, axisPointerModel, api, forceRender) {\n    var value = axisPointerModel.get('value');\n    var status = axisPointerModel.get('status'); // Bind them to `this`, not in closure, otherwise they will not\n    // be replaced when user calling setOption in not merge mode.\n\n    this._axisModel = axisModel;\n    this._axisPointerModel = axisPointerModel;\n    this._api = api; // Optimize: `render` will be called repeatedly during mouse move.\n    // So it is power consuming if performing `render` each time,\n    // especially on mobile device.\n\n    if (!forceRender && this._lastValue === value && this._lastStatus === status) {\n      return;\n    }\n\n    this._lastValue = value;\n    this._lastStatus = status;\n    var group = this._group;\n    var handle = this._handle;\n\n    if (!status || status === 'hide') {\n      // Do not clear here, for animation better.\n      group && group.hide();\n      handle && handle.hide();\n      return;\n    }\n\n    group && group.show();\n    handle && handle.show(); // Otherwise status is 'show'\n\n    var elOption = {};\n    this.makeElOption(elOption, value, axisModel, axisPointerModel, api); // Enable change axis pointer type.\n\n    var graphicKey = elOption.graphicKey;\n\n    if (graphicKey !== this._lastGraphicKey) {\n      this.clear(api);\n    }\n\n    this._lastGraphicKey = graphicKey;\n    var moveAnimation = this._moveAnimation = this.determineAnimation(axisModel, axisPointerModel);\n\n    if (!group) {\n      group = this._group = new graphic.Group();\n      this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n      this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n      api.getZr().add(group);\n    } else {\n      var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n      this.updatePointerEl(group, elOption, doUpdateProps);\n      this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n    }\n\n    updateMandatoryProps(group, axisPointerModel, true);\n\n    this._renderHandle(value);\n  };\n  /**\n   * @implement\n   */\n\n\n  BaseAxisPointer.prototype.remove = function (api) {\n    this.clear(api);\n  };\n  /**\n   * @implement\n   */\n\n\n  BaseAxisPointer.prototype.dispose = function (api) {\n    this.clear(api);\n  };\n  /**\n   * @protected\n   */\n\n\n  BaseAxisPointer.prototype.determineAnimation = function (axisModel, axisPointerModel) {\n    var animation = axisPointerModel.get('animation');\n    var axis = axisModel.axis;\n    var isCategoryAxis = axis.type === 'category';\n    var useSnap = axisPointerModel.get('snap'); // Value axis without snap always do not snap.\n\n    if (!useSnap && !isCategoryAxis) {\n      return false;\n    }\n\n    if (animation === 'auto' || animation == null) {\n      var animationThreshold = this.animationThreshold;\n\n      if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n        return true;\n      } // It is important to auto animation when snap used. Consider if there is\n      // a dataZoom, animation will be disabled when too many points exist, while\n      // it will be enabled for better visual effect when little points exist.\n\n\n      if (useSnap) {\n        var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n        var axisExtent = axis.getExtent(); // Approximate band width\n\n        return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n      }\n\n      return false;\n    }\n\n    return animation === true;\n  };\n  /**\n   * add {pointer, label, graphicKey} to elOption\n   * @protected\n   */\n\n\n  BaseAxisPointer.prototype.makeElOption = function (elOption, value, axisModel, axisPointerModel, api) {// Should be implemenented by sub-class.\n  };\n  /**\n   * @protected\n   */\n\n\n  BaseAxisPointer.prototype.createPointerEl = function (group, elOption, axisModel, axisPointerModel) {\n    var pointerOption = elOption.pointer;\n\n    if (pointerOption) {\n      var pointerEl = inner(group).pointerEl = new graphic[pointerOption.type](clone(elOption.pointer));\n      group.add(pointerEl);\n    }\n  };\n  /**\n   * @protected\n   */\n\n\n  BaseAxisPointer.prototype.createLabelEl = function (group, elOption, axisModel, axisPointerModel) {\n    if (elOption.label) {\n      var labelEl = inner(group).labelEl = new graphic.Text(clone(elOption.label));\n      group.add(labelEl);\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  };\n  /**\n   * @protected\n   */\n\n\n  BaseAxisPointer.prototype.updatePointerEl = function (group, elOption, updateProps) {\n    var pointerEl = inner(group).pointerEl;\n\n    if (pointerEl && elOption.pointer) {\n      pointerEl.setStyle(elOption.pointer.style);\n      updateProps(pointerEl, {\n        shape: elOption.pointer.shape\n      });\n    }\n  };\n  /**\n   * @protected\n   */\n\n\n  BaseAxisPointer.prototype.updateLabelEl = function (group, elOption, updateProps, axisPointerModel) {\n    var labelEl = inner(group).labelEl;\n\n    if (labelEl) {\n      labelEl.setStyle(elOption.label.style);\n      updateProps(labelEl, {\n        // Consider text length change in vertical axis, animation should\n        // be used on shape, otherwise the effect will be weird.\n        // TODOTODO\n        // shape: elOption.label.shape,\n        x: elOption.label.x,\n        y: elOption.label.y\n      });\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  };\n  /**\n   * @private\n   */\n\n\n  BaseAxisPointer.prototype._renderHandle = function (value) {\n    if (this._dragging || !this.updateHandleTransform) {\n      return;\n    }\n\n    var axisPointerModel = this._axisPointerModel;\n\n    var zr = this._api.getZr();\n\n    var handle = this._handle;\n    var handleModel = axisPointerModel.getModel('handle');\n    var status = axisPointerModel.get('status');\n\n    if (!handleModel.get('show') || !status || status === 'hide') {\n      handle && zr.remove(handle);\n      this._handle = null;\n      return;\n    }\n\n    var isInit;\n\n    if (!this._handle) {\n      isInit = true;\n      handle = this._handle = graphic.createIcon(handleModel.get('icon'), {\n        cursor: 'move',\n        draggable: true,\n        onmousemove: function (e) {\n          // For mobile device, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n        drift: bind(this._onHandleDragMove, this),\n        ondragend: bind(this._onHandleDragEnd, this)\n      });\n      zr.add(handle);\n    }\n\n    updateMandatoryProps(handle, axisPointerModel, false); // update style\n\n    handle.setStyle(handleModel.getItemStyle(null, ['color', 'borderColor', 'borderWidth', 'opacity', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'])); // update position\n\n    var handleSize = handleModel.get('size');\n\n    if (!zrUtil.isArray(handleSize)) {\n      handleSize = [handleSize, handleSize];\n    }\n\n    handle.scaleX = handleSize[0] / 2;\n    handle.scaleY = handleSize[1] / 2;\n    throttleUtil.createOrUpdate(this, '_doDispatchAxisPointer', handleModel.get('throttle') || 0, 'fixRate');\n\n    this._moveHandleToValue(value, isInit);\n  };\n\n  BaseAxisPointer.prototype._moveHandleToValue = function (value, isInit) {\n    updateProps(this._axisPointerModel, !isInit && this._moveAnimation, this._handle, getHandleTransProps(this.getHandleTransform(value, this._axisModel, this._axisPointerModel)));\n  };\n\n  BaseAxisPointer.prototype._onHandleDragMove = function (dx, dy) {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    this._dragging = true; // Persistent for throttle.\n\n    var trans = this.updateHandleTransform(getHandleTransProps(handle), [dx, dy], this._axisModel, this._axisPointerModel);\n    this._payloadInfo = trans;\n    handle.stopAnimation();\n    handle.attr(getHandleTransProps(trans));\n    inner(handle).lastProp = null;\n\n    this._doDispatchAxisPointer();\n  };\n  /**\n   * Throttled method.\n   */\n\n\n  BaseAxisPointer.prototype._doDispatchAxisPointer = function () {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var payloadInfo = this._payloadInfo;\n    var axisModel = this._axisModel;\n\n    this._api.dispatchAction({\n      type: 'updateAxisPointer',\n      x: payloadInfo.cursorPoint[0],\n      y: payloadInfo.cursorPoint[1],\n      tooltipOption: payloadInfo.tooltipOption,\n      axesInfo: [{\n        axisDim: axisModel.axis.dim,\n        axisIndex: axisModel.componentIndex\n      }]\n    });\n  };\n\n  BaseAxisPointer.prototype._onHandleDragEnd = function () {\n    this._dragging = false;\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var value = this._axisPointerModel.get('value'); // Consider snap or categroy axis, handle may be not consistent with\n    // axisPointer. So move handle to align the exact value position when\n    // drag ended.\n\n\n    this._moveHandleToValue(value); // For the effect: tooltip will be shown when finger holding on handle\n    // button, and will be hidden after finger left handle button.\n\n\n    this._api.dispatchAction({\n      type: 'hideTip'\n    });\n  };\n  /**\n   * @private\n   */\n\n\n  BaseAxisPointer.prototype.clear = function (api) {\n    this._lastValue = null;\n    this._lastStatus = null;\n    var zr = api.getZr();\n    var group = this._group;\n    var handle = this._handle;\n\n    if (zr && group) {\n      this._lastGraphicKey = null;\n      group && zr.remove(group);\n      handle && zr.remove(handle);\n      this._group = null;\n      this._handle = null;\n      this._payloadInfo = null;\n    }\n\n    throttleUtil.clear(this, '_doDispatchAxisPointer');\n  };\n  /**\n   * @protected\n   */\n\n\n  BaseAxisPointer.prototype.doClear = function () {// Implemented by sub-class if necessary.\n  };\n\n  BaseAxisPointer.prototype.buildLabel = function (xy, wh, xDimIndex) {\n    xDimIndex = xDimIndex || 0;\n    return {\n      x: xy[xDimIndex],\n      y: xy[1 - xDimIndex],\n      width: wh[xDimIndex],\n      height: wh[1 - xDimIndex]\n    };\n  };\n\n  return BaseAxisPointer;\n}();\n\nfunction updateProps(animationModel, moveAnimation, el, props) {\n  // Animation optimize.\n  if (!propsEqual(inner(el).lastProp, props)) {\n    inner(el).lastProp = props;\n    moveAnimation ? graphic.updateProps(el, props, animationModel) : (el.stopAnimation(), el.attr(props));\n  }\n}\n\nfunction propsEqual(lastProps, newProps) {\n  if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n    var equals_1 = true;\n    zrUtil.each(newProps, function (item, key) {\n      equals_1 = equals_1 && propsEqual(lastProps[key], item);\n    });\n    return !!equals_1;\n  } else {\n    return lastProps === newProps;\n  }\n}\n\nfunction updateLabelShowHide(labelEl, axisPointerModel) {\n  labelEl[axisPointerModel.get(['label', 'show']) ? 'show' : 'hide']();\n}\n\nfunction getHandleTransProps(trans) {\n  return {\n    x: trans.x || 0,\n    y: trans.y || 0,\n    rotation: trans.rotation || 0\n  };\n}\n\nfunction updateMandatoryProps(group, axisPointerModel, silent) {\n  var z = axisPointerModel.get('z');\n  var zlevel = axisPointerModel.get('zlevel');\n  group && group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n      el.silent = silent;\n    }\n  });\n}\n\nexport default BaseAxisPointer;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport BaseAxisPointer from './BaseAxisPointer.js';\nimport * as graphic from '../../util/graphic.js';\nimport * as viewHelper from './viewHelper.js';\nimport * as matrix from 'zrender/lib/core/matrix.js';\nimport AxisBuilder from '../axis/AxisBuilder.js';\n\nvar PolarAxisPointer =\n/** @class */\nfunction (_super) {\n  __extends(PolarAxisPointer, _super);\n\n  function PolarAxisPointer() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * @override\n   */\n\n\n  PolarAxisPointer.prototype.makeElOption = function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n\n    if (axis.dim === 'angle') {\n      this.animationThreshold = Math.PI / 18;\n    }\n\n    var polar = axis.polar;\n    var otherAxis = polar.getOtherAxis(axis);\n    var otherExtent = otherAxis.getExtent();\n    var coordValue = axis.dataToCoord(value);\n    var axisPointerType = axisPointerModel.get('type');\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, polar, coordValue, otherExtent);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var labelMargin = axisPointerModel.get(['label', 'margin']);\n    var labelPos = getLabelPosition(value, axisModel, axisPointerModel, polar, labelMargin);\n    viewHelper.buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos);\n  };\n\n  return PolarAxisPointer;\n}(BaseAxisPointer);\n\n;\n\nfunction getLabelPosition(value, axisModel, axisPointerModel, polar, labelMargin) {\n  var axis = axisModel.axis;\n  var coord = axis.dataToCoord(value);\n  var axisAngle = polar.getAngleAxis().getExtent()[0];\n  axisAngle = axisAngle / 180 * Math.PI;\n  var radiusExtent = polar.getRadiusAxis().getExtent();\n  var position;\n  var align;\n  var verticalAlign;\n\n  if (axis.dim === 'radius') {\n    var transform = matrix.create();\n    matrix.rotate(transform, transform, axisAngle);\n    matrix.translate(transform, transform, [polar.cx, polar.cy]);\n    position = graphic.applyTransform([coord, -labelMargin], transform);\n    var labelRotation = axisModel.getModel('axisLabel').get('rotate') || 0; // @ts-ignore\n\n    var labelLayout = AxisBuilder.innerTextLayout(axisAngle, labelRotation * Math.PI / 180, -1);\n    align = labelLayout.textAlign;\n    verticalAlign = labelLayout.textVerticalAlign;\n  } else {\n    // angle axis\n    var r = radiusExtent[1];\n    position = polar.coordToPoint([r + labelMargin, coord]);\n    var cx = polar.cx;\n    var cy = polar.cy;\n    align = Math.abs(position[0] - cx) / r < 0.3 ? 'center' : position[0] > cx ? 'left' : 'right';\n    verticalAlign = Math.abs(position[1] - cy) / r < 0.3 ? 'middle' : position[1] > cy ? 'top' : 'bottom';\n  }\n\n  return {\n    position: position,\n    align: align,\n    verticalAlign: verticalAlign\n  };\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, polar, coordValue, otherExtent) {\n    return axis.dim === 'angle' ? {\n      type: 'Line',\n      shape: viewHelper.makeLineShape(polar.coordToPoint([otherExtent[0], coordValue]), polar.coordToPoint([otherExtent[1], coordValue]))\n    } : {\n      type: 'Circle',\n      shape: {\n        cx: polar.cx,\n        cy: polar.cy,\n        r: coordValue\n      }\n    };\n  },\n  shadow: function (axis, polar, coordValue, otherExtent) {\n    var bandWidth = Math.max(1, axis.getBandWidth());\n    var radian = Math.PI / 180;\n    return axis.dim === 'angle' ? {\n      type: 'Sector',\n      shape: viewHelper.makeSectorShape(polar.cx, polar.cy, otherExtent[0], otherExtent[1], // In ECharts y is negative if angle is positive\n      (-coordValue - bandWidth / 2) * radian, (-coordValue + bandWidth / 2) * radian)\n    } : {\n      type: 'Sector',\n      shape: viewHelper.makeSectorShape(polar.cx, polar.cy, coordValue - bandWidth / 2, coordValue + bandWidth / 2, 0, Math.PI * 2)\n    };\n  }\n};\nexport default PolarAxisPointer;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport BaseAxisPointer from './BaseAxisPointer.js';\nimport * as viewHelper from './viewHelper.js';\nimport * as singleAxisHelper from '../../coord/single/singleAxisHelper.js';\nvar XY = ['x', 'y'];\nvar WH = ['width', 'height'];\n\nvar SingleAxisPointer =\n/** @class */\nfunction (_super) {\n  __extends(SingleAxisPointer, _super);\n\n  function SingleAxisPointer() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * @override\n   */\n\n\n  SingleAxisPointer.prototype.makeElOption = function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var coordSys = axis.coordinateSystem;\n    var otherExtent = getGlobalExtent(coordSys, 1 - getPointDimIndex(axis));\n    var pixelValue = coordSys.dataToPoint(value)[0];\n    var axisPointerType = axisPointerModel.get('type');\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = singleAxisHelper.layout(axisModel);\n    viewHelper.buildCartesianSingleLabelElOption( // @ts-ignore\n    value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  };\n  /**\n   * @override\n   */\n\n\n  SingleAxisPointer.prototype.getHandleTransform = function (value, axisModel, axisPointerModel) {\n    var layoutInfo = singleAxisHelper.layout(axisModel, {\n      labelInside: false\n    }); // @ts-ignore\n\n    layoutInfo.labelMargin = axisPointerModel.get(['handle', 'margin']);\n    var position = viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo);\n    return {\n      x: position[0],\n      y: position[1],\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  };\n  /**\n   * @override\n   */\n\n\n  SingleAxisPointer.prototype.updateHandleTransform = function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var coordSys = axis.coordinateSystem;\n    var dimIndex = getPointDimIndex(axis);\n    var axisExtent = getGlobalExtent(coordSys, dimIndex);\n    var currPosition = [transform.x, transform.y];\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var otherExtent = getGlobalExtent(coordSys, 1 - dimIndex);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex];\n    return {\n      x: currPosition[0],\n      y: currPosition[1],\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: {\n        verticalAlign: 'middle'\n      }\n    };\n  };\n\n  return SingleAxisPointer;\n}(BaseAxisPointer);\n\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getPointDimIndex(axis));\n    return {\n      type: 'Line',\n      subPixelOptimize: true,\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent) {\n    var bandWidth = axis.getBandWidth();\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getPointDimIndex(axis))\n    };\n  }\n};\n\nfunction getPointDimIndex(axis) {\n  return axis.isHorizontal() ? 0 : 1;\n}\n\nfunction getGlobalExtent(coordSys, dimIndex) {\n  var rect = coordSys.getRect();\n  return [rect[XY[dimIndex]], rect[XY[dimIndex]] + rect[WH[dimIndex]]];\n}\n\nexport default SingleAxisPointer;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport * as modelUtil from '../../util/model.js';\n/**\n * @param finder contains {seriesIndex, dataIndex, dataIndexInside}\n * @param ecModel\n * @return  {point: [x, y], el: ...} point Will not be null.\n */\n\nexport default function findPointFromSeries(finder, ecModel) {\n  var point = [];\n  var seriesIndex = finder.seriesIndex;\n  var seriesModel;\n\n  if (seriesIndex == null || !(seriesModel = ecModel.getSeriesByIndex(seriesIndex))) {\n    return {\n      point: []\n    };\n  }\n\n  var data = seriesModel.getData();\n  var dataIndex = modelUtil.queryDataIndex(data, finder);\n\n  if (dataIndex == null || dataIndex < 0 || zrUtil.isArray(dataIndex)) {\n    return {\n      point: []\n    };\n  }\n\n  var el = data.getItemGraphicEl(dataIndex);\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (seriesModel.getTooltipPosition) {\n    point = seriesModel.getTooltipPosition(dataIndex) || [];\n  } else if (coordSys && coordSys.dataToPoint) {\n    if (finder.isStacked) {\n      var baseAxis = coordSys.getBaseAxis();\n      var valueAxis = coordSys.getOtherAxis(baseAxis);\n      var valueAxisDim = valueAxis.dim;\n      var baseAxisDim = baseAxis.dim;\n      var baseDataOffset = valueAxisDim === 'x' || valueAxisDim === 'radius' ? 1 : 0;\n      var baseDim = data.mapDimension(baseAxisDim);\n      var stackedData = [];\n      stackedData[baseDataOffset] = data.get(baseDim, dataIndex);\n      stackedData[1 - baseDataOffset] = data.get(data.getCalculationInfo('stackResultDimension'), dataIndex);\n      point = coordSys.dataToPoint(stackedData) || [];\n    } else {\n      point = coordSys.dataToPoint(data.getValues(zrUtil.map(coordSys.dimensions, function (dim) {\n        return data.mapDimension(dim);\n      }), dataIndex)) || [];\n    }\n  } else if (el) {\n    // Use graphic bounding rect\n    var rect = el.getBoundingRect().clone();\n    rect.applyTransform(el.transform);\n    point = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n\n  return {\n    point: point,\n    el: el\n  };\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport env from 'zrender/lib/core/env.js';\nimport { makeInner } from '../../util/model.js';\nvar inner = makeInner();\nvar each = zrUtil.each;\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n * @param {Function} handler\n *      param: {string} currTrigger\n *      param: {Array.<number>} point\n */\n\nexport function register(key, api, handler) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  inner(zr).records || (inner(zr).records = {});\n  initGlobalListeners(zr, api);\n  var record = inner(zr).records[key] || (inner(zr).records[key] = {});\n  record.handler = handler;\n}\n\nfunction initGlobalListeners(zr, api) {\n  if (inner(zr).initialized) {\n    return;\n  }\n\n  inner(zr).initialized = true;\n  useHandler('click', zrUtil.curry(doEnter, 'click'));\n  useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove')); // useHandler('mouseout', onLeave);\n\n  useHandler('globalout', onLeave);\n\n  function useHandler(eventType, cb) {\n    zr.on(eventType, function (e) {\n      var dis = makeDispatchAction(api);\n      each(inner(zr).records, function (record) {\n        record && cb(record, e, dis.dispatchAction);\n      });\n      dispatchTooltipFinally(dis.pendings, api);\n    });\n  }\n}\n\nfunction dispatchTooltipFinally(pendings, api) {\n  var showLen = pendings.showTip.length;\n  var hideLen = pendings.hideTip.length;\n  var actuallyPayload;\n\n  if (showLen) {\n    actuallyPayload = pendings.showTip[showLen - 1];\n  } else if (hideLen) {\n    actuallyPayload = pendings.hideTip[hideLen - 1];\n  }\n\n  if (actuallyPayload) {\n    actuallyPayload.dispatchAction = null;\n    api.dispatchAction(actuallyPayload);\n  }\n}\n\nfunction onLeave(record, e, dispatchAction) {\n  record.handler('leave', null, dispatchAction);\n}\n\nfunction doEnter(currTrigger, record, e, dispatchAction) {\n  record.handler(currTrigger, e, dispatchAction);\n}\n\nfunction makeDispatchAction(api) {\n  var pendings = {\n    showTip: [],\n    hideTip: []\n  }; // FIXME\n  // better approach?\n  // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n  // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n  // So we have to add \"final stage\" to merge those dispatched actions.\n\n  var dispatchAction = function (payload) {\n    var pendingList = pendings[payload.type];\n\n    if (pendingList) {\n      pendingList.push(payload);\n    } else {\n      payload.dispatchAction = dispatchAction;\n      api.dispatchAction(payload);\n    }\n  };\n\n  return {\n    dispatchAction: dispatchAction,\n    pendings: pendings\n  };\n}\n\nexport function unregister(key, api) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  var record = (inner(zr).records || {})[key];\n\n  if (record) {\n    inner(zr).records[key] = null;\n  }\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport BaseAxisPointer from './BaseAxisPointer.js';\nimport * as viewHelper from './viewHelper.js';\nimport * as cartesianAxisHelper from '../../coord/cartesian/cartesianAxisHelper.js';\n\nvar CartesianAxisPointer =\n/** @class */\nfunction (_super) {\n  __extends(CartesianAxisPointer, _super);\n\n  function CartesianAxisPointer() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * @override\n   */\n\n\n  CartesianAxisPointer.prototype.makeElOption = function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisPointerType = axisPointerModel.get('type');\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n    viewHelper.buildCartesianSingleLabelElOption( // @ts-ignore\n    value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  };\n  /**\n   * @override\n   */\n\n\n  CartesianAxisPointer.prototype.getHandleTransform = function (value, axisModel, axisPointerModel) {\n    var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n      labelInside: false\n    }); // @ts-ignore\n\n    layoutInfo.labelMargin = axisPointerModel.get(['handle', 'margin']);\n    var pos = viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo);\n    return {\n      x: pos[0],\n      y: pos[1],\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  };\n  /**\n   * @override\n   */\n\n\n  CartesianAxisPointer.prototype.updateHandleTransform = function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisExtent = axis.getGlobalExtent(true);\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var dimIndex = axis.dim === 'x' ? 0 : 1;\n    var currPosition = [transform.x, transform.y];\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex]; // Make tooltip do not overlap axisPointer and in the middle of the grid.\n\n    var tooltipOptions = [{\n      verticalAlign: 'middle'\n    }, {\n      align: 'center'\n    }];\n    return {\n      x: currPosition[0],\n      y: currPosition[1],\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: tooltipOptions[dimIndex]\n    };\n  };\n\n  return CartesianAxisPointer;\n}(BaseAxisPointer);\n\nfunction getCartesian(grid, axis) {\n  var opt = {};\n  opt[axis.dim + 'AxisIndex'] = axis.index;\n  return grid.getCartesian(opt);\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getAxisDimIndex(axis));\n    return {\n      type: 'Line',\n      subPixelOptimize: true,\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent) {\n    var bandWidth = Math.max(1, axis.getBandWidth());\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getAxisDimIndex(axis))\n    };\n  }\n};\n\nfunction getAxisDimIndex(axis) {\n  return axis.dim === 'x' ? 0 : 1;\n}\n\nexport default CartesianAxisPointer;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport ComponentModel from '../../model/Component.js';\n\nvar AxisPointerModel =\n/** @class */\nfunction (_super) {\n  __extends(AxisPointerModel, _super);\n\n  function AxisPointerModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = AxisPointerModel.type;\n    return _this;\n  }\n\n  AxisPointerModel.type = 'axisPointer';\n  AxisPointerModel.defaultOption = {\n    // 'auto' means that show when triggered by tooltip or handle.\n    show: 'auto',\n    // zlevel: 0,\n    z: 50,\n    type: 'line',\n    // axispointer triggered by tootip determine snap automatically,\n    // see `modelHelper`.\n    snap: false,\n    triggerTooltip: true,\n    value: null,\n    status: null,\n    link: [],\n    // Do not set 'auto' here, otherwise global animation: false\n    // will not effect at this axispointer.\n    animation: null,\n    animationDurationUpdate: 200,\n    lineStyle: {\n      color: '#B9BEC9',\n      width: 1,\n      type: 'dashed'\n    },\n    shadowStyle: {\n      color: 'rgba(210,219,238,0.2)'\n    },\n    label: {\n      show: true,\n      formatter: null,\n      precision: 'auto',\n      margin: 3,\n      color: '#fff',\n      padding: [5, 7, 5, 7],\n      backgroundColor: 'auto',\n      borderColor: null,\n      borderWidth: 0,\n      borderRadius: 3\n    },\n    handle: {\n      show: false,\n      // eslint-disable-next-line\n      icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z',\n      size: 45,\n      // handle margin is from symbol center to axis, which is stable when circular move.\n      margin: 50,\n      // color: '#1b8bbd'\n      // color: '#2f4554'\n      color: '#333',\n      shadowBlur: 3,\n      shadowColor: '#aaa',\n      shadowOffsetX: 0,\n      shadowOffsetY: 2,\n      // For mobile performance\n      throttle: 40\n    }\n  };\n  return AxisPointerModel;\n}(ComponentModel);\n\nexport default AxisPointerModel;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as globalListener from './globalListener.js';\nimport ComponentView from '../../view/Component.js';\n\nvar AxisPointerView =\n/** @class */\nfunction (_super) {\n  __extends(AxisPointerView, _super);\n\n  function AxisPointerView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = AxisPointerView.type;\n    return _this;\n  }\n\n  AxisPointerView.prototype.render = function (globalAxisPointerModel, ecModel, api) {\n    var globalTooltipModel = ecModel.getComponent('tooltip');\n    var triggerOn = globalAxisPointerModel.get('triggerOn') || globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click'; // Register global listener in AxisPointerView to enable\n    // AxisPointerView to be independent to Tooltip.\n\n    globalListener.register('axisPointer', api, function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none' && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)) {\n        dispatchAction({\n          type: 'updateAxisPointer',\n          currTrigger: currTrigger,\n          x: e && e.offsetX,\n          y: e && e.offsetY\n        });\n      }\n    });\n  };\n\n  AxisPointerView.prototype.remove = function (ecModel, api) {\n    globalListener.unregister('axisPointer', api);\n  };\n\n  AxisPointerView.prototype.dispose = function (ecModel, api) {\n    globalListener.unregister('axisPointer', api);\n  };\n\n  AxisPointerView.type = 'axisPointer';\n  return AxisPointerView;\n}(ComponentView);\n\nexport default AxisPointerView;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { makeInner } from '../../util/model.js';\nimport * as modelHelper from './modelHelper.js';\nimport findPointFromSeries from './findPointFromSeries.js';\nimport { each, curry, bind, extend } from 'zrender/lib/core/util.js';\nvar inner = makeInner();\n/**\n * Basic logic: check all axis, if they do not demand show/highlight,\n * then hide/downplay them.\n *\n * @return content of event obj for echarts.connect.\n */\n\nexport default function axisTrigger(payload, ecModel, api) {\n  var currTrigger = payload.currTrigger;\n  var point = [payload.x, payload.y];\n  var finder = payload;\n  var dispatchAction = payload.dispatchAction || bind(api.dispatchAction, api);\n  var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo; // Pending\n  // See #6121. But we are not able to reproduce it yet.\n\n  if (!coordSysAxesInfo) {\n    return;\n  }\n\n  if (illegalPoint(point)) {\n    // Used in the default behavior of `connection`: use the sample seriesIndex\n    // and dataIndex. And also used in the tooltipView trigger.\n    point = findPointFromSeries({\n      seriesIndex: finder.seriesIndex,\n      // Do not use dataIndexInside from other ec instance.\n      // FIXME: auto detect it?\n      dataIndex: finder.dataIndex\n    }, ecModel).point;\n  }\n\n  var isIllegalPoint = illegalPoint(point); // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n  // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n  // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n  // and dataIndex.\n\n  var inputAxesInfo = finder.axesInfo;\n  var axesInfo = coordSysAxesInfo.axesInfo;\n  var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n  var outputPayload = {};\n  var showValueMap = {};\n  var dataByCoordSys = {\n    list: [],\n    map: {}\n  };\n  var updaters = {\n    showPointer: curry(showPointer, showValueMap),\n    showTooltip: curry(showTooltip, dataByCoordSys)\n  }; // Process for triggered axes.\n\n  each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n    // If a point given, it must be contained by the coordinate system.\n    var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n    each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n      var axis = axisInfo.axis;\n      var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo); // If no inputAxesInfo, no axis is restricted.\n\n      if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n        var val = inputAxisInfo && inputAxisInfo.value;\n\n        if (val == null && !isIllegalPoint) {\n          val = axis.pointToData(point);\n        }\n\n        val != null && processOnAxis(axisInfo, val, updaters, false, outputPayload);\n      }\n    });\n  }); // Process for linked axes.\n\n  var linkTriggers = {};\n  each(axesInfo, function (tarAxisInfo, tarKey) {\n    var linkGroup = tarAxisInfo.linkGroup; // If axis has been triggered in the previous stage, it should not be triggered by link.\n\n    if (linkGroup && !showValueMap[tarKey]) {\n      each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n        var srcValItem = showValueMap[srcKey]; // If srcValItem exist, source axis is triggered, so link to target axis.\n\n        if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n          var val = srcValItem.value;\n          linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo))));\n          linkTriggers[tarAxisInfo.key] = val;\n        }\n      });\n    }\n  });\n  each(linkTriggers, function (val, tarKey) {\n    processOnAxis(axesInfo[tarKey], val, updaters, true, outputPayload);\n  });\n  updateModelActually(showValueMap, axesInfo, outputPayload);\n  dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n  dispatchHighDownActually(axesInfo, dispatchAction, api);\n  return outputPayload;\n}\n\nfunction processOnAxis(axisInfo, newValue, updaters, noSnap, outputFinder) {\n  var axis = axisInfo.axis;\n\n  if (axis.scale.isBlank() || !axis.containData(newValue)) {\n    return;\n  }\n\n  if (!axisInfo.involveSeries) {\n    updaters.showPointer(axisInfo, newValue);\n    return;\n  } // Heavy calculation. So put it after axis.containData checking.\n\n\n  var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n  var payloadBatch = payloadInfo.payloadBatch;\n  var snapToValue = payloadInfo.snapToValue; // Fill content of event obj for echarts.connect.\n  // By default use the first involved series data as a sample to connect.\n\n  if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n    extend(outputFinder, payloadBatch[0]);\n  } // If no linkSource input, this process is for collecting link\n  // target, where snap should not be accepted.\n\n\n  if (!noSnap && axisInfo.snap) {\n    if (axis.containData(snapToValue) && snapToValue != null) {\n      newValue = snapToValue;\n    }\n  }\n\n  updaters.showPointer(axisInfo, newValue, payloadBatch); // Tooltip should always be snapToValue, otherwise there will be\n  // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n\n  updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n}\n\nfunction buildPayloadsBySeries(value, axisInfo) {\n  var axis = axisInfo.axis;\n  var dim = axis.dim;\n  var snapToValue = value;\n  var payloadBatch = [];\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n  each(axisInfo.seriesModels, function (series, idx) {\n    var dataDim = series.getData().mapDimensionsAll(dim);\n    var seriesNestestValue;\n    var dataIndices;\n\n    if (series.getAxisTooltipData) {\n      var result = series.getAxisTooltipData(dataDim, value, axis);\n      dataIndices = result.dataIndices;\n      seriesNestestValue = result.nestestValue;\n    } else {\n      dataIndices = series.getData().indicesOfNearest(dataDim[0], value, // Add a threshold to avoid find the wrong dataIndex\n      // when data length is not same.\n      // false,\n      axis.type === 'category' ? 0.5 : null);\n\n      if (!dataIndices.length) {\n        return;\n      }\n\n      seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n    }\n\n    if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n      return;\n    }\n\n    var diff = value - seriesNestestValue;\n    var dist = Math.abs(diff); // Consider category case\n\n    if (dist <= minDist) {\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        snapToValue = seriesNestestValue;\n        payloadBatch.length = 0;\n      }\n\n      each(dataIndices, function (dataIndex) {\n        payloadBatch.push({\n          seriesIndex: series.seriesIndex,\n          dataIndexInside: dataIndex,\n          dataIndex: series.getData().getRawIndex(dataIndex)\n        });\n      });\n    }\n  });\n  return {\n    payloadBatch: payloadBatch,\n    snapToValue: snapToValue\n  };\n}\n\nfunction showPointer(showValueMap, axisInfo, value, payloadBatch) {\n  showValueMap[axisInfo.key] = {\n    value: value,\n    payloadBatch: payloadBatch\n  };\n}\n\nfunction showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n  var payloadBatch = payloadInfo.payloadBatch;\n  var axis = axisInfo.axis;\n  var axisModel = axis.model;\n  var axisPointerModel = axisInfo.axisPointerModel; // If no data, do not create anything in dataByCoordSys,\n  // whose length will be used to judge whether dispatch action.\n\n  if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n    return;\n  }\n\n  var coordSysModel = axisInfo.coordSys.model;\n  var coordSysKey = modelHelper.makeKey(coordSysModel);\n  var coordSysItem = dataByCoordSys.map[coordSysKey];\n\n  if (!coordSysItem) {\n    coordSysItem = dataByCoordSys.map[coordSysKey] = {\n      coordSysId: coordSysModel.id,\n      coordSysIndex: coordSysModel.componentIndex,\n      coordSysType: coordSysModel.type,\n      coordSysMainType: coordSysModel.mainType,\n      dataByAxis: []\n    };\n    dataByCoordSys.list.push(coordSysItem);\n  }\n\n  coordSysItem.dataByAxis.push({\n    axisDim: axis.dim,\n    axisIndex: axisModel.componentIndex,\n    axisType: axisModel.type,\n    axisId: axisModel.id,\n    value: value,\n    // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n    // depends that all models have been updated. So it should not be performed\n    // here. Considering axisPointerModel used here is volatile, which is hard\n    // to be retrieve in TooltipView, we prepare parameters here.\n    valueLabelOpt: {\n      precision: axisPointerModel.get(['label', 'precision']),\n      formatter: axisPointerModel.get(['label', 'formatter'])\n    },\n    seriesDataIndices: payloadBatch.slice()\n  });\n}\n\nfunction updateModelActually(showValueMap, axesInfo, outputPayload) {\n  var outputAxesInfo = outputPayload.axesInfo = []; // Basic logic: If no 'show' required, 'hide' this axisPointer.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    var valItem = showValueMap[key];\n\n    if (valItem) {\n      !axisInfo.useHandle && (option.status = 'show');\n      option.value = valItem.value; // For label formatter param and highlight.\n\n      option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n    } // When always show (e.g., handle used), remain\n    // original value and status.\n    else {\n        // If hide, value still need to be set, consider\n        // click legend to toggle axis blank.\n        !axisInfo.useHandle && (option.status = 'hide');\n      } // If status is 'hide', should be no info in payload.\n\n\n    option.status === 'show' && outputAxesInfo.push({\n      axisDim: axisInfo.axis.dim,\n      axisIndex: axisInfo.axis.model.componentIndex,\n      value: option.value\n    });\n  });\n}\n\nfunction dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n  // Basic logic: If no showTip required, hideTip will be dispatched.\n  if (illegalPoint(point) || !dataByCoordSys.list.length) {\n    dispatchAction({\n      type: 'hideTip'\n    });\n    return;\n  } // In most case only one axis (or event one series is used). It is\n  // convenient to fetch payload.seriesIndex and payload.dataIndex\n  // directly. So put the first seriesIndex and dataIndex of the first\n  // axis on the payload.\n\n\n  var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n  dispatchAction({\n    type: 'showTip',\n    escapeConnect: true,\n    x: point[0],\n    y: point[1],\n    tooltipOption: payload.tooltipOption,\n    position: payload.position,\n    dataIndexInside: sampleItem.dataIndexInside,\n    dataIndex: sampleItem.dataIndex,\n    seriesIndex: sampleItem.seriesIndex,\n    dataByCoordSys: dataByCoordSys.list\n  });\n}\n\nfunction dispatchHighDownActually(axesInfo, dispatchAction, api) {\n  // FIXME\n  // highlight status modification should be a stage of main process?\n  // (Consider confilct (e.g., legend and axisPointer) and setOption)\n  var zr = api.getZr();\n  var highDownKey = 'axisPointerLastHighlights';\n  var lastHighlights = inner(zr)[highDownKey] || {};\n  var newHighlights = inner(zr)[highDownKey] = {}; // Update highlight/downplay status according to axisPointer model.\n  // Build hash map and remove duplicate incidentally.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n      var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n      newHighlights[key] = batchItem;\n    });\n  }); // Diff.\n\n  var toHighlight = [];\n  var toDownplay = [];\n  each(lastHighlights, function (batchItem, key) {\n    !newHighlights[key] && toDownplay.push(batchItem);\n  });\n  each(newHighlights, function (batchItem, key) {\n    !lastHighlights[key] && toHighlight.push(batchItem);\n  });\n  toDownplay.length && api.dispatchAction({\n    type: 'downplay',\n    escapeConnect: true,\n    // Not blur others when highlight in axisPointer.\n    notBlur: true,\n    batch: toDownplay\n  });\n  toHighlight.length && api.dispatchAction({\n    type: 'highlight',\n    escapeConnect: true,\n    // Not blur others when highlight in axisPointer.\n    notBlur: true,\n    batch: toHighlight\n  });\n}\n\nfunction findInputAxisInfo(inputAxesInfo, axisInfo) {\n  for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n    var inputAxisInfo = inputAxesInfo[i];\n\n    if (axisInfo.axis.dim === inputAxisInfo.axisDim && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex) {\n      return inputAxisInfo;\n    }\n  }\n}\n\nfunction makeMapperParam(axisInfo) {\n  var axisModel = axisInfo.axis.model;\n  var item = {};\n  var dim = item.axisDim = axisInfo.axis.dim;\n  item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n  item.axisName = item[dim + 'AxisName'] = axisModel.name;\n  item.axisId = item[dim + 'AxisId'] = axisModel.id;\n  return item;\n}\n\nfunction illegalPoint(point) {\n  return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport AxisView from '../axis/AxisView.js';\nimport CartesianAxisPointer from './CartesianAxisPointer.js';\nimport AxisPointerModel from './AxisPointerModel.js';\nimport AxisPointerView from './AxisPointerView.js';\nimport { isArray } from 'zrender/lib/core/util.js';\nimport { collect } from './modelHelper.js';\nimport axisTrigger from './axisTrigger.js';\nexport function install(registers) {\n  // CartesianAxisPointer is not supposed to be required here. But consider\n  // echarts.simple.js and online build tooltip, which only require gridSimple,\n  // CartesianAxisPointer should be able to required somewhere.\n  AxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\n  registers.registerComponentModel(AxisPointerModel);\n  registers.registerComponentView(AxisPointerView);\n  registers.registerPreprocessor(function (option) {\n    // Always has a global axisPointerModel for default setting.\n    if (option) {\n      (!option.axisPointer || option.axisPointer.length === 0) && (option.axisPointer = {});\n      var link = option.axisPointer.link; // Normalize to array to avoid object mergin. But if link\n      // is not set, remain null/undefined, otherwise it will\n      // override existent link setting.\n\n      if (link && !isArray(link)) {\n        option.axisPointer.link = [link];\n      }\n    }\n  }); // This process should proformed after coordinate systems created\n  // and series data processed. So put it on statistic processing stage.\n\n  registers.registerProcessor(registers.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n    // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n    // allAxesInfo should be updated when setOption performed.\n    ecModel.getComponent('axisPointer').coordSysAxesInfo = collect(ecModel, api);\n  }); // Broadcast to all views.\n\n  registers.registerAction({\n    type: 'updateAxisPointer',\n    event: 'updateAxisPointer',\n    update: ':updateAxisPointer'\n  }, axisTrigger);\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport Model from '../../model/Model.js';\nimport { each, curry, clone, defaults, isArray, indexOf } from 'zrender/lib/core/util.js'; // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n// allAxesInfo should be updated when setOption performed.\n\nexport function collect(ecModel, api) {\n  var result = {\n    /**\n     * key: makeKey(axis.model)\n     * value: {\n     *      axis,\n     *      coordSys,\n     *      axisPointerModel,\n     *      triggerTooltip,\n     *      involveSeries,\n     *      snap,\n     *      seriesModels,\n     *      seriesDataCount\n     * }\n     */\n    axesInfo: {},\n    seriesInvolved: false,\n\n    /**\n     * key: makeKey(coordSys.model)\n     * value: Object: key makeKey(axis.model), value: axisInfo\n     */\n    coordSysAxesInfo: {},\n    coordSysMap: {}\n  };\n  collectAxesInfo(result, ecModel, api); // Check seriesInvolved for performance, in case too many series in some chart.\n\n  result.seriesInvolved && collectSeriesInfo(result, ecModel);\n  return result;\n}\n\nfunction collectAxesInfo(result, ecModel, api) {\n  var globalTooltipModel = ecModel.getComponent('tooltip');\n  var globalAxisPointerModel = ecModel.getComponent('axisPointer'); // links can only be set on global.\n\n  var linksOption = globalAxisPointerModel.get('link', true) || [];\n  var linkGroups = []; // Collect axes info.\n\n  each(api.getCoordinateSystems(), function (coordSys) {\n    // Some coordinate system do not support axes, like geo.\n    if (!coordSys.axisPointerEnabled) {\n      return;\n    }\n\n    var coordSysKey = makeKey(coordSys.model);\n    var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n    result.coordSysMap[coordSysKey] = coordSys; // Set tooltip (like 'cross') is a convenient way to show axisPointer\n    // for user. So we enable setting tooltip on coordSys model.\n\n    var coordSysModel = coordSys.model;\n    var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n    each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null)); // If axis tooltip used, choose tooltip axis for each coordSys.\n    // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n\n    if (coordSys.getTooltipAxes && globalTooltipModel // If tooltip.showContent is set as false, tooltip will not\n    // show but axisPointer will show as normal.\n    && baseTooltipModel.get('show')) {\n      // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n      // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n      var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n      var cross = baseTooltipModel.get(['axisPointer', 'type']) === 'cross';\n      var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get(['axisPointer', 'axis']));\n\n      if (triggerAxis || cross) {\n        each(tooltipAxes.baseAxes, curry(saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis));\n      }\n\n      if (cross) {\n        each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n      }\n    } // fromTooltip: true | false | 'cross'\n    // triggerTooltip: true | false | null\n\n\n    function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n      var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n      var axisPointerShow = axisPointerModel.get('show');\n\n      if (!axisPointerShow || axisPointerShow === 'auto' && !fromTooltip && !isHandleTrigger(axisPointerModel)) {\n        return;\n      }\n\n      if (triggerTooltip == null) {\n        triggerTooltip = axisPointerModel.get('triggerTooltip');\n      }\n\n      axisPointerModel = fromTooltip ? makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) : axisPointerModel;\n      var snap = axisPointerModel.get('snap');\n      var axisKey = makeKey(axis.model);\n      var involveSeries = triggerTooltip || snap || axis.type === 'category'; // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n\n      var axisInfo = result.axesInfo[axisKey] = {\n        key: axisKey,\n        axis: axis,\n        coordSys: coordSys,\n        axisPointerModel: axisPointerModel,\n        triggerTooltip: triggerTooltip,\n        involveSeries: involveSeries,\n        snap: snap,\n        useHandle: isHandleTrigger(axisPointerModel),\n        seriesModels: [],\n        linkGroup: null\n      };\n      axesInfoInCoordSys[axisKey] = axisInfo;\n      result.seriesInvolved = result.seriesInvolved || involveSeries;\n      var groupIndex = getLinkGroupIndex(linksOption, axis);\n\n      if (groupIndex != null) {\n        var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {\n          axesInfo: {}\n        });\n        linkGroup.axesInfo[axisKey] = axisInfo;\n        linkGroup.mapper = linksOption[groupIndex].mapper;\n        axisInfo.linkGroup = linkGroup;\n      }\n    }\n  });\n}\n\nfunction makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) {\n  var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n  var fields = ['type', 'snap', 'lineStyle', 'shadowStyle', 'label', 'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'];\n  var volatileOption = {};\n  each(fields, function (field) {\n    volatileOption[field] = clone(tooltipAxisPointerModel.get(field));\n  }); // category axis do not auto snap, otherwise some tick that do not\n  // has value can not be hovered. value/time/log axis default snap if\n  // triggered from tooltip and trigger tooltip.\n\n  volatileOption.snap = axis.type !== 'category' && !!triggerTooltip; // Compatible with previous behavior, tooltip axis does not show label by default.\n  // Only these properties can be overridden from tooltip to axisPointer.\n\n  if (tooltipAxisPointerModel.get('type') === 'cross') {\n    volatileOption.type = 'line';\n  }\n\n  var labelOption = volatileOption.label || (volatileOption.label = {}); // Follow the convention, do not show label when triggered by tooltip by default.\n\n  labelOption.show == null && (labelOption.show = false);\n\n  if (fromTooltip === 'cross') {\n    // When 'cross', both axes show labels.\n    var tooltipAxisPointerLabelShow = tooltipAxisPointerModel.get(['label', 'show']);\n    labelOption.show = tooltipAxisPointerLabelShow != null ? tooltipAxisPointerLabelShow : true; // If triggerTooltip, this is a base axis, which should better not use cross style\n    // (cross style is dashed by default)\n\n    if (!triggerTooltip) {\n      var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n      crossStyle && defaults(labelOption, crossStyle.textStyle);\n    }\n  }\n\n  return axis.model.getModel('axisPointer', new Model(volatileOption, globalAxisPointerModel, ecModel));\n}\n\nfunction collectSeriesInfo(result, ecModel) {\n  // Prepare data for axis trigger\n  ecModel.eachSeries(function (seriesModel) {\n    // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesTooltipTrigger = seriesModel.get(['tooltip', 'trigger'], true);\n    var seriesTooltipShow = seriesModel.get(['tooltip', 'show'], true);\n\n    if (!coordSys || seriesTooltipTrigger === 'none' || seriesTooltipTrigger === false || seriesTooltipTrigger === 'item' || seriesTooltipShow === false || seriesModel.get(['axisPointer', 'show'], true) === false) {\n      return;\n    }\n\n    each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n      var axis = axisInfo.axis;\n\n      if (coordSys.getAxis(axis.dim) === axis) {\n        axisInfo.seriesModels.push(seriesModel);\n        axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n        axisInfo.seriesDataCount += seriesModel.getData().count();\n      }\n    });\n  });\n}\n/**\n * For example:\n * {\n *     axisPointer: {\n *         links: [{\n *             xAxisIndex: [2, 4],\n *             yAxisIndex: 'all'\n *         }, {\n *             xAxisId: ['a5', 'a7'],\n *             xAxisName: 'xxx'\n *         }]\n *     }\n * }\n */\n\n\nfunction getLinkGroupIndex(linksOption, axis) {\n  var axisModel = axis.model;\n  var dim = axis.dim;\n\n  for (var i = 0; i < linksOption.length; i++) {\n    var linkOption = linksOption[i] || {};\n\n    if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id) || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex) || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)) {\n      return i;\n    }\n  }\n}\n\nfunction checkPropInLink(linkPropValue, axisPropValue) {\n  return linkPropValue === 'all' || isArray(linkPropValue) && indexOf(linkPropValue, axisPropValue) >= 0 || linkPropValue === axisPropValue;\n}\n\nexport function fixValue(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n\n  if (!axisInfo) {\n    return;\n  }\n\n  var axisPointerModel = axisInfo.axisPointerModel;\n  var scale = axisInfo.axis.scale;\n  var option = axisPointerModel.option;\n  var status = axisPointerModel.get('status');\n  var value = axisPointerModel.get('value'); // Parse init value for category and time axis.\n\n  if (value != null) {\n    value = scale.parse(value);\n  }\n\n  var useHandle = isHandleTrigger(axisPointerModel); // If `handle` used, `axisPointer` will always be displayed, so value\n  // and status should be initialized.\n\n  if (status == null) {\n    option.status = useHandle ? 'show' : 'hide';\n  }\n\n  var extent = scale.getExtent().slice();\n  extent[0] > extent[1] && extent.reverse();\n\n  if ( // Pick a value on axis when initializing.\n  value == null // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n  // where we should re-pick a value to keep `handle` displaying normally.\n  || value > extent[1]) {\n    // Make handle displayed on the end of the axis when init, which looks better.\n    value = extent[1];\n  }\n\n  if (value < extent[0]) {\n    value = extent[0];\n  }\n\n  option.value = value;\n\n  if (useHandle) {\n    option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n  }\n}\nexport function getAxisInfo(axisModel) {\n  var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n  return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n}\nexport function getAxisPointerModel(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n  return axisInfo && axisInfo.axisPointerModel;\n}\n\nfunction isHandleTrigger(axisPointerModel) {\n  return !!axisPointerModel.get(['handle', 'show']);\n}\n/**\n * @param {module:echarts/model/Model} model\n * @return {string} unique key\n */\n\n\nexport function makeKey(model) {\n  return model.type + '||' + model.id;\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport * as graphic from '../../util/graphic.js';\nimport * as textContain from 'zrender/lib/contain/text.js';\nimport * as formatUtil from '../../util/format.js';\nimport * as matrix from 'zrender/lib/core/matrix.js';\nimport * as axisHelper from '../../coord/axisHelper.js';\nimport AxisBuilder from '../axis/AxisBuilder.js';\nimport { createTextStyle } from '../../label/labelStyle.js';\nexport function buildElStyle(axisPointerModel) {\n  var axisPointerType = axisPointerModel.get('type');\n  var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n  var style;\n\n  if (axisPointerType === 'line') {\n    style = styleModel.getLineStyle();\n    style.fill = null;\n  } else if (axisPointerType === 'shadow') {\n    style = styleModel.getAreaStyle();\n    style.stroke = null;\n  }\n\n  return style;\n}\n/**\n * @param {Function} labelPos {align, verticalAlign, position}\n */\n\nexport function buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos) {\n  var value = axisPointerModel.get('value');\n  var text = getValueLabel(value, axisModel.axis, axisModel.ecModel, axisPointerModel.get('seriesDataIndices'), {\n    precision: axisPointerModel.get(['label', 'precision']),\n    formatter: axisPointerModel.get(['label', 'formatter'])\n  });\n  var labelModel = axisPointerModel.getModel('label');\n  var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n  var font = labelModel.getFont();\n  var textRect = textContain.getBoundingRect(text, font);\n  var position = labelPos.position;\n  var width = textRect.width + paddings[1] + paddings[3];\n  var height = textRect.height + paddings[0] + paddings[2]; // Adjust by align.\n\n  var align = labelPos.align;\n  align === 'right' && (position[0] -= width);\n  align === 'center' && (position[0] -= width / 2);\n  var verticalAlign = labelPos.verticalAlign;\n  verticalAlign === 'bottom' && (position[1] -= height);\n  verticalAlign === 'middle' && (position[1] -= height / 2); // Not overflow ec container\n\n  confineInContainer(position, width, height, api);\n  var bgColor = labelModel.get('backgroundColor');\n\n  if (!bgColor || bgColor === 'auto') {\n    bgColor = axisModel.get(['axisLine', 'lineStyle', 'color']);\n  }\n\n  elOption.label = {\n    // shape: {x: 0, y: 0, width: width, height: height, r: labelModel.get('borderRadius')},\n    x: position[0],\n    y: position[1],\n    style: createTextStyle(labelModel, {\n      text: text,\n      font: font,\n      fill: labelModel.getTextColor(),\n      padding: paddings,\n      backgroundColor: bgColor\n    }),\n    // Label should be over axisPointer.\n    z2: 10\n  };\n} // Do not overflow ec container\n\nfunction confineInContainer(position, width, height, api) {\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  position[0] = Math.min(position[0] + width, viewWidth) - width;\n  position[1] = Math.min(position[1] + height, viewHeight) - height;\n  position[0] = Math.max(position[0], 0);\n  position[1] = Math.max(position[1], 0);\n}\n\nexport function getValueLabel(value, axis, ecModel, seriesDataIndices, opt) {\n  value = axis.scale.parse(value);\n  var text = axis.scale.getLabel({\n    value: value\n  }, {\n    // If `precision` is set, width can be fixed (like '12.00500'), which\n    // helps to debounce when when moving label.\n    precision: opt.precision\n  });\n  var formatter = opt.formatter;\n\n  if (formatter) {\n    var params_1 = {\n      value: axisHelper.getAxisRawValue(axis, {\n        value: value\n      }),\n      axisDimension: axis.dim,\n      axisIndex: axis.index,\n      seriesData: []\n    };\n    zrUtil.each(seriesDataIndices, function (idxItem) {\n      var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n      var dataIndex = idxItem.dataIndexInside;\n      var dataParams = series && series.getDataParams(dataIndex);\n      dataParams && params_1.seriesData.push(dataParams);\n    });\n\n    if (zrUtil.isString(formatter)) {\n      text = formatter.replace('{value}', text);\n    } else if (zrUtil.isFunction(formatter)) {\n      text = formatter(params_1);\n    }\n  }\n\n  return text;\n}\nexport function getTransformedPosition(axis, value, layoutInfo) {\n  var transform = matrix.create();\n  matrix.rotate(transform, transform, layoutInfo.rotation);\n  matrix.translate(transform, transform, layoutInfo.position);\n  return graphic.applyTransform([axis.dataToCoord(value), (layoutInfo.labelOffset || 0) + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)], transform);\n}\nexport function buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api) {\n  // @ts-ignore\n  var textLayout = AxisBuilder.innerTextLayout(layoutInfo.rotation, 0, layoutInfo.labelDirection);\n  layoutInfo.labelMargin = axisPointerModel.get(['label', 'margin']);\n  buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n    position: getTransformedPosition(axisModel.axis, value, layoutInfo),\n    align: textLayout.textAlign,\n    verticalAlign: textLayout.textVerticalAlign\n  });\n}\nexport function makeLineShape(p1, p2, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x1: p1[xDimIndex],\n    y1: p1[1 - xDimIndex],\n    x2: p2[xDimIndex],\n    y2: p2[1 - xDimIndex]\n  };\n}\nexport function makeRectShape(xy, wh, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x: xy[xDimIndex],\n    y: xy[1 - xDimIndex],\n    width: wh[xDimIndex],\n    height: wh[1 - xDimIndex]\n  };\n}\nexport function makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n  return {\n    cx: cx,\n    cy: cy,\n    r0: r0,\n    r: r,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    clockwise: true\n  };\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport * as graphic from '../../util/graphic.js';\nimport { createTextStyle } from '../../label/labelStyle.js';\nimport Model from '../../model/Model.js';\nimport AxisView from './AxisView.js';\nimport AxisBuilder from './AxisBuilder.js';\nimport { getECData } from '../../util/innerStore.js';\nvar elementList = ['axisLine', 'axisLabel', 'axisTick', 'minorTick', 'splitLine', 'minorSplitLine', 'splitArea'];\n\nfunction getAxisLineShape(polar, rExtent, angle) {\n  rExtent[1] > rExtent[0] && (rExtent = rExtent.slice().reverse());\n  var start = polar.coordToPoint([rExtent[0], angle]);\n  var end = polar.coordToPoint([rExtent[1], angle]);\n  return {\n    x1: start[0],\n    y1: start[1],\n    x2: end[0],\n    y2: end[1]\n  };\n}\n\nfunction getRadiusIdx(polar) {\n  var radiusAxis = polar.getRadiusAxis();\n  return radiusAxis.inverse ? 0 : 1;\n} // Remove the last tick which will overlap the first tick\n\n\nfunction fixAngleOverlap(list) {\n  var firstItem = list[0];\n  var lastItem = list[list.length - 1];\n\n  if (firstItem && lastItem && Math.abs(Math.abs(firstItem.coord - lastItem.coord) - 360) < 1e-4) {\n    list.pop();\n  }\n}\n\nvar AngleAxisView =\n/** @class */\nfunction (_super) {\n  __extends(AngleAxisView, _super);\n\n  function AngleAxisView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = AngleAxisView.type;\n    _this.axisPointerClass = 'PolarAxisPointer';\n    return _this;\n  }\n\n  AngleAxisView.prototype.render = function (angleAxisModel, ecModel) {\n    this.group.removeAll();\n\n    if (!angleAxisModel.get('show')) {\n      return;\n    }\n\n    var angleAxis = angleAxisModel.axis;\n    var polar = angleAxis.polar;\n    var radiusExtent = polar.getRadiusAxis().getExtent();\n    var ticksAngles = angleAxis.getTicksCoords();\n    var minorTickAngles = angleAxis.getMinorTicksCoords();\n    var labels = zrUtil.map(angleAxis.getViewLabels(), function (labelItem) {\n      labelItem = zrUtil.clone(labelItem);\n      var scale = angleAxis.scale;\n      var tickValue = scale.type === 'ordinal' ? scale.getRawOrdinalNumber(labelItem.tickValue) : labelItem.tickValue;\n      labelItem.coord = angleAxis.dataToCoord(tickValue);\n      return labelItem;\n    });\n    fixAngleOverlap(labels);\n    fixAngleOverlap(ticksAngles);\n    zrUtil.each(elementList, function (name) {\n      if (angleAxisModel.get([name, 'show']) && (!angleAxis.scale.isBlank() || name === 'axisLine')) {\n        angelAxisElementsBuilders[name](this.group, angleAxisModel, polar, ticksAngles, minorTickAngles, radiusExtent, labels);\n      }\n    }, this);\n  };\n\n  AngleAxisView.type = 'angleAxis';\n  return AngleAxisView;\n}(AxisView);\n\nvar angelAxisElementsBuilders = {\n  axisLine: function (group, angleAxisModel, polar, ticksAngles, minorTickAngles, radiusExtent) {\n    var lineStyleModel = angleAxisModel.getModel(['axisLine', 'lineStyle']); // extent id of the axis radius (r0 and r)\n\n    var rId = getRadiusIdx(polar);\n    var r0Id = rId ? 0 : 1;\n    var shape;\n\n    if (radiusExtent[r0Id] === 0) {\n      shape = new graphic.Circle({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r: radiusExtent[rId]\n        },\n        style: lineStyleModel.getLineStyle(),\n        z2: 1,\n        silent: true\n      });\n    } else {\n      shape = new graphic.Ring({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r: radiusExtent[rId],\n          r0: radiusExtent[r0Id]\n        },\n        style: lineStyleModel.getLineStyle(),\n        z2: 1,\n        silent: true\n      });\n    }\n\n    shape.style.fill = null;\n    group.add(shape);\n  },\n  axisTick: function (group, angleAxisModel, polar, ticksAngles, minorTickAngles, radiusExtent) {\n    var tickModel = angleAxisModel.getModel('axisTick');\n    var tickLen = (tickModel.get('inside') ? -1 : 1) * tickModel.get('length');\n    var radius = radiusExtent[getRadiusIdx(polar)];\n    var lines = zrUtil.map(ticksAngles, function (tickAngleItem) {\n      return new graphic.Line({\n        shape: getAxisLineShape(polar, [radius, radius + tickLen], tickAngleItem.coord)\n      });\n    });\n    group.add(graphic.mergePath(lines, {\n      style: zrUtil.defaults(tickModel.getModel('lineStyle').getLineStyle(), {\n        stroke: angleAxisModel.get(['axisLine', 'lineStyle', 'color'])\n      })\n    }));\n  },\n  minorTick: function (group, angleAxisModel, polar, tickAngles, minorTickAngles, radiusExtent) {\n    if (!minorTickAngles.length) {\n      return;\n    }\n\n    var tickModel = angleAxisModel.getModel('axisTick');\n    var minorTickModel = angleAxisModel.getModel('minorTick');\n    var tickLen = (tickModel.get('inside') ? -1 : 1) * minorTickModel.get('length');\n    var radius = radiusExtent[getRadiusIdx(polar)];\n    var lines = [];\n\n    for (var i = 0; i < minorTickAngles.length; i++) {\n      for (var k = 0; k < minorTickAngles[i].length; k++) {\n        lines.push(new graphic.Line({\n          shape: getAxisLineShape(polar, [radius, radius + tickLen], minorTickAngles[i][k].coord)\n        }));\n      }\n    }\n\n    group.add(graphic.mergePath(lines, {\n      style: zrUtil.defaults(minorTickModel.getModel('lineStyle').getLineStyle(), zrUtil.defaults(tickModel.getLineStyle(), {\n        stroke: angleAxisModel.get(['axisLine', 'lineStyle', 'color'])\n      }))\n    }));\n  },\n  axisLabel: function (group, angleAxisModel, polar, ticksAngles, minorTickAngles, radiusExtent, labels) {\n    var rawCategoryData = angleAxisModel.getCategories(true);\n    var commonLabelModel = angleAxisModel.getModel('axisLabel');\n    var labelMargin = commonLabelModel.get('margin');\n    var triggerEvent = angleAxisModel.get('triggerEvent'); // Use length of ticksAngles because it may remove the last tick to avoid overlapping\n\n    zrUtil.each(labels, function (labelItem, idx) {\n      var labelModel = commonLabelModel;\n      var tickValue = labelItem.tickValue;\n      var r = radiusExtent[getRadiusIdx(polar)];\n      var p = polar.coordToPoint([r + labelMargin, labelItem.coord]);\n      var cx = polar.cx;\n      var cy = polar.cy;\n      var labelTextAlign = Math.abs(p[0] - cx) / r < 0.3 ? 'center' : p[0] > cx ? 'left' : 'right';\n      var labelTextVerticalAlign = Math.abs(p[1] - cy) / r < 0.3 ? 'middle' : p[1] > cy ? 'top' : 'bottom';\n\n      if (rawCategoryData && rawCategoryData[tickValue]) {\n        var rawCategoryItem = rawCategoryData[tickValue];\n\n        if (zrUtil.isObject(rawCategoryItem) && rawCategoryItem.textStyle) {\n          labelModel = new Model(rawCategoryItem.textStyle, commonLabelModel, commonLabelModel.ecModel);\n        }\n      }\n\n      var textEl = new graphic.Text({\n        silent: AxisBuilder.isLabelSilent(angleAxisModel),\n        style: createTextStyle(labelModel, {\n          x: p[0],\n          y: p[1],\n          fill: labelModel.getTextColor() || angleAxisModel.get(['axisLine', 'lineStyle', 'color']),\n          text: labelItem.formattedLabel,\n          align: labelTextAlign,\n          verticalAlign: labelTextVerticalAlign\n        })\n      });\n      group.add(textEl); // Pack data for mouse event\n\n      if (triggerEvent) {\n        var eventData = AxisBuilder.makeAxisEventDataBase(angleAxisModel);\n        eventData.targetType = 'axisLabel';\n        eventData.value = labelItem.rawLabel;\n        getECData(textEl).eventData = eventData;\n      }\n    }, this);\n  },\n  splitLine: function (group, angleAxisModel, polar, ticksAngles, minorTickAngles, radiusExtent) {\n    var splitLineModel = angleAxisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineCount = 0;\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var splitLines = [];\n\n    for (var i = 0; i < ticksAngles.length; i++) {\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Line({\n        shape: getAxisLineShape(polar, radiusExtent, ticksAngles[i].coord)\n      }));\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitLines.length; i++) {\n      group.add(graphic.mergePath(splitLines[i], {\n        style: zrUtil.defaults({\n          stroke: lineColors[i % lineColors.length]\n        }, lineStyleModel.getLineStyle()),\n        silent: true,\n        z: angleAxisModel.get('z')\n      }));\n    }\n  },\n  minorSplitLine: function (group, angleAxisModel, polar, ticksAngles, minorTickAngles, radiusExtent) {\n    if (!minorTickAngles.length) {\n      return;\n    }\n\n    var minorSplitLineModel = angleAxisModel.getModel('minorSplitLine');\n    var lineStyleModel = minorSplitLineModel.getModel('lineStyle');\n    var lines = [];\n\n    for (var i = 0; i < minorTickAngles.length; i++) {\n      for (var k = 0; k < minorTickAngles[i].length; k++) {\n        lines.push(new graphic.Line({\n          shape: getAxisLineShape(polar, radiusExtent, minorTickAngles[i][k].coord)\n        }));\n      }\n    }\n\n    group.add(graphic.mergePath(lines, {\n      style: lineStyleModel.getLineStyle(),\n      silent: true,\n      z: angleAxisModel.get('z')\n    }));\n  },\n  splitArea: function (group, angleAxisModel, polar, ticksAngles, minorTickAngles, radiusExtent) {\n    if (!ticksAngles.length) {\n      return;\n    }\n\n    var splitAreaModel = angleAxisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var lineCount = 0;\n    areaColors = areaColors instanceof Array ? areaColors : [areaColors];\n    var splitAreas = [];\n    var RADIAN = Math.PI / 180;\n    var prevAngle = -ticksAngles[0].coord * RADIAN;\n    var r0 = Math.min(radiusExtent[0], radiusExtent[1]);\n    var r1 = Math.max(radiusExtent[0], radiusExtent[1]);\n    var clockwise = angleAxisModel.get('clockwise');\n\n    for (var i = 1, len = ticksAngles.length; i <= len; i++) {\n      var coord = i === len ? ticksAngles[0].coord : ticksAngles[i].coord;\n      var colorIndex = lineCount++ % areaColors.length;\n      splitAreas[colorIndex] = splitAreas[colorIndex] || [];\n      splitAreas[colorIndex].push(new graphic.Sector({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r0: r0,\n          r: r1,\n          startAngle: prevAngle,\n          endAngle: -coord * RADIAN,\n          clockwise: clockwise\n        },\n        silent: true\n      }));\n      prevAngle = -coord * RADIAN;\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitAreas.length; i++) {\n      group.add(graphic.mergePath(splitAreas[i], {\n        style: zrUtil.defaults({\n          fill: areaColors[i % areaColors.length]\n        }, areaStyleModel.getAreaStyle()),\n        silent: true\n      }));\n    }\n  }\n};\nexport default AngleAxisView;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { retrieve, defaults, extend, each, isObject, map, isString, isNumber, isFunction } from 'zrender/lib/core/util.js';\nimport * as graphic from '../../util/graphic.js';\nimport { getECData } from '../../util/innerStore.js';\nimport { createTextStyle } from '../../label/labelStyle.js';\nimport Model from '../../model/Model.js';\nimport { isRadianAroundZero, remRadian } from '../../util/number.js';\nimport { createSymbol, normalizeSymbolOffset } from '../../util/symbol.js';\nimport * as matrixUtil from 'zrender/lib/core/matrix.js';\nimport { applyTransform as v2ApplyTransform } from 'zrender/lib/core/vector.js';\nimport { shouldShowAllLabels } from '../../coord/axisHelper.js';\nimport { prepareLayoutList, hideOverlap } from '../../label/labelLayoutHelper.js';\nvar PI = Math.PI;\n/**\n * A final axis is translated and rotated from a \"standard axis\".\n * So opt.position and opt.rotation is required.\n *\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n * for example: (0, 0) ------------> (0, 50)\n *\n * nameDirection or tickDirection or labelDirection is 1 means tick\n * or label is below the standard axis, whereas is -1 means above\n * the standard axis. labelOffset means offset between label and axis,\n * which is useful when 'onZero', where axisLabel is in the grid and\n * label in outside grid.\n *\n * Tips: like always,\n * positive rotation represents anticlockwise, and negative rotation\n * represents clockwise.\n * The direction of position coordinate is the same as the direction\n * of screen coordinate.\n *\n * Do not need to consider axis 'inverse', which is auto processed by\n * axis extent.\n */\n\nvar AxisBuilder =\n/** @class */\nfunction () {\n  function AxisBuilder(axisModel, opt) {\n    this.group = new graphic.Group();\n    this.opt = opt;\n    this.axisModel = axisModel; // Default value\n\n    defaults(opt, {\n      labelOffset: 0,\n      nameDirection: 1,\n      tickDirection: 1,\n      labelDirection: 1,\n      silent: true,\n      handleAutoShown: function () {\n        return true;\n      }\n    }); // FIXME Not use a separate text group?\n\n    var transformGroup = new graphic.Group({\n      x: opt.position[0],\n      y: opt.position[1],\n      rotation: opt.rotation\n    }); // this.group.add(transformGroup);\n    // this._transformGroup = transformGroup;\n\n    transformGroup.updateTransform();\n    this._transformGroup = transformGroup;\n  }\n\n  AxisBuilder.prototype.hasBuilder = function (name) {\n    return !!builders[name];\n  };\n\n  AxisBuilder.prototype.add = function (name) {\n    builders[name](this.opt, this.axisModel, this.group, this._transformGroup);\n  };\n\n  AxisBuilder.prototype.getGroup = function () {\n    return this.group;\n  };\n\n  AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n    var rotationDiff = remRadian(textRotation - axisRotation);\n    var textAlign;\n    var textVerticalAlign;\n\n    if (isRadianAroundZero(rotationDiff)) {\n      // Label is parallel with axis line.\n      textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n      textAlign = 'center';\n    } else if (isRadianAroundZero(rotationDiff - PI)) {\n      // Label is inverse parallel with axis line.\n      textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n      textAlign = 'center';\n    } else {\n      textVerticalAlign = 'middle';\n\n      if (rotationDiff > 0 && rotationDiff < PI) {\n        textAlign = direction > 0 ? 'right' : 'left';\n      } else {\n        textAlign = direction > 0 ? 'left' : 'right';\n      }\n    }\n\n    return {\n      rotation: rotationDiff,\n      textAlign: textAlign,\n      textVerticalAlign: textVerticalAlign\n    };\n  };\n\n  AxisBuilder.makeAxisEventDataBase = function (axisModel) {\n    var eventData = {\n      componentType: axisModel.mainType,\n      componentIndex: axisModel.componentIndex\n    };\n    eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n    return eventData;\n  };\n\n  AxisBuilder.isLabelSilent = function (axisModel) {\n    var tooltipOpt = axisModel.get('tooltip');\n    return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\n    || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\n  };\n\n  return AxisBuilder;\n}();\n\n;\nvar builders = {\n  axisLine: function (opt, axisModel, group, transformGroup) {\n    var shown = axisModel.get(['axisLine', 'show']);\n\n    if (shown === 'auto' && opt.handleAutoShown) {\n      shown = opt.handleAutoShown('axisLine');\n    }\n\n    if (!shown) {\n      return;\n    }\n\n    var extent = axisModel.axis.getExtent();\n    var matrix = transformGroup.transform;\n    var pt1 = [extent[0], 0];\n    var pt2 = [extent[1], 0];\n    var inverse = pt1[0] > pt2[0];\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    }\n\n    var lineStyle = extend({\n      lineCap: 'round'\n    }, axisModel.getModel(['axisLine', 'lineStyle']).getLineStyle());\n    var line = new graphic.Line({\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: lineStyle,\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\n      silent: true,\n      z2: 1\n    });\n    graphic.subPixelOptimizeLine(line.shape, line.style.lineWidth);\n    line.anid = 'line';\n    group.add(line);\n    var arrows = axisModel.get(['axisLine', 'symbol']);\n\n    if (arrows != null) {\n      var arrowSize = axisModel.get(['axisLine', 'symbolSize']);\n\n      if (isString(arrows)) {\n        // Use the same arrow for start and end point\n        arrows = [arrows, arrows];\n      }\n\n      if (isString(arrowSize) || isNumber(arrowSize)) {\n        // Use the same size for width and height\n        arrowSize = [arrowSize, arrowSize];\n      }\n\n      var arrowOffset = normalizeSymbolOffset(axisModel.get(['axisLine', 'symbolOffset']) || 0, arrowSize);\n      var symbolWidth_1 = arrowSize[0];\n      var symbolHeight_1 = arrowSize[1];\n      each([{\n        rotate: opt.rotation + Math.PI / 2,\n        offset: arrowOffset[0],\n        r: 0\n      }, {\n        rotate: opt.rotation - Math.PI / 2,\n        offset: arrowOffset[1],\n        r: Math.sqrt((pt1[0] - pt2[0]) * (pt1[0] - pt2[0]) + (pt1[1] - pt2[1]) * (pt1[1] - pt2[1]))\n      }], function (point, index) {\n        if (arrows[index] !== 'none' && arrows[index] != null) {\n          var symbol = createSymbol(arrows[index], -symbolWidth_1 / 2, -symbolHeight_1 / 2, symbolWidth_1, symbolHeight_1, lineStyle.stroke, true); // Calculate arrow position with offset\n\n          var r = point.r + point.offset;\n          var pt = inverse ? pt2 : pt1;\n          symbol.attr({\n            rotation: point.rotate,\n            x: pt[0] + r * Math.cos(opt.rotation),\n            y: pt[1] - r * Math.sin(opt.rotation),\n            silent: true,\n            z2: 11\n          });\n          group.add(symbol);\n        }\n      });\n    }\n  },\n  axisTickLabel: function (opt, axisModel, group, transformGroup) {\n    var ticksEls = buildAxisMajorTicks(group, transformGroup, axisModel, opt);\n    var labelEls = buildAxisLabel(group, transformGroup, axisModel, opt);\n    fixMinMaxLabelShow(axisModel, labelEls, ticksEls);\n    buildAxisMinorTicks(group, transformGroup, axisModel, opt.tickDirection); // This bit fixes the label overlap issue for the time chart.\n    // See https://github.com/apache/echarts/issues/14266 for more.\n\n    if (axisModel.get(['axisLabel', 'hideOverlap'])) {\n      var labelList = prepareLayoutList(map(labelEls, function (label) {\n        return {\n          label: label,\n          priority: label.z2,\n          defaultAttr: {\n            ignore: label.ignore\n          }\n        };\n      }));\n      hideOverlap(labelList);\n    }\n  },\n  axisName: function (opt, axisModel, group, transformGroup) {\n    var name = retrieve(opt.axisName, axisModel.get('name'));\n\n    if (!name) {\n      return;\n    }\n\n    var nameLocation = axisModel.get('nameLocation');\n    var nameDirection = opt.nameDirection;\n    var textStyleModel = axisModel.getModel('nameTextStyle');\n    var gap = axisModel.get('nameGap') || 0;\n    var extent = axisModel.axis.getExtent();\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // Reuse labelOffset.\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\n    var labelLayout;\n    var nameRotation = axisModel.get('nameRotate');\n\n    if (nameRotation != null) {\n      nameRotation = nameRotation * PI / 180; // To radian.\n    }\n\n    var axisNameAvailableWidth;\n\n    if (isNameLocationCenter(nameLocation)) {\n      labelLayout = AxisBuilder.innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n      nameDirection);\n    } else {\n      labelLayout = endTextLayout(opt.rotation, nameLocation, nameRotation || 0, extent);\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\n\n      if (axisNameAvailableWidth != null) {\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n      }\n    }\n\n    var textFont = textStyleModel.getFont();\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\n    var ellipsis = truncateOpt.ellipsis;\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth);\n    var textEl = new graphic.Text({\n      x: pos[0],\n      y: pos[1],\n      rotation: labelLayout.rotation,\n      silent: AxisBuilder.isLabelSilent(axisModel),\n      style: createTextStyle(textStyleModel, {\n        text: name,\n        font: textFont,\n        overflow: 'truncate',\n        width: maxWidth,\n        ellipsis: ellipsis,\n        fill: textStyleModel.getTextColor() || axisModel.get(['axisLine', 'lineStyle', 'color']),\n        align: textStyleModel.get('align') || labelLayout.textAlign,\n        verticalAlign: textStyleModel.get('verticalAlign') || labelLayout.textVerticalAlign\n      }),\n      z2: 1\n    });\n    graphic.setTooltipConfig({\n      el: textEl,\n      componentModel: axisModel,\n      itemName: name\n    });\n    textEl.__fullText = name; // Id for animation\n\n    textEl.anid = 'name';\n\n    if (axisModel.get('triggerEvent')) {\n      var eventData = AxisBuilder.makeAxisEventDataBase(axisModel);\n      eventData.targetType = 'axisName';\n      eventData.name = name;\n      getECData(textEl).eventData = eventData;\n    } // FIXME\n\n\n    transformGroup.add(textEl);\n    textEl.updateTransform();\n    group.add(textEl);\n    textEl.decomposeTransform();\n  }\n};\n\nfunction endTextLayout(rotation, textPosition, textRotate, extent) {\n  var rotationDiff = remRadian(textRotate - rotation);\n  var textAlign;\n  var textVerticalAlign;\n  var inverse = extent[0] > extent[1];\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\n\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n      textAlign = onLeft ? 'left' : 'right';\n    } else {\n      textAlign = onLeft ? 'right' : 'left';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n  if (shouldShowAllLabels(axisModel.axis)) {\n    return;\n  } // If min or max are user set, we need to check\n  // If the tick on min(max) are overlap on their neighbour tick\n  // If they are overlapped, we need to hide the min(max) tick label\n\n\n  var showMinLabel = axisModel.get(['axisLabel', 'showMinLabel']);\n  var showMaxLabel = axisModel.get(['axisLabel', 'showMaxLabel']); // FIXME\n  // Have not consider onBand yet, where tick els is more than label els.\n\n  labelEls = labelEls || [];\n  tickEls = tickEls || [];\n  var firstLabel = labelEls[0];\n  var nextLabel = labelEls[1];\n  var lastLabel = labelEls[labelEls.length - 1];\n  var prevLabel = labelEls[labelEls.length - 2];\n  var firstTick = tickEls[0];\n  var nextTick = tickEls[1];\n  var lastTick = tickEls[tickEls.length - 1];\n  var prevTick = tickEls[tickEls.length - 2];\n\n  if (showMinLabel === false) {\n    ignoreEl(firstLabel);\n    ignoreEl(firstTick);\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n    if (showMinLabel) {\n      ignoreEl(nextLabel);\n      ignoreEl(nextTick);\n    } else {\n      ignoreEl(firstLabel);\n      ignoreEl(firstTick);\n    }\n  }\n\n  if (showMaxLabel === false) {\n    ignoreEl(lastLabel);\n    ignoreEl(lastTick);\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n    if (showMaxLabel) {\n      ignoreEl(prevLabel);\n      ignoreEl(prevTick);\n    } else {\n      ignoreEl(lastLabel);\n      ignoreEl(lastTick);\n    }\n  }\n}\n\nfunction ignoreEl(el) {\n  el && (el.ignore = true);\n}\n\nfunction isTwoLabelOverlapped(current, next) {\n  // current and next has the same rotation.\n  var firstRect = current && current.getBoundingRect().clone();\n  var nextRect = next && next.getBoundingRect().clone();\n\n  if (!firstRect || !nextRect) {\n    return;\n  } // When checking intersect of two rotated labels, we use mRotationBack\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n\n\n  var mRotationBack = matrixUtil.identity([]);\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\n  return firstRect.intersect(nextRect);\n}\n\nfunction isNameLocationCenter(nameLocation) {\n  return nameLocation === 'middle' || nameLocation === 'center';\n}\n\nfunction createTicks(ticksCoords, tickTransform, tickEndCoord, tickLineStyle, anidPrefix) {\n  var tickEls = [];\n  var pt1 = [];\n  var pt2 = [];\n\n  for (var i = 0; i < ticksCoords.length; i++) {\n    var tickCoord = ticksCoords[i].coord;\n    pt1[0] = tickCoord;\n    pt1[1] = 0;\n    pt2[0] = tickCoord;\n    pt2[1] = tickEndCoord;\n\n    if (tickTransform) {\n      v2ApplyTransform(pt1, pt1, tickTransform);\n      v2ApplyTransform(pt2, pt2, tickTransform);\n    } // Tick line, Not use group transform to have better line draw\n\n\n    var tickEl = new graphic.Line({\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: tickLineStyle,\n      z2: 2,\n      autoBatch: true,\n      silent: true\n    });\n    graphic.subPixelOptimizeLine(tickEl.shape, tickEl.style.lineWidth);\n    tickEl.anid = anidPrefix + '_' + ticksCoords[i].tickValue;\n    tickEls.push(tickEl);\n  }\n\n  return tickEls;\n}\n\nfunction buildAxisMajorTicks(group, transformGroup, axisModel, opt) {\n  var axis = axisModel.axis;\n  var tickModel = axisModel.getModel('axisTick');\n  var shown = tickModel.get('show');\n\n  if (shown === 'auto' && opt.handleAutoShown) {\n    shown = opt.handleAutoShown('axisTick');\n  }\n\n  if (!shown || axis.scale.isBlank()) {\n    return;\n  }\n\n  var lineStyleModel = tickModel.getModel('lineStyle');\n  var tickEndCoord = opt.tickDirection * tickModel.get('length');\n  var ticksCoords = axis.getTicksCoords();\n  var ticksEls = createTicks(ticksCoords, transformGroup.transform, tickEndCoord, defaults(lineStyleModel.getLineStyle(), {\n    stroke: axisModel.get(['axisLine', 'lineStyle', 'color'])\n  }), 'ticks');\n\n  for (var i = 0; i < ticksEls.length; i++) {\n    group.add(ticksEls[i]);\n  }\n\n  return ticksEls;\n}\n\nfunction buildAxisMinorTicks(group, transformGroup, axisModel, tickDirection) {\n  var axis = axisModel.axis;\n  var minorTickModel = axisModel.getModel('minorTick');\n\n  if (!minorTickModel.get('show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var minorTicksCoords = axis.getMinorTicksCoords();\n\n  if (!minorTicksCoords.length) {\n    return;\n  }\n\n  var lineStyleModel = minorTickModel.getModel('lineStyle');\n  var tickEndCoord = tickDirection * minorTickModel.get('length');\n  var minorTickLineStyle = defaults(lineStyleModel.getLineStyle(), defaults(axisModel.getModel('axisTick').getLineStyle(), {\n    stroke: axisModel.get(['axisLine', 'lineStyle', 'color'])\n  }));\n\n  for (var i = 0; i < minorTicksCoords.length; i++) {\n    var minorTicksEls = createTicks(minorTicksCoords[i], transformGroup.transform, tickEndCoord, minorTickLineStyle, 'minorticks_' + i);\n\n    for (var k = 0; k < minorTicksEls.length; k++) {\n      group.add(minorTicksEls[k]);\n    }\n  }\n}\n\nfunction buildAxisLabel(group, transformGroup, axisModel, opt) {\n  var axis = axisModel.axis;\n  var show = retrieve(opt.axisLabelShow, axisModel.get(['axisLabel', 'show']));\n\n  if (!show || axis.scale.isBlank()) {\n    return;\n  }\n\n  var labelModel = axisModel.getModel('axisLabel');\n  var labelMargin = labelModel.get('margin');\n  var labels = axis.getViewLabels(); // Special label rotate.\n\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\n  var labelLayout = AxisBuilder.innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n  var rawCategoryData = axisModel.getCategories && axisModel.getCategories(true);\n  var labelEls = [];\n  var silent = AxisBuilder.isLabelSilent(axisModel);\n  var triggerEvent = axisModel.get('triggerEvent');\n  each(labels, function (labelItem, index) {\n    var tickValue = axis.scale.type === 'ordinal' ? axis.scale.getRawOrdinalNumber(labelItem.tickValue) : labelItem.tickValue;\n    var formattedLabel = labelItem.formattedLabel;\n    var rawLabel = labelItem.rawLabel;\n    var itemLabelModel = labelModel;\n\n    if (rawCategoryData && rawCategoryData[tickValue]) {\n      var rawCategoryItem = rawCategoryData[tickValue];\n\n      if (isObject(rawCategoryItem) && rawCategoryItem.textStyle) {\n        itemLabelModel = new Model(rawCategoryItem.textStyle, labelModel, axisModel.ecModel);\n      }\n    }\n\n    var textColor = itemLabelModel.getTextColor() || axisModel.get(['axisLine', 'lineStyle', 'color']);\n    var tickCoord = axis.dataToCoord(tickValue);\n    var textEl = new graphic.Text({\n      x: tickCoord,\n      y: opt.labelOffset + opt.labelDirection * labelMargin,\n      rotation: labelLayout.rotation,\n      silent: silent,\n      z2: 10 + (labelItem.level || 0),\n      style: createTextStyle(itemLabelModel, {\n        text: formattedLabel,\n        align: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\n        verticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\n        fill: isFunction(textColor) ? textColor( // (1) In category axis with data zoom, tick is not the original\n        // index of axis.data. So tick should not be exposed to user\n        // in category axis.\n        // (2) Compatible with previous version, which always use formatted label as\n        // input. But in interval scale the formatted label is like '223,445', which\n        // maked user replace ','. So we modify it to return original val but remain\n        // it as 'string' to avoid error in replacing.\n        axis.type === 'category' ? rawLabel : axis.type === 'value' ? tickValue + '' : tickValue, index) : textColor\n      })\n    });\n    textEl.anid = 'label_' + tickValue; // Pack data for mouse event\n\n    if (triggerEvent) {\n      var eventData = AxisBuilder.makeAxisEventDataBase(axisModel);\n      eventData.targetType = 'axisLabel';\n      eventData.value = rawLabel;\n      eventData.tickIndex = index;\n\n      if (axis.type === 'category') {\n        eventData.dataIndex = tickValue;\n      }\n\n      getECData(textEl).eventData = eventData;\n    } // FIXME\n\n\n    transformGroup.add(textEl);\n    textEl.updateTransform();\n    labelEls.push(textEl);\n    group.add(textEl);\n    textEl.decomposeTransform();\n  });\n  return labelEls;\n}\n\nexport default AxisBuilder;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as axisPointerModelHelper from '../axisPointer/modelHelper.js';\nimport ComponentView from '../../view/Component.js';\nvar axisPointerClazz = {};\n/**\n * Base class of AxisView.\n */\n\nvar AxisView =\n/** @class */\nfunction (_super) {\n  __extends(AxisView, _super);\n\n  function AxisView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = AxisView.type;\n    return _this;\n  }\n  /**\n   * @override\n   */\n\n\n  AxisView.prototype.render = function (axisModel, ecModel, api, payload) {\n    // FIXME\n    // This process should proformed after coordinate systems updated\n    // (axis scale updated), and should be performed each time update.\n    // So put it here temporarily, although it is not appropriate to\n    // put a model-writing procedure in `view`.\n    this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n\n    _super.prototype.render.apply(this, arguments);\n\n    this._doUpdateAxisPointerClass(axisModel, api, true);\n  };\n  /**\n   * Action handler.\n   */\n\n\n  AxisView.prototype.updateAxisPointer = function (axisModel, ecModel, api, payload) {\n    this._doUpdateAxisPointerClass(axisModel, api, false);\n  };\n  /**\n   * @override\n   */\n\n\n  AxisView.prototype.remove = function (ecModel, api) {\n    var axisPointer = this._axisPointer;\n    axisPointer && axisPointer.remove(api);\n  };\n  /**\n   * @override\n   */\n\n\n  AxisView.prototype.dispose = function (ecModel, api) {\n    this._disposeAxisPointer(api);\n\n    _super.prototype.dispose.apply(this, arguments);\n  };\n\n  AxisView.prototype._doUpdateAxisPointerClass = function (axisModel, api, forceRender) {\n    var Clazz = AxisView.getAxisPointerClass(this.axisPointerClass);\n\n    if (!Clazz) {\n      return;\n    }\n\n    var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n    axisPointerModel ? (this._axisPointer || (this._axisPointer = new Clazz())).render(axisModel, axisPointerModel, api, forceRender) : this._disposeAxisPointer(api);\n  };\n\n  AxisView.prototype._disposeAxisPointer = function (api) {\n    this._axisPointer && this._axisPointer.dispose(api);\n    this._axisPointer = null;\n  };\n\n  AxisView.registerAxisPointerClass = function (type, clazz) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (axisPointerClazz[type]) {\n        throw new Error('axisPointer ' + type + ' exists');\n      }\n    }\n\n    axisPointerClazz[type] = clazz;\n  };\n\n  ;\n\n  AxisView.getAxisPointerClass = function (type) {\n    return type && axisPointerClazz[type];\n  };\n\n  ;\n  AxisView.type = 'axis';\n  return AxisView;\n}(ComponentView);\n\nexport default AxisView;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport * as graphic from '../../util/graphic.js';\nimport AxisBuilder from './AxisBuilder.js';\nimport AxisView from './AxisView.js';\nimport * as cartesianAxisHelper from '../../coord/cartesian/cartesianAxisHelper.js';\nimport { rectCoordAxisBuildSplitArea, rectCoordAxisHandleRemove } from './axisSplitHelper.js';\nimport { isIntervalOrLogScale } from '../../scale/helper.js';\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitArea', 'splitLine', 'minorSplitLine'];\n\nvar CartesianAxisView =\n/** @class */\nfunction (_super) {\n  __extends(CartesianAxisView, _super);\n\n  function CartesianAxisView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = CartesianAxisView.type;\n    _this.axisPointerClass = 'CartesianAxisPointer';\n    return _this;\n  }\n  /**\n   * @override\n   */\n\n\n  CartesianAxisView.prototype.render = function (axisModel, ecModel, api, payload) {\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var gridModel = axisModel.getCoordSysModel();\n    var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, zrUtil.extend({\n      handleAutoShown: function (elementType) {\n        var cartesians = gridModel.coordinateSystem.getCartesians();\n\n        for (var i = 0; i < cartesians.length; i++) {\n          if (isIntervalOrLogScale(cartesians[i].getOtherAxis(axisModel.axis).scale)) {\n            // Still show axis tick or axisLine if other axis is value / log\n            return true;\n          }\n        } // Not show axisTick or axisLine if other axis is category / time\n\n\n        return false;\n      }\n    }, layout));\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (axisModel.get([name, 'show'])) {\n        axisElementBuilders[name](this, this._axisGroup, axisModel, gridModel);\n      }\n    }, this); // THIS is a special case for bar racing chart.\n    // Update the axis label from the natural initial layout to\n    // sorted layout should has no animation.\n\n    var isInitialSortFromBarRacing = payload && payload.type === 'changeAxisOrder' && payload.isInitSort;\n\n    if (!isInitialSortFromBarRacing) {\n      graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n    }\n\n    _super.prototype.render.call(this, axisModel, ecModel, api, payload);\n  };\n\n  CartesianAxisView.prototype.remove = function () {\n    rectCoordAxisHandleRemove(this);\n  };\n\n  CartesianAxisView.type = 'cartesianAxis';\n  return CartesianAxisView;\n}(AxisView);\n\nvar axisElementBuilders = {\n  splitLine: function (axisView, axisGroup, axisModel, gridModel) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords({\n      tickModel: splitLineModel\n    });\n    var p1 = [];\n    var p2 = [];\n    var lineStyle = lineStyleModel.getLineStyle();\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n      var tickValue = ticksCoords[i].tickValue;\n      var line = new graphic.Line({\n        anid: tickValue != null ? 'line_' + ticksCoords[i].tickValue : null,\n        autoBatch: true,\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: zrUtil.defaults({\n          stroke: lineColors[colorIndex]\n        }, lineStyle),\n        silent: true\n      });\n      graphic.subPixelOptimizeLine(line.shape, lineStyle.lineWidth);\n      axisGroup.add(line);\n    }\n  },\n  minorSplitLine: function (axisView, axisGroup, axisModel, gridModel) {\n    var axis = axisModel.axis;\n    var minorSplitLineModel = axisModel.getModel('minorSplitLine');\n    var lineStyleModel = minorSplitLineModel.getModel('lineStyle');\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var minorTicksCoords = axis.getMinorTicksCoords();\n\n    if (!minorTicksCoords.length) {\n      return;\n    }\n\n    var p1 = [];\n    var p2 = [];\n    var lineStyle = lineStyleModel.getLineStyle();\n\n    for (var i = 0; i < minorTicksCoords.length; i++) {\n      for (var k = 0; k < minorTicksCoords[i].length; k++) {\n        var tickCoord = axis.toGlobalCoord(minorTicksCoords[i][k].coord);\n\n        if (isHorizontal) {\n          p1[0] = tickCoord;\n          p1[1] = gridRect.y;\n          p2[0] = tickCoord;\n          p2[1] = gridRect.y + gridRect.height;\n        } else {\n          p1[0] = gridRect.x;\n          p1[1] = tickCoord;\n          p2[0] = gridRect.x + gridRect.width;\n          p2[1] = tickCoord;\n        }\n\n        var line = new graphic.Line({\n          anid: 'minor_line_' + minorTicksCoords[i][k].tickValue,\n          autoBatch: true,\n          shape: {\n            x1: p1[0],\n            y1: p1[1],\n            x2: p2[0],\n            y2: p2[1]\n          },\n          style: lineStyle,\n          silent: true\n        });\n        graphic.subPixelOptimizeLine(line.shape, lineStyle.lineWidth);\n        axisGroup.add(line);\n      }\n    }\n  },\n  splitArea: function (axisView, axisGroup, axisModel, gridModel) {\n    rectCoordAxisBuildSplitArea(axisView, axisGroup, axisModel, gridModel);\n  }\n};\n\nvar CartesianXAxisView =\n/** @class */\nfunction (_super) {\n  __extends(CartesianXAxisView, _super);\n\n  function CartesianXAxisView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = CartesianXAxisView.type;\n    return _this;\n  }\n\n  CartesianXAxisView.type = 'xAxis';\n  return CartesianXAxisView;\n}(CartesianAxisView);\n\nexport { CartesianXAxisView };\n\nvar CartesianYAxisView =\n/** @class */\nfunction (_super) {\n  __extends(CartesianYAxisView, _super);\n\n  function CartesianYAxisView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = CartesianXAxisView.type;\n    return _this;\n  }\n\n  CartesianYAxisView.type = 'yAxis';\n  return CartesianYAxisView;\n}(CartesianAxisView);\n\nexport { CartesianYAxisView };\nexport default CartesianAxisView;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport AxisBuilder from './AxisBuilder.js';\nimport BrushController from '../helper/BrushController.js';\nimport * as brushHelper from '../helper/brushHelper.js';\nimport * as graphic from '../../util/graphic.js';\nimport ComponentView from '../../view/Component.js';\nvar elementList = ['axisLine', 'axisTickLabel', 'axisName'];\n\nvar ParallelAxisView =\n/** @class */\nfunction (_super) {\n  __extends(ParallelAxisView, _super);\n\n  function ParallelAxisView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = ParallelAxisView.type;\n    return _this;\n  }\n\n  ParallelAxisView.prototype.init = function (ecModel, api) {\n    _super.prototype.init.apply(this, arguments);\n\n    (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this));\n  };\n\n  ParallelAxisView.prototype.render = function (axisModel, ecModel, api, payload) {\n    if (fromAxisAreaSelect(axisModel, ecModel, payload)) {\n      return;\n    }\n\n    this.axisModel = axisModel;\n    this.api = api;\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var coordSysModel = getCoordSysModel(axisModel, ecModel);\n    var coordSys = coordSysModel.coordinateSystem;\n    var areaSelectStyle = axisModel.getAreaSelectStyle();\n    var areaWidth = areaSelectStyle.width;\n    var dim = axisModel.axis.dim;\n    var axisLayout = coordSys.getAxisLayout(dim);\n    var builderOpt = zrUtil.extend({\n      strokeContainThreshold: areaWidth\n    }, axisLayout);\n    var axisBuilder = new AxisBuilder(axisModel, builderOpt);\n    zrUtil.each(elementList, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    this._refreshBrushController(builderOpt, areaSelectStyle, axisModel, coordSysModel, areaWidth, api);\n\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n  }; // /**\n  //  * @override\n  //  */\n  // updateVisual(axisModel, ecModel, api, payload) {\n  //     this._brushController && this._brushController\n  //         .updateCovers(getCoverInfoList(axisModel));\n  // }\n\n\n  ParallelAxisView.prototype._refreshBrushController = function (builderOpt, areaSelectStyle, axisModel, coordSysModel, areaWidth, api) {\n    // After filtering, axis may change, select area needs to be update.\n    var extent = axisModel.axis.getExtent();\n    var extentLen = extent[1] - extent[0];\n    var extra = Math.min(30, Math.abs(extentLen) * 0.1); // Arbitrary value.\n    // width/height might be negative, which will be\n    // normalized in BoundingRect.\n\n    var rect = graphic.BoundingRect.create({\n      x: extent[0],\n      y: -areaWidth / 2,\n      width: extentLen,\n      height: areaWidth\n    });\n    rect.x -= extra;\n    rect.width += 2 * extra;\n\n    this._brushController.mount({\n      enableGlobalPan: true,\n      rotation: builderOpt.rotation,\n      x: builderOpt.position[0],\n      y: builderOpt.position[1]\n    }).setPanels([{\n      panelId: 'pl',\n      clipPath: brushHelper.makeRectPanelClipPath(rect),\n      isTargetByCursor: brushHelper.makeRectIsTargetByCursor(rect, api, coordSysModel),\n      getLinearBrushOtherExtent: brushHelper.makeLinearBrushOtherExtent(rect, 0)\n    }]).enableBrush({\n      brushType: 'lineX',\n      brushStyle: areaSelectStyle,\n      removeOnClick: true\n    }).updateCovers(getCoverInfoList(axisModel));\n  };\n\n  ParallelAxisView.prototype._onBrush = function (eventParam) {\n    var coverInfoList = eventParam.areas; // Do not cache these object, because the mey be changed.\n\n    var axisModel = this.axisModel;\n    var axis = axisModel.axis;\n    var intervals = zrUtil.map(coverInfoList, function (coverInfo) {\n      return [axis.coordToData(coverInfo.range[0], true), axis.coordToData(coverInfo.range[1], true)];\n    }); // If realtime is true, action is not dispatched on drag end, because\n    // the drag end emits the same params with the last drag move event,\n    // and may have some delay when using touch pad.\n\n    if (!axisModel.option.realtime === eventParam.isEnd || eventParam.removeOnClick) {\n      // jshint ignore:line\n      this.api.dispatchAction({\n        type: 'axisAreaSelect',\n        parallelAxisId: axisModel.id,\n        intervals: intervals\n      });\n    }\n  };\n\n  ParallelAxisView.prototype.dispose = function () {\n    this._brushController.dispose();\n  };\n\n  ParallelAxisView.type = 'parallelAxis';\n  return ParallelAxisView;\n}(ComponentView);\n\nfunction fromAxisAreaSelect(axisModel, ecModel, payload) {\n  return payload && payload.type === 'axisAreaSelect' && ecModel.findComponents({\n    mainType: 'parallelAxis',\n    query: payload\n  })[0] === axisModel;\n}\n\nfunction getCoverInfoList(axisModel) {\n  var axis = axisModel.axis;\n  return zrUtil.map(axisModel.activeIntervals, function (interval) {\n    return {\n      brushType: 'lineX',\n      panelId: 'pl',\n      range: [axis.dataToCoord(interval[0], true), axis.dataToCoord(interval[1], true)]\n    };\n  });\n}\n\nfunction getCoordSysModel(axisModel, ecModel) {\n  return ecModel.getComponent('parallel', axisModel.get('parallelIndex'));\n}\n\nexport default ParallelAxisView;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport * as graphic from '../../util/graphic.js';\nimport AxisBuilder from './AxisBuilder.js';\nimport AxisView from './AxisView.js';\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitLine', 'splitArea', 'minorSplitLine'];\n\nvar RadiusAxisView =\n/** @class */\nfunction (_super) {\n  __extends(RadiusAxisView, _super);\n\n  function RadiusAxisView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = RadiusAxisView.type;\n    _this.axisPointerClass = 'PolarAxisPointer';\n    return _this;\n  }\n\n  RadiusAxisView.prototype.render = function (radiusAxisModel, ecModel) {\n    this.group.removeAll();\n\n    if (!radiusAxisModel.get('show')) {\n      return;\n    }\n\n    var oldAxisGroup = this._axisGroup;\n    var newAxisGroup = this._axisGroup = new graphic.Group();\n    this.group.add(newAxisGroup);\n    var radiusAxis = radiusAxisModel.axis;\n    var polar = radiusAxis.polar;\n    var angleAxis = polar.getAngleAxis();\n    var ticksCoords = radiusAxis.getTicksCoords();\n    var minorTicksCoords = radiusAxis.getMinorTicksCoords();\n    var axisAngle = angleAxis.getExtent()[0];\n    var radiusExtent = radiusAxis.getExtent();\n    var layout = layoutAxis(polar, radiusAxisModel, axisAngle);\n    var axisBuilder = new AxisBuilder(radiusAxisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n    newAxisGroup.add(axisBuilder.getGroup());\n    graphic.groupTransition(oldAxisGroup, newAxisGroup, radiusAxisModel);\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (radiusAxisModel.get([name, 'show']) && !radiusAxis.scale.isBlank()) {\n        axisElementBuilders[name](this.group, radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords, minorTicksCoords);\n      }\n    }, this);\n  };\n\n  RadiusAxisView.type = 'radiusAxis';\n  return RadiusAxisView;\n}(AxisView);\n\nvar axisElementBuilders = {\n  splitLine: function (group, radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords) {\n    var splitLineModel = radiusAxisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineCount = 0;\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var splitLines = [];\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Circle({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          // ensure circle radius >= 0\n          r: Math.max(ticksCoords[i].coord, 0)\n        }\n      }));\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitLines.length; i++) {\n      group.add(graphic.mergePath(splitLines[i], {\n        style: zrUtil.defaults({\n          stroke: lineColors[i % lineColors.length],\n          fill: null\n        }, lineStyleModel.getLineStyle()),\n        silent: true\n      }));\n    }\n  },\n  minorSplitLine: function (group, radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords, minorTicksCoords) {\n    if (!minorTicksCoords.length) {\n      return;\n    }\n\n    var minorSplitLineModel = radiusAxisModel.getModel('minorSplitLine');\n    var lineStyleModel = minorSplitLineModel.getModel('lineStyle');\n    var lines = [];\n\n    for (var i = 0; i < minorTicksCoords.length; i++) {\n      for (var k = 0; k < minorTicksCoords[i].length; k++) {\n        lines.push(new graphic.Circle({\n          shape: {\n            cx: polar.cx,\n            cy: polar.cy,\n            r: minorTicksCoords[i][k].coord\n          }\n        }));\n      }\n    }\n\n    group.add(graphic.mergePath(lines, {\n      style: zrUtil.defaults({\n        fill: null\n      }, lineStyleModel.getLineStyle()),\n      silent: true\n    }));\n  },\n  splitArea: function (group, radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords) {\n    if (!ticksCoords.length) {\n      return;\n    }\n\n    var splitAreaModel = radiusAxisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var lineCount = 0;\n    areaColors = areaColors instanceof Array ? areaColors : [areaColors];\n    var splitAreas = [];\n    var prevRadius = ticksCoords[0].coord;\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      var colorIndex = lineCount++ % areaColors.length;\n      splitAreas[colorIndex] = splitAreas[colorIndex] || [];\n      splitAreas[colorIndex].push(new graphic.Sector({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r0: prevRadius,\n          r: ticksCoords[i].coord,\n          startAngle: 0,\n          endAngle: Math.PI * 2\n        },\n        silent: true\n      }));\n      prevRadius = ticksCoords[i].coord;\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitAreas.length; i++) {\n      group.add(graphic.mergePath(splitAreas[i], {\n        style: zrUtil.defaults({\n          fill: areaColors[i % areaColors.length]\n        }, areaStyleModel.getAreaStyle()),\n        silent: true\n      }));\n    }\n  }\n};\n/**\n * @inner\n */\n\nfunction layoutAxis(polar, radiusAxisModel, axisAngle) {\n  return {\n    position: [polar.cx, polar.cy],\n    rotation: axisAngle / 180 * Math.PI,\n    labelDirection: -1,\n    tickDirection: -1,\n    nameDirection: 1,\n    labelRotate: radiusAxisModel.getModel('axisLabel').get('rotate'),\n    // Over splitLine and splitArea\n    z2: 1\n  };\n}\n\nexport default RadiusAxisView;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport AxisBuilder from './AxisBuilder.js';\nimport * as graphic from '../../util/graphic.js';\nimport * as singleAxisHelper from '../../coord/single/singleAxisHelper.js';\nimport AxisView from './AxisView.js';\nimport { rectCoordAxisBuildSplitArea, rectCoordAxisHandleRemove } from './axisSplitHelper.js';\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitArea', 'splitLine'];\n\nvar SingleAxisView =\n/** @class */\nfunction (_super) {\n  __extends(SingleAxisView, _super);\n\n  function SingleAxisView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = SingleAxisView.type;\n    _this.axisPointerClass = 'SingleAxisPointer';\n    return _this;\n  }\n\n  SingleAxisView.prototype.render = function (axisModel, ecModel, api, payload) {\n    var group = this.group;\n    group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    var layout = singleAxisHelper.layout(axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n    group.add(this._axisGroup);\n    group.add(axisBuilder.getGroup());\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (axisModel.get([name, 'show'])) {\n        axisElementBuilders[name](this, this.group, this._axisGroup, axisModel);\n      }\n    }, this);\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n\n    _super.prototype.render.call(this, axisModel, ecModel, api, payload);\n  };\n\n  SingleAxisView.prototype.remove = function () {\n    rectCoordAxisHandleRemove(this);\n  };\n\n  SingleAxisView.type = 'singleAxis';\n  return SingleAxisView;\n}(AxisView);\n\nvar axisElementBuilders = {\n  splitLine: function (axisView, group, axisGroup, axisModel) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var lineWidth = lineStyleModel.get('width');\n    var gridRect = axisModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var splitLines = [];\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords({\n      tickModel: splitLineModel\n    });\n    var p1 = [];\n    var p2 = [];\n\n    for (var i = 0; i < ticksCoords.length; ++i) {\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var line = new graphic.Line({\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        silent: true\n      });\n      graphic.subPixelOptimizeLine(line.shape, lineWidth);\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(line);\n    }\n\n    var lineStyle = lineStyleModel.getLineStyle(['color']);\n\n    for (var i = 0; i < splitLines.length; ++i) {\n      group.add(graphic.mergePath(splitLines[i], {\n        style: zrUtil.defaults({\n          stroke: lineColors[i % lineColors.length]\n        }, lineStyle),\n        silent: true\n      }));\n    }\n  },\n  splitArea: function (axisView, group, axisGroup, axisModel) {\n    rectCoordAxisBuildSplitArea(axisView, axisGroup, axisModel, axisModel);\n  }\n};\nexport default SingleAxisView;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport * as graphic from '../../util/graphic.js';\nimport { makeInner } from '../../util/model.js';\nvar inner = makeInner();\nexport function rectCoordAxisBuildSplitArea(axisView, axisGroup, axisModel, gridModel) {\n  var axis = axisModel.axis;\n\n  if (axis.scale.isBlank()) {\n    return;\n  } // TODO: TYPE\n\n\n  var splitAreaModel = axisModel.getModel('splitArea');\n  var areaStyleModel = splitAreaModel.getModel('areaStyle');\n  var areaColors = areaStyleModel.get('color');\n  var gridRect = gridModel.coordinateSystem.getRect();\n  var ticksCoords = axis.getTicksCoords({\n    tickModel: splitAreaModel,\n    clamp: true\n  });\n\n  if (!ticksCoords.length) {\n    return;\n  } // For Making appropriate splitArea animation, the color and anid\n  // should be corresponding to previous one if possible.\n\n\n  var areaColorsLen = areaColors.length;\n  var lastSplitAreaColors = inner(axisView).splitAreaColors;\n  var newSplitAreaColors = zrUtil.createHashMap();\n  var colorIndex = 0;\n\n  if (lastSplitAreaColors) {\n    for (var i = 0; i < ticksCoords.length; i++) {\n      var cIndex = lastSplitAreaColors.get(ticksCoords[i].tickValue);\n\n      if (cIndex != null) {\n        colorIndex = (cIndex + (areaColorsLen - 1) * i) % areaColorsLen;\n        break;\n      }\n    }\n  }\n\n  var prev = axis.toGlobalCoord(ticksCoords[0].coord);\n  var areaStyle = areaStyleModel.getAreaStyle();\n  areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n\n  for (var i = 1; i < ticksCoords.length; i++) {\n    var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\n    var x = void 0;\n    var y = void 0;\n    var width = void 0;\n    var height = void 0;\n\n    if (axis.isHorizontal()) {\n      x = prev;\n      y = gridRect.y;\n      width = tickCoord - x;\n      height = gridRect.height;\n      prev = x + width;\n    } else {\n      x = gridRect.x;\n      y = prev;\n      width = gridRect.width;\n      height = tickCoord - y;\n      prev = y + height;\n    }\n\n    var tickValue = ticksCoords[i - 1].tickValue;\n    tickValue != null && newSplitAreaColors.set(tickValue, colorIndex);\n    axisGroup.add(new graphic.Rect({\n      anid: tickValue != null ? 'area_' + tickValue : null,\n      shape: {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      },\n      style: zrUtil.defaults({\n        fill: areaColors[colorIndex]\n      }, areaStyle),\n      autoBatch: true,\n      silent: true\n    }));\n    colorIndex = (colorIndex + 1) % areaColorsLen;\n  }\n\n  inner(axisView).splitAreaColors = newSplitAreaColors;\n}\nexport function rectCoordAxisHandleRemove(axisView) {\n  inner(axisView).splitAreaColors = null;\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar actionInfo = {\n  type: 'axisAreaSelect',\n  event: 'axisAreaSelected' // update: 'updateVisual'\n\n};\nexport function installParallelActions(registers) {\n  registers.registerAction(actionInfo, function (payload, ecModel) {\n    ecModel.eachComponent({\n      mainType: 'parallelAxis',\n      query: payload\n    }, function (parallelAxisModel) {\n      parallelAxisModel.axis.model.setActiveIntervals(payload.intervals);\n    });\n  });\n  /**\n   * @payload\n   */\n\n  registers.registerAction('parallelAxisExpand', function (payload, ecModel) {\n    ecModel.eachComponent({\n      mainType: 'parallel',\n      query: payload\n    }, function (parallelModel) {\n      parallelModel.setAxisExpand(payload);\n    });\n  });\n}"],"names":["ariaPreprocessor","option","aria","show","enabled","label","zrUtil","name","install","registers","registerPreprocessor","registerVisual","PRIORITY","VISUAL","ARIA","ariaVisual","inner","makeInner","clone","bind","BaseAxisPointer","this","_dragging","animationThreshold","prototype","render","axisModel","axisPointerModel","api","forceRender","value","get","status","_axisModel","_axisPointerModel","_api","_lastValue","_lastStatus","group","_group","handle","_handle","hide","elOption","makeElOption","graphicKey","_lastGraphicKey","clear","moveAnimation","_moveAnimation","determineAnimation","doUpdateProps","updateProps","updatePointerEl","updateLabelEl","graphic","createPointerEl","createLabelEl","getZr","add","updateMandatoryProps","_renderHandle","remove","dispose","animation","axis","isCategoryAxis","type","useSnap","getBandWidth","seriesDataCount","axisPointerModelHelper","axisExtent","getExtent","Math","abs","pointerOption","pointer","pointerEl","labelEl","updateLabelShowHide","setStyle","style","shape","x","y","updateHandleTransform","isInit","zr","handleModel","getModel","cursor","draggable","onmousemove","e","eventTool","event","onmousedown","_onHandleDragMove","drift","ondragend","_onHandleDragEnd","getItemStyle","handleSize","scaleX","scaleY","throttleUtil","_moveHandleToValue","getHandleTransProps","getHandleTransform","dx","dy","trans","_payloadInfo","stopAnimation","attr","lastProp","_doDispatchAxisPointer","payloadInfo","dispatchAction","cursorPoint","tooltipOption","axesInfo","axisDim","dim","axisIndex","componentIndex","doClear","buildLabel","xy","wh","xDimIndex","width","height","animationModel","el","props","propsEqual","lastProps","newProps","equals_1","item","key","rotation","silent","z","zlevel","traverse","PolarAxisPointer","_super","apply","arguments","__extends","PI","polar","otherAxis","getOtherAxis","otherExtent","coordValue","dataToCoord","axisPointerType","elStyle","viewHelper","pointerShapeBuilder","labelMargin","labelPos","getLabelPosition","coord","axisAngle","getAngleAxis","position","align","verticalAlign","radiusExtent","getRadiusAxis","transform","matrix","cx","cy","labelRotation","labelLayout","AxisBuilder","textAlign","textVerticalAlign","r","coordToPoint","line","shadow","bandWidth","max","radian","XY","WH","SingleAxisPointer","coordSys","coordinateSystem","getGlobalExtent","getPointDimIndex","pixelValue","dataToPoint","layoutInfo","singleAxisHelper","labelInside","labelDirection","delta","dimIndex","currPosition","min","cursorOtherValue","targetShape","subPixelOptimize","span","isHorizontal","rect","getRect","findPointFromSeries","finder","ecModel","seriesModel","point","seriesIndex","getSeriesByIndex","data","getData","dataIndex","modelUtil","getItemGraphicEl","getTooltipPosition","isStacked","baseAxis","getBaseAxis","valueAxis","valueAxisDim","baseAxisDim","baseDataOffset","baseDim","mapDimension","stackedData","getCalculationInfo","getValues","dimensions","getBoundingRect","applyTransform","each","register","handler","env","records","initGlobalListeners","record","useHandler","eventType","cb","on","dis","makeDispatchAction","dispatchTooltipFinally","pendings","initialized","doEnter","onLeave","actuallyPayload","showLen","showTip","length","hideLen","hideTip","currTrigger","payload","pendingList","push","unregister","CartesianAxisPointer","grid","getCartesian","toGlobalCoord","cartesianAxisHelper","model","pos","tooltipOptions","opt","index","getAxisDimIndex","AxisPointerModel","_this","defaultOption","snap","triggerTooltip","link","animationDurationUpdate","lineStyle","color","shadowStyle","formatter","precision","margin","padding","backgroundColor","borderColor","borderWidth","borderRadius","icon","size","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","throttle","ComponentModel","AxisPointerView","globalAxisPointerModel","globalTooltipModel","getComponent","triggerOn","globalListener","indexOf","offsetX","offsetY","ComponentView","axisTrigger","coordSysAxesInfo","illegalPoint","isIllegalPoint","inputAxesInfo","shouldHide","outputPayload","showValueMap","dataByCoordSys","list","map","updaters","showPointer","curry","showTooltip","coordSysMap","coordSysKey","coordSysContainsPoint","containPoint","axisInfo","inputAxisInfo","findInputAxisInfo","val","pointToData","processOnAxis","linkTriggers","tarAxisInfo","tarKey","linkGroup","srcAxisInfo","srcKey","srcValItem","mapper","scale","parse","makeMapperParam","updateModelActually","dispatchTooltipActually","dispatchHighDownActually","newValue","noSnap","outputFinder","isBlank","containData","involveSeries","buildPayloadsBySeries","payloadBatch","snapToValue","extend","minDist","Number","MAX_VALUE","minDiff","seriesModels","series","idx","seriesNestestValue","dataIndices","dataDim","mapDimensionsAll","getAxisTooltipData","result","nestestValue","indicesOfNearest","isFinite","diff","dist","dataIndexInside","getRawIndex","coordSysModel","modelHelper","coordSysItem","coordSysId","id","coordSysIndex","coordSysType","coordSysMainType","mainType","dataByAxis","axisType","axisId","valueLabelOpt","seriesDataIndices","slice","outputAxesInfo","valItem","useHandle","sampleItem","escapeConnect","highDownKey","lastHighlights","newHighlights","batchItem","toHighlight","toDownplay","notBlur","batch","i","axisName","isNaN","AxisView","registerComponentModel","registerComponentView","axisPointer","isArray","registerProcessor","PROCESSOR","STATISTIC","collect","registerAction","update","seriesInvolved","collectAxesInfo","collectSeriesInfo","linksOption","linkGroups","getCoordinateSystems","axisPointerEnabled","makeKey","axesInfoInCoordSys","baseTooltipModel","getAxes","saveTooltipAxisInfo","getTooltipAxes","triggerAxis","cross","tooltipAxes","baseAxes","otherAxes","fromTooltip","axisPointerShow","isHandleTrigger","makeAxisPointerModel","axisKey","groupIndex","getLinkGroupIndex","tooltipAxisPointerModel","fields","volatileOption","field","labelOption","tooltipAxisPointerLabelShow","crossStyle","defaults","textStyle","Model","eachSeries","seriesTooltipTrigger","seriesTooltipShow","getAxis","count","linkOption","checkPropInLink","linkPropValue","axisPropValue","fixValue","getAxisInfo","extent","reverse","getAxisPointerModel","buildElStyle","styleModel","getLineStyle","fill","getAreaStyle","stroke","buildLabelElOption","text","getValueLabel","labelModel","paddings","formatUtil","font","getFont","textRect","textContain","confineInContainer","bgColor","createTextStyle","getTextColor","z2","viewWidth","getWidth","viewHeight","getHeight","getLabel","params_1","axisHelper","axisDimension","seriesData","idxItem","dataParams","getDataParams","replace","getTransformedPosition","labelOffset","buildCartesianSingleLabelElOption","textLayout","makeLineShape","p1","p2","x1","y1","x2","y2","makeRectShape","makeSectorShape","r0","startAngle","endAngle","clockwise","elementList","getAxisLineShape","rExtent","angle","start","end","getRadiusIdx","radiusAxis","inverse","fixAngleOverlap","firstItem","lastItem","pop","AngleAxisView","axisPointerClass","angleAxisModel","removeAll","angleAxis","ticksAngles","getTicksCoords","minorTickAngles","getMinorTicksCoords","labels","getViewLabels","labelItem","tickValue","getRawOrdinalNumber","angelAxisElementsBuilders","axisLine","lineStyleModel","rId","r0Id","axisTick","tickModel","tickLen","radius","lines","tickAngleItem","minorTick","tickAngles","minorTickModel","k","axisLabel","rawCategoryData","getCategories","commonLabelModel","triggerEvent","p","labelTextAlign","labelTextVerticalAlign","rawCategoryItem","textEl","formattedLabel","eventData","targetType","rawLabel","getECData","splitLine","splitLineModel","lineColors","lineCount","Array","splitLines","colorIndex","minorSplitLine","minorSplitLineModel","splitArea","splitAreaModel","areaStyleModel","areaColors","splitAreas","RADIAN","prevAngle","r1","len","nameDirection","tickDirection","handleAutoShown","transformGroup","updateTransform","_transformGroup","hasBuilder","builders","getGroup","innerTextLayout","axisRotation","textRotation","direction","rotationDiff","remRadian","isRadianAroundZero","makeAxisEventDataBase","componentType","isLabelSilent","tooltipOpt","shown","pt1","pt2","v2ApplyTransform","lineCap","strokeContainThreshold","lineWidth","anid","arrows","arrowSize","isString","isNumber","arrowOffset","normalizeSymbolOffset","symbolWidth_1","symbolHeight_1","rotate","offset","sqrt","symbol","createSymbol","pt","cos","sin","axisTickLabel","ticksEls","buildAxisMajorTicks","labelEls","buildAxisLabel","fixMinMaxLabelShow","buildAxisMinorTicks","labelList","prepareLayoutList","priority","defaultAttr","ignore","hideOverlap","retrieve","axisNameAvailableWidth","nameLocation","textStyleModel","gap","gapSignal","isNameLocationCenter","nameRotation","endTextLayout","textFont","truncateOpt","ellipsis","maxWidth","nameTruncateMaxWidth","overflow","componentModel","itemName","__fullText","decomposeTransform","textPosition","textRotate","onLeft","tickEls","shouldShowAllLabels","showMinLabel","showMaxLabel","firstLabel","nextLabel","lastLabel","prevLabel","firstTick","nextTick","lastTick","prevTick","ignoreEl","isTwoLabelOverlapped","current","next","firstRect","nextRect","mRotationBack","matrixUtil","getLocalTransform","intersect","createTicks","ticksCoords","tickTransform","tickEndCoord","tickLineStyle","anidPrefix","tickCoord","tickEl","autoBatch","minorTicksCoords","minorTickLineStyle","minorTicksEls","axisLabelShow","labelRotate","itemLabelModel","isObject","textColor","level","getShallow","isFunction","tickIndex","axisPointerClazz","_doUpdateAxisPointerClass","updateAxisPointer","_axisPointer","_disposeAxisPointer","Clazz","getAxisPointerClass","registerAxisPointerClass","clazz","axisBuilderAttrs","selfBuilderAttrs","CartesianAxisView","oldAxisGroup","_axisGroup","gridModel","getCoordSysModel","layout","axisBuilder","elementType","cartesians","getCartesians","isIntervalOrLogScale","axisElementBuilders","isInitialSortFromBarRacing","isInitSort","call","rectCoordAxisHandleRemove","axisView","axisGroup","gridRect","rectCoordAxisBuildSplitArea","CartesianXAxisView","CartesianYAxisView","ParallelAxisView","init","_brushController","BrushController","_onBrush","fromAxisAreaSelect","areaSelectStyle","getAreaSelectStyle","areaWidth","axisLayout","getAxisLayout","builderOpt","_refreshBrushController","extentLen","extra","mount","enableGlobalPan","setPanels","panelId","clipPath","brushHelper","isTargetByCursor","getLinearBrushOtherExtent","enableBrush","brushType","brushStyle","removeOnClick","updateCovers","getCoverInfoList","eventParam","coverInfoList","areas","intervals","coverInfo","coordToData","range","realtime","isEnd","parallelAxisId","findComponents","query","activeIntervals","interval","RadiusAxisView","radiusAxisModel","newAxisGroup","layoutAxis","prevRadius","SingleAxisView","clamp","areaColorsLen","lastSplitAreaColors","splitAreaColors","newSplitAreaColors","cIndex","prev","areaStyle","set","actionInfo","installParallelActions","eachComponent","parallelAxisModel","setActiveIntervals","parallelModel","setAxisExpand"],"sourceRoot":""}