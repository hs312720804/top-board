{"version":3,"file":"js/chunk-vendors-0e15027d-legacy.1d3733e7.js","mappings":"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","sources":["webpack://databoard/./node_modules/echarts/lib/component/aria/preprocessor.js","webpack://databoard/./node_modules/echarts/lib/component/aria/install.js","webpack://databoard/./node_modules/echarts/lib/component/axisPointer/BaseAxisPointer.js","webpack://databoard/./node_modules/echarts/lib/component/axisPointer/PolarAxisPointer.js","webpack://databoard/./node_modules/echarts/lib/component/axisPointer/SingleAxisPointer.js","webpack://databoard/./node_modules/echarts/lib/component/axisPointer/findPointFromSeries.js","webpack://databoard/./node_modules/echarts/lib/component/axisPointer/globalListener.js","webpack://databoard/./node_modules/echarts/lib/component/axisPointer/CartesianAxisPointer.js","webpack://databoard/./node_modules/echarts/lib/component/axisPointer/AxisPointerModel.js","webpack://databoard/./node_modules/echarts/lib/component/axisPointer/AxisPointerView.js","webpack://databoard/./node_modules/echarts/lib/component/axisPointer/axisTrigger.js","webpack://databoard/./node_modules/echarts/lib/component/axisPointer/install.js","webpack://databoard/./node_modules/echarts/lib/component/axisPointer/modelHelper.js","webpack://databoard/./node_modules/echarts/lib/component/axisPointer/viewHelper.js","webpack://databoard/./node_modules/echarts/lib/component/axis/AngleAxisView.js","webpack://databoard/./node_modules/echarts/lib/component/axis/AxisBuilder.js","webpack://databoard/./node_modules/echarts/lib/component/axis/AxisView.js","webpack://databoard/./node_modules/echarts/lib/component/axis/CartesianAxisView.js","webpack://databoard/./node_modules/echarts/lib/component/axis/ParallelAxisView.js","webpack://databoard/./node_modules/echarts/lib/component/axis/RadiusAxisView.js","webpack://databoard/./node_modules/echarts/lib/component/axis/SingleAxisView.js","webpack://databoard/./node_modules/echarts/lib/component/axis/axisSplitHelper.js","webpack://databoard/./node_modules/echarts/lib/component/axis/parallelAxisAction.js"],"sourcesContent":["/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as zrUtil from 'zrender/lib/core/util.js';\nexport default function ariaPreprocessor(option) {\n  if (!option || !option.aria) {\n    return;\n  }\n  var aria = option.aria; // aria.show is deprecated and should use aria.enabled instead\n\n  if (aria.show != null) {\n    aria.enabled = aria.show;\n  }\n  aria.label = aria.label || {}; // move description, general, series, data to be under aria.label\n\n  zrUtil.each(['description', 'general', 'series', 'data'], function (name) {\n    if (aria[name] != null) {\n      aria.label[name] = aria[name];\n    }\n  });\n}","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport ariaVisual from '../../visual/aria.js';\nimport ariaPreprocessor from './preprocessor.js';\nexport function install(registers) {\n  registers.registerPreprocessor(ariaPreprocessor);\n  registers.registerVisual(registers.PRIORITY.VISUAL.ARIA, ariaVisual);\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport * as graphic from '../../util/graphic.js';\nimport * as axisPointerModelHelper from './modelHelper.js';\nimport * as eventTool from 'zrender/lib/core/event.js';\nimport * as throttleUtil from '../../util/throttle.js';\nimport { makeInner } from '../../util/model.js';\nvar inner = makeInner();\nvar clone = zrUtil.clone;\nvar bind = zrUtil.bind;\n/**\n * Base axis pointer class in 2D.\n */\n\nvar BaseAxisPointer =\n/** @class */\nfunction () {\n  function BaseAxisPointer() {\n    this._dragging = false;\n    /**\n     * In px, arbitrary value. Do not set too small,\n     * no animation is ok for most cases.\n     */\n\n    this.animationThreshold = 15;\n  }\n  /**\n   * @implement\n   */\n\n\n  BaseAxisPointer.prototype.render = function (axisModel, axisPointerModel, api, forceRender) {\n    var value = axisPointerModel.get('value');\n    var status = axisPointerModel.get('status'); // Bind them to `this`, not in closure, otherwise they will not\n    // be replaced when user calling setOption in not merge mode.\n\n    this._axisModel = axisModel;\n    this._axisPointerModel = axisPointerModel;\n    this._api = api; // Optimize: `render` will be called repeatedly during mouse move.\n    // So it is power consuming if performing `render` each time,\n    // especially on mobile device.\n\n    if (!forceRender && this._lastValue === value && this._lastStatus === status) {\n      return;\n    }\n\n    this._lastValue = value;\n    this._lastStatus = status;\n    var group = this._group;\n    var handle = this._handle;\n\n    if (!status || status === 'hide') {\n      // Do not clear here, for animation better.\n      group && group.hide();\n      handle && handle.hide();\n      return;\n    }\n\n    group && group.show();\n    handle && handle.show(); // Otherwise status is 'show'\n\n    var elOption = {};\n    this.makeElOption(elOption, value, axisModel, axisPointerModel, api); // Enable change axis pointer type.\n\n    var graphicKey = elOption.graphicKey;\n\n    if (graphicKey !== this._lastGraphicKey) {\n      this.clear(api);\n    }\n\n    this._lastGraphicKey = graphicKey;\n    var moveAnimation = this._moveAnimation = this.determineAnimation(axisModel, axisPointerModel);\n\n    if (!group) {\n      group = this._group = new graphic.Group();\n      this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n      this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n      api.getZr().add(group);\n    } else {\n      var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n      this.updatePointerEl(group, elOption, doUpdateProps);\n      this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n    }\n\n    updateMandatoryProps(group, axisPointerModel, true);\n\n    this._renderHandle(value);\n  };\n  /**\n   * @implement\n   */\n\n\n  BaseAxisPointer.prototype.remove = function (api) {\n    this.clear(api);\n  };\n  /**\n   * @implement\n   */\n\n\n  BaseAxisPointer.prototype.dispose = function (api) {\n    this.clear(api);\n  };\n  /**\n   * @protected\n   */\n\n\n  BaseAxisPointer.prototype.determineAnimation = function (axisModel, axisPointerModel) {\n    var animation = axisPointerModel.get('animation');\n    var axis = axisModel.axis;\n    var isCategoryAxis = axis.type === 'category';\n    var useSnap = axisPointerModel.get('snap'); // Value axis without snap always do not snap.\n\n    if (!useSnap && !isCategoryAxis) {\n      return false;\n    }\n\n    if (animation === 'auto' || animation == null) {\n      var animationThreshold = this.animationThreshold;\n\n      if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n        return true;\n      } // It is important to auto animation when snap used. Consider if there is\n      // a dataZoom, animation will be disabled when too many points exist, while\n      // it will be enabled for better visual effect when little points exist.\n\n\n      if (useSnap) {\n        var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n        var axisExtent = axis.getExtent(); // Approximate band width\n\n        return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n      }\n\n      return false;\n    }\n\n    return animation === true;\n  };\n  /**\n   * add {pointer, label, graphicKey} to elOption\n   * @protected\n   */\n\n\n  BaseAxisPointer.prototype.makeElOption = function (elOption, value, axisModel, axisPointerModel, api) {// Should be implemenented by sub-class.\n  };\n  /**\n   * @protected\n   */\n\n\n  BaseAxisPointer.prototype.createPointerEl = function (group, elOption, axisModel, axisPointerModel) {\n    var pointerOption = elOption.pointer;\n\n    if (pointerOption) {\n      var pointerEl = inner(group).pointerEl = new graphic[pointerOption.type](clone(elOption.pointer));\n      group.add(pointerEl);\n    }\n  };\n  /**\n   * @protected\n   */\n\n\n  BaseAxisPointer.prototype.createLabelEl = function (group, elOption, axisModel, axisPointerModel) {\n    if (elOption.label) {\n      var labelEl = inner(group).labelEl = new graphic.Text(clone(elOption.label));\n      group.add(labelEl);\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  };\n  /**\n   * @protected\n   */\n\n\n  BaseAxisPointer.prototype.updatePointerEl = function (group, elOption, updateProps) {\n    var pointerEl = inner(group).pointerEl;\n\n    if (pointerEl && elOption.pointer) {\n      pointerEl.setStyle(elOption.pointer.style);\n      updateProps(pointerEl, {\n        shape: elOption.pointer.shape\n      });\n    }\n  };\n  /**\n   * @protected\n   */\n\n\n  BaseAxisPointer.prototype.updateLabelEl = function (group, elOption, updateProps, axisPointerModel) {\n    var labelEl = inner(group).labelEl;\n\n    if (labelEl) {\n      labelEl.setStyle(elOption.label.style);\n      updateProps(labelEl, {\n        // Consider text length change in vertical axis, animation should\n        // be used on shape, otherwise the effect will be weird.\n        // TODOTODO\n        // shape: elOption.label.shape,\n        x: elOption.label.x,\n        y: elOption.label.y\n      });\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  };\n  /**\n   * @private\n   */\n\n\n  BaseAxisPointer.prototype._renderHandle = function (value) {\n    if (this._dragging || !this.updateHandleTransform) {\n      return;\n    }\n\n    var axisPointerModel = this._axisPointerModel;\n\n    var zr = this._api.getZr();\n\n    var handle = this._handle;\n    var handleModel = axisPointerModel.getModel('handle');\n    var status = axisPointerModel.get('status');\n\n    if (!handleModel.get('show') || !status || status === 'hide') {\n      handle && zr.remove(handle);\n      this._handle = null;\n      return;\n    }\n\n    var isInit;\n\n    if (!this._handle) {\n      isInit = true;\n      handle = this._handle = graphic.createIcon(handleModel.get('icon'), {\n        cursor: 'move',\n        draggable: true,\n        onmousemove: function (e) {\n          // For mobile device, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n        drift: bind(this._onHandleDragMove, this),\n        ondragend: bind(this._onHandleDragEnd, this)\n      });\n      zr.add(handle);\n    }\n\n    updateMandatoryProps(handle, axisPointerModel, false); // update style\n\n    handle.setStyle(handleModel.getItemStyle(null, ['color', 'borderColor', 'borderWidth', 'opacity', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'])); // update position\n\n    var handleSize = handleModel.get('size');\n\n    if (!zrUtil.isArray(handleSize)) {\n      handleSize = [handleSize, handleSize];\n    }\n\n    handle.scaleX = handleSize[0] / 2;\n    handle.scaleY = handleSize[1] / 2;\n    throttleUtil.createOrUpdate(this, '_doDispatchAxisPointer', handleModel.get('throttle') || 0, 'fixRate');\n\n    this._moveHandleToValue(value, isInit);\n  };\n\n  BaseAxisPointer.prototype._moveHandleToValue = function (value, isInit) {\n    updateProps(this._axisPointerModel, !isInit && this._moveAnimation, this._handle, getHandleTransProps(this.getHandleTransform(value, this._axisModel, this._axisPointerModel)));\n  };\n\n  BaseAxisPointer.prototype._onHandleDragMove = function (dx, dy) {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    this._dragging = true; // Persistent for throttle.\n\n    var trans = this.updateHandleTransform(getHandleTransProps(handle), [dx, dy], this._axisModel, this._axisPointerModel);\n    this._payloadInfo = trans;\n    handle.stopAnimation();\n    handle.attr(getHandleTransProps(trans));\n    inner(handle).lastProp = null;\n\n    this._doDispatchAxisPointer();\n  };\n  /**\n   * Throttled method.\n   */\n\n\n  BaseAxisPointer.prototype._doDispatchAxisPointer = function () {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var payloadInfo = this._payloadInfo;\n    var axisModel = this._axisModel;\n\n    this._api.dispatchAction({\n      type: 'updateAxisPointer',\n      x: payloadInfo.cursorPoint[0],\n      y: payloadInfo.cursorPoint[1],\n      tooltipOption: payloadInfo.tooltipOption,\n      axesInfo: [{\n        axisDim: axisModel.axis.dim,\n        axisIndex: axisModel.componentIndex\n      }]\n    });\n  };\n\n  BaseAxisPointer.prototype._onHandleDragEnd = function () {\n    this._dragging = false;\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var value = this._axisPointerModel.get('value'); // Consider snap or categroy axis, handle may be not consistent with\n    // axisPointer. So move handle to align the exact value position when\n    // drag ended.\n\n\n    this._moveHandleToValue(value); // For the effect: tooltip will be shown when finger holding on handle\n    // button, and will be hidden after finger left handle button.\n\n\n    this._api.dispatchAction({\n      type: 'hideTip'\n    });\n  };\n  /**\n   * @private\n   */\n\n\n  BaseAxisPointer.prototype.clear = function (api) {\n    this._lastValue = null;\n    this._lastStatus = null;\n    var zr = api.getZr();\n    var group = this._group;\n    var handle = this._handle;\n\n    if (zr && group) {\n      this._lastGraphicKey = null;\n      group && zr.remove(group);\n      handle && zr.remove(handle);\n      this._group = null;\n      this._handle = null;\n      this._payloadInfo = null;\n    }\n\n    throttleUtil.clear(this, '_doDispatchAxisPointer');\n  };\n  /**\n   * @protected\n   */\n\n\n  BaseAxisPointer.prototype.doClear = function () {// Implemented by sub-class if necessary.\n  };\n\n  BaseAxisPointer.prototype.buildLabel = function (xy, wh, xDimIndex) {\n    xDimIndex = xDimIndex || 0;\n    return {\n      x: xy[xDimIndex],\n      y: xy[1 - xDimIndex],\n      width: wh[xDimIndex],\n      height: wh[1 - xDimIndex]\n    };\n  };\n\n  return BaseAxisPointer;\n}();\n\nfunction updateProps(animationModel, moveAnimation, el, props) {\n  // Animation optimize.\n  if (!propsEqual(inner(el).lastProp, props)) {\n    inner(el).lastProp = props;\n    moveAnimation ? graphic.updateProps(el, props, animationModel) : (el.stopAnimation(), el.attr(props));\n  }\n}\n\nfunction propsEqual(lastProps, newProps) {\n  if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n    var equals_1 = true;\n    zrUtil.each(newProps, function (item, key) {\n      equals_1 = equals_1 && propsEqual(lastProps[key], item);\n    });\n    return !!equals_1;\n  } else {\n    return lastProps === newProps;\n  }\n}\n\nfunction updateLabelShowHide(labelEl, axisPointerModel) {\n  labelEl[axisPointerModel.get(['label', 'show']) ? 'show' : 'hide']();\n}\n\nfunction getHandleTransProps(trans) {\n  return {\n    x: trans.x || 0,\n    y: trans.y || 0,\n    rotation: trans.rotation || 0\n  };\n}\n\nfunction updateMandatoryProps(group, axisPointerModel, silent) {\n  var z = axisPointerModel.get('z');\n  var zlevel = axisPointerModel.get('zlevel');\n  group && group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n      el.silent = silent;\n    }\n  });\n}\n\nexport default BaseAxisPointer;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport BaseAxisPointer from './BaseAxisPointer.js';\nimport * as graphic from '../../util/graphic.js';\nimport * as viewHelper from './viewHelper.js';\nimport * as matrix from 'zrender/lib/core/matrix.js';\nimport AxisBuilder from '../axis/AxisBuilder.js';\nvar PolarAxisPointer = /** @class */\nfunction (_super) {\n  __extends(PolarAxisPointer, _super);\n  function PolarAxisPointer() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * @override\n   */\n\n  PolarAxisPointer.prototype.makeElOption = function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    if (axis.dim === 'angle') {\n      this.animationThreshold = Math.PI / 18;\n    }\n    var polar = axis.polar;\n    var otherAxis = polar.getOtherAxis(axis);\n    var otherExtent = otherAxis.getExtent();\n    var coordValue = axis.dataToCoord(value);\n    var axisPointerType = axisPointerModel.get('type');\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, polar, coordValue, otherExtent);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n    var labelMargin = axisPointerModel.get(['label', 'margin']);\n    var labelPos = getLabelPosition(value, axisModel, axisPointerModel, polar, labelMargin);\n    viewHelper.buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos);\n  };\n  return PolarAxisPointer;\n}(BaseAxisPointer);\n;\nfunction getLabelPosition(value, axisModel, axisPointerModel, polar, labelMargin) {\n  var axis = axisModel.axis;\n  var coord = axis.dataToCoord(value);\n  var axisAngle = polar.getAngleAxis().getExtent()[0];\n  axisAngle = axisAngle / 180 * Math.PI;\n  var radiusExtent = polar.getRadiusAxis().getExtent();\n  var position;\n  var align;\n  var verticalAlign;\n  if (axis.dim === 'radius') {\n    var transform = matrix.create();\n    matrix.rotate(transform, transform, axisAngle);\n    matrix.translate(transform, transform, [polar.cx, polar.cy]);\n    position = graphic.applyTransform([coord, -labelMargin], transform);\n    var labelRotation = axisModel.getModel('axisLabel').get('rotate') || 0; // @ts-ignore\n\n    var labelLayout = AxisBuilder.innerTextLayout(axisAngle, labelRotation * Math.PI / 180, -1);\n    align = labelLayout.textAlign;\n    verticalAlign = labelLayout.textVerticalAlign;\n  } else {\n    // angle axis\n    var r = radiusExtent[1];\n    position = polar.coordToPoint([r + labelMargin, coord]);\n    var cx = polar.cx;\n    var cy = polar.cy;\n    align = Math.abs(position[0] - cx) / r < 0.3 ? 'center' : position[0] > cx ? 'left' : 'right';\n    verticalAlign = Math.abs(position[1] - cy) / r < 0.3 ? 'middle' : position[1] > cy ? 'top' : 'bottom';\n  }\n  return {\n    position: position,\n    align: align,\n    verticalAlign: verticalAlign\n  };\n}\nvar pointerShapeBuilder = {\n  line: function line(axis, polar, coordValue, otherExtent) {\n    return axis.dim === 'angle' ? {\n      type: 'Line',\n      shape: viewHelper.makeLineShape(polar.coordToPoint([otherExtent[0], coordValue]), polar.coordToPoint([otherExtent[1], coordValue]))\n    } : {\n      type: 'Circle',\n      shape: {\n        cx: polar.cx,\n        cy: polar.cy,\n        r: coordValue\n      }\n    };\n  },\n  shadow: function shadow(axis, polar, coordValue, otherExtent) {\n    var bandWidth = Math.max(1, axis.getBandWidth());\n    var radian = Math.PI / 180;\n    return axis.dim === 'angle' ? {\n      type: 'Sector',\n      shape: viewHelper.makeSectorShape(polar.cx, polar.cy, otherExtent[0], otherExtent[1],\n      // In ECharts y is negative if angle is positive\n      (-coordValue - bandWidth / 2) * radian, (-coordValue + bandWidth / 2) * radian)\n    } : {\n      type: 'Sector',\n      shape: viewHelper.makeSectorShape(polar.cx, polar.cy, coordValue - bandWidth / 2, coordValue + bandWidth / 2, 0, Math.PI * 2)\n    };\n  }\n};\nexport default PolarAxisPointer;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport BaseAxisPointer from './BaseAxisPointer.js';\nimport * as viewHelper from './viewHelper.js';\nimport * as singleAxisHelper from '../../coord/single/singleAxisHelper.js';\nvar XY = ['x', 'y'];\nvar WH = ['width', 'height'];\nvar SingleAxisPointer = /** @class */\nfunction (_super) {\n  __extends(SingleAxisPointer, _super);\n  function SingleAxisPointer() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * @override\n   */\n\n  SingleAxisPointer.prototype.makeElOption = function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var coordSys = axis.coordinateSystem;\n    var otherExtent = getGlobalExtent(coordSys, 1 - getPointDimIndex(axis));\n    var pixelValue = coordSys.dataToPoint(value)[0];\n    var axisPointerType = axisPointerModel.get('type');\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n    var layoutInfo = singleAxisHelper.layout(axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(\n    // @ts-ignore\n    value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  };\n  /**\n   * @override\n   */\n\n  SingleAxisPointer.prototype.getHandleTransform = function (value, axisModel, axisPointerModel) {\n    var layoutInfo = singleAxisHelper.layout(axisModel, {\n      labelInside: false\n    }); // @ts-ignore\n\n    layoutInfo.labelMargin = axisPointerModel.get(['handle', 'margin']);\n    var position = viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo);\n    return {\n      x: position[0],\n      y: position[1],\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  };\n  /**\n   * @override\n   */\n\n  SingleAxisPointer.prototype.updateHandleTransform = function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var coordSys = axis.coordinateSystem;\n    var dimIndex = getPointDimIndex(axis);\n    var axisExtent = getGlobalExtent(coordSys, dimIndex);\n    var currPosition = [transform.x, transform.y];\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var otherExtent = getGlobalExtent(coordSys, 1 - dimIndex);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex];\n    return {\n      x: currPosition[0],\n      y: currPosition[1],\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: {\n        verticalAlign: 'middle'\n      }\n    };\n  };\n  return SingleAxisPointer;\n}(BaseAxisPointer);\nvar pointerShapeBuilder = {\n  line: function line(axis, pixelValue, otherExtent) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getPointDimIndex(axis));\n    return {\n      type: 'Line',\n      subPixelOptimize: true,\n      shape: targetShape\n    };\n  },\n  shadow: function shadow(axis, pixelValue, otherExtent) {\n    var bandWidth = axis.getBandWidth();\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getPointDimIndex(axis))\n    };\n  }\n};\nfunction getPointDimIndex(axis) {\n  return axis.isHorizontal() ? 0 : 1;\n}\nfunction getGlobalExtent(coordSys, dimIndex) {\n  var rect = coordSys.getRect();\n  return [rect[XY[dimIndex]], rect[XY[dimIndex]] + rect[WH[dimIndex]]];\n}\nexport default SingleAxisPointer;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport * as modelUtil from '../../util/model.js';\n/**\n * @param finder contains {seriesIndex, dataIndex, dataIndexInside}\n * @param ecModel\n * @return  {point: [x, y], el: ...} point Will not be null.\n */\n\nexport default function findPointFromSeries(finder, ecModel) {\n  var point = [];\n  var seriesIndex = finder.seriesIndex;\n  var seriesModel;\n\n  if (seriesIndex == null || !(seriesModel = ecModel.getSeriesByIndex(seriesIndex))) {\n    return {\n      point: []\n    };\n  }\n\n  var data = seriesModel.getData();\n  var dataIndex = modelUtil.queryDataIndex(data, finder);\n\n  if (dataIndex == null || dataIndex < 0 || zrUtil.isArray(dataIndex)) {\n    return {\n      point: []\n    };\n  }\n\n  var el = data.getItemGraphicEl(dataIndex);\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (seriesModel.getTooltipPosition) {\n    point = seriesModel.getTooltipPosition(dataIndex) || [];\n  } else if (coordSys && coordSys.dataToPoint) {\n    if (finder.isStacked) {\n      var baseAxis = coordSys.getBaseAxis();\n      var valueAxis = coordSys.getOtherAxis(baseAxis);\n      var valueAxisDim = valueAxis.dim;\n      var baseAxisDim = baseAxis.dim;\n      var baseDataOffset = valueAxisDim === 'x' || valueAxisDim === 'radius' ? 1 : 0;\n      var baseDim = data.mapDimension(baseAxisDim);\n      var stackedData = [];\n      stackedData[baseDataOffset] = data.get(baseDim, dataIndex);\n      stackedData[1 - baseDataOffset] = data.get(data.getCalculationInfo('stackResultDimension'), dataIndex);\n      point = coordSys.dataToPoint(stackedData) || [];\n    } else {\n      point = coordSys.dataToPoint(data.getValues(zrUtil.map(coordSys.dimensions, function (dim) {\n        return data.mapDimension(dim);\n      }), dataIndex)) || [];\n    }\n  } else if (el) {\n    // Use graphic bounding rect\n    var rect = el.getBoundingRect().clone();\n    rect.applyTransform(el.transform);\n    point = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n\n  return {\n    point: point,\n    el: el\n  };\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport env from 'zrender/lib/core/env.js';\nimport { makeInner } from '../../util/model.js';\nvar inner = makeInner();\nvar each = zrUtil.each;\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n * @param {Function} handler\n *      param: {string} currTrigger\n *      param: {Array.<number>} point\n */\n\nexport function register(key, api, handler) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  inner(zr).records || (inner(zr).records = {});\n  initGlobalListeners(zr, api);\n  var record = inner(zr).records[key] || (inner(zr).records[key] = {});\n  record.handler = handler;\n}\n\nfunction initGlobalListeners(zr, api) {\n  if (inner(zr).initialized) {\n    return;\n  }\n\n  inner(zr).initialized = true;\n  useHandler('click', zrUtil.curry(doEnter, 'click'));\n  useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove')); // useHandler('mouseout', onLeave);\n\n  useHandler('globalout', onLeave);\n\n  function useHandler(eventType, cb) {\n    zr.on(eventType, function (e) {\n      var dis = makeDispatchAction(api);\n      each(inner(zr).records, function (record) {\n        record && cb(record, e, dis.dispatchAction);\n      });\n      dispatchTooltipFinally(dis.pendings, api);\n    });\n  }\n}\n\nfunction dispatchTooltipFinally(pendings, api) {\n  var showLen = pendings.showTip.length;\n  var hideLen = pendings.hideTip.length;\n  var actuallyPayload;\n\n  if (showLen) {\n    actuallyPayload = pendings.showTip[showLen - 1];\n  } else if (hideLen) {\n    actuallyPayload = pendings.hideTip[hideLen - 1];\n  }\n\n  if (actuallyPayload) {\n    actuallyPayload.dispatchAction = null;\n    api.dispatchAction(actuallyPayload);\n  }\n}\n\nfunction onLeave(record, e, dispatchAction) {\n  record.handler('leave', null, dispatchAction);\n}\n\nfunction doEnter(currTrigger, record, e, dispatchAction) {\n  record.handler(currTrigger, e, dispatchAction);\n}\n\nfunction makeDispatchAction(api) {\n  var pendings = {\n    showTip: [],\n    hideTip: []\n  }; // FIXME\n  // better approach?\n  // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n  // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n  // So we have to add \"final stage\" to merge those dispatched actions.\n\n  var dispatchAction = function (payload) {\n    var pendingList = pendings[payload.type];\n\n    if (pendingList) {\n      pendingList.push(payload);\n    } else {\n      payload.dispatchAction = dispatchAction;\n      api.dispatchAction(payload);\n    }\n  };\n\n  return {\n    dispatchAction: dispatchAction,\n    pendings: pendings\n  };\n}\n\nexport function unregister(key, api) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  var record = (inner(zr).records || {})[key];\n\n  if (record) {\n    inner(zr).records[key] = null;\n  }\n}","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport BaseAxisPointer from './BaseAxisPointer.js';\nimport * as viewHelper from './viewHelper.js';\nimport * as cartesianAxisHelper from '../../coord/cartesian/cartesianAxisHelper.js';\nvar CartesianAxisPointer = /** @class */\nfunction (_super) {\n  __extends(CartesianAxisPointer, _super);\n  function CartesianAxisPointer() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * @override\n   */\n\n  CartesianAxisPointer.prototype.makeElOption = function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisPointerType = axisPointerModel.get('type');\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n    var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(\n    // @ts-ignore\n    value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  };\n  /**\n   * @override\n   */\n\n  CartesianAxisPointer.prototype.getHandleTransform = function (value, axisModel, axisPointerModel) {\n    var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n      labelInside: false\n    }); // @ts-ignore\n\n    layoutInfo.labelMargin = axisPointerModel.get(['handle', 'margin']);\n    var pos = viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo);\n    return {\n      x: pos[0],\n      y: pos[1],\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  };\n  /**\n   * @override\n   */\n\n  CartesianAxisPointer.prototype.updateHandleTransform = function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisExtent = axis.getGlobalExtent(true);\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var dimIndex = axis.dim === 'x' ? 0 : 1;\n    var currPosition = [transform.x, transform.y];\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex]; // Make tooltip do not overlap axisPointer and in the middle of the grid.\n\n    var tooltipOptions = [{\n      verticalAlign: 'middle'\n    }, {\n      align: 'center'\n    }];\n    return {\n      x: currPosition[0],\n      y: currPosition[1],\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: tooltipOptions[dimIndex]\n    };\n  };\n  return CartesianAxisPointer;\n}(BaseAxisPointer);\nfunction getCartesian(grid, axis) {\n  var opt = {};\n  opt[axis.dim + 'AxisIndex'] = axis.index;\n  return grid.getCartesian(opt);\n}\nvar pointerShapeBuilder = {\n  line: function line(axis, pixelValue, otherExtent) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getAxisDimIndex(axis));\n    return {\n      type: 'Line',\n      subPixelOptimize: true,\n      shape: targetShape\n    };\n  },\n  shadow: function shadow(axis, pixelValue, otherExtent) {\n    var bandWidth = Math.max(1, axis.getBandWidth());\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getAxisDimIndex(axis))\n    };\n  }\n};\nfunction getAxisDimIndex(axis) {\n  return axis.dim === 'x' ? 0 : 1;\n}\nexport default CartesianAxisPointer;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport ComponentModel from '../../model/Component.js';\nvar AxisPointerModel = /** @class */\nfunction (_super) {\n  __extends(AxisPointerModel, _super);\n  function AxisPointerModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = AxisPointerModel.type;\n    return _this;\n  }\n  AxisPointerModel.type = 'axisPointer';\n  AxisPointerModel.defaultOption = {\n    // 'auto' means that show when triggered by tooltip or handle.\n    show: 'auto',\n    // zlevel: 0,\n    z: 50,\n    type: 'line',\n    // axispointer triggered by tootip determine snap automatically,\n    // see `modelHelper`.\n    snap: false,\n    triggerTooltip: true,\n    value: null,\n    status: null,\n    link: [],\n    // Do not set 'auto' here, otherwise global animation: false\n    // will not effect at this axispointer.\n    animation: null,\n    animationDurationUpdate: 200,\n    lineStyle: {\n      color: '#B9BEC9',\n      width: 1,\n      type: 'dashed'\n    },\n    shadowStyle: {\n      color: 'rgba(210,219,238,0.2)'\n    },\n    label: {\n      show: true,\n      formatter: null,\n      precision: 'auto',\n      margin: 3,\n      color: '#fff',\n      padding: [5, 7, 5, 7],\n      backgroundColor: 'auto',\n      borderColor: null,\n      borderWidth: 0,\n      borderRadius: 3\n    },\n    handle: {\n      show: false,\n      // eslint-disable-next-line\n      icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z',\n      size: 45,\n      // handle margin is from symbol center to axis, which is stable when circular move.\n      margin: 50,\n      // color: '#1b8bbd'\n      // color: '#2f4554'\n      color: '#333',\n      shadowBlur: 3,\n      shadowColor: '#aaa',\n      shadowOffsetX: 0,\n      shadowOffsetY: 2,\n      // For mobile performance\n      throttle: 40\n    }\n  };\n  return AxisPointerModel;\n}(ComponentModel);\nexport default AxisPointerModel;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as globalListener from './globalListener.js';\nimport ComponentView from '../../view/Component.js';\nvar AxisPointerView = /** @class */\nfunction (_super) {\n  __extends(AxisPointerView, _super);\n  function AxisPointerView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = AxisPointerView.type;\n    return _this;\n  }\n  AxisPointerView.prototype.render = function (globalAxisPointerModel, ecModel, api) {\n    var globalTooltipModel = ecModel.getComponent('tooltip');\n    var triggerOn = globalAxisPointerModel.get('triggerOn') || globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click'; // Register global listener in AxisPointerView to enable\n    // AxisPointerView to be independent to Tooltip.\n\n    globalListener.register('axisPointer', api, function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none' && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)) {\n        dispatchAction({\n          type: 'updateAxisPointer',\n          currTrigger: currTrigger,\n          x: e && e.offsetX,\n          y: e && e.offsetY\n        });\n      }\n    });\n  };\n  AxisPointerView.prototype.remove = function (ecModel, api) {\n    globalListener.unregister('axisPointer', api);\n  };\n  AxisPointerView.prototype.dispose = function (ecModel, api) {\n    globalListener.unregister('axisPointer', api);\n  };\n  AxisPointerView.type = 'axisPointer';\n  return AxisPointerView;\n}(ComponentView);\nexport default AxisPointerView;","import \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.function.name.js\";\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { makeInner } from '../../util/model.js';\nimport * as modelHelper from './modelHelper.js';\nimport findPointFromSeries from './findPointFromSeries.js';\nimport { each, curry, bind, extend } from 'zrender/lib/core/util.js';\nvar inner = makeInner();\n/**\n * Basic logic: check all axis, if they do not demand show/highlight,\n * then hide/downplay them.\n *\n * @return content of event obj for echarts.connect.\n */\n\nexport default function axisTrigger(payload, ecModel, api) {\n  var currTrigger = payload.currTrigger;\n  var point = [payload.x, payload.y];\n  var finder = payload;\n  var dispatchAction = payload.dispatchAction || bind(api.dispatchAction, api);\n  var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo; // Pending\n  // See #6121. But we are not able to reproduce it yet.\n\n  if (!coordSysAxesInfo) {\n    return;\n  }\n  if (illegalPoint(point)) {\n    // Used in the default behavior of `connection`: use the sample seriesIndex\n    // and dataIndex. And also used in the tooltipView trigger.\n    point = findPointFromSeries({\n      seriesIndex: finder.seriesIndex,\n      // Do not use dataIndexInside from other ec instance.\n      // FIXME: auto detect it?\n      dataIndex: finder.dataIndex\n    }, ecModel).point;\n  }\n  var isIllegalPoint = illegalPoint(point); // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n  // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n  // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n  // and dataIndex.\n\n  var inputAxesInfo = finder.axesInfo;\n  var axesInfo = coordSysAxesInfo.axesInfo;\n  var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n  var outputPayload = {};\n  var showValueMap = {};\n  var dataByCoordSys = {\n    list: [],\n    map: {}\n  };\n  var updaters = {\n    showPointer: curry(showPointer, showValueMap),\n    showTooltip: curry(showTooltip, dataByCoordSys)\n  }; // Process for triggered axes.\n\n  each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n    // If a point given, it must be contained by the coordinate system.\n    var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n    each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n      var axis = axisInfo.axis;\n      var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo); // If no inputAxesInfo, no axis is restricted.\n\n      if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n        var val = inputAxisInfo && inputAxisInfo.value;\n        if (val == null && !isIllegalPoint) {\n          val = axis.pointToData(point);\n        }\n        val != null && processOnAxis(axisInfo, val, updaters, false, outputPayload);\n      }\n    });\n  }); // Process for linked axes.\n\n  var linkTriggers = {};\n  each(axesInfo, function (tarAxisInfo, tarKey) {\n    var linkGroup = tarAxisInfo.linkGroup; // If axis has been triggered in the previous stage, it should not be triggered by link.\n\n    if (linkGroup && !showValueMap[tarKey]) {\n      each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n        var srcValItem = showValueMap[srcKey]; // If srcValItem exist, source axis is triggered, so link to target axis.\n\n        if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n          var val = srcValItem.value;\n          linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo))));\n          linkTriggers[tarAxisInfo.key] = val;\n        }\n      });\n    }\n  });\n  each(linkTriggers, function (val, tarKey) {\n    processOnAxis(axesInfo[tarKey], val, updaters, true, outputPayload);\n  });\n  updateModelActually(showValueMap, axesInfo, outputPayload);\n  dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n  dispatchHighDownActually(axesInfo, dispatchAction, api);\n  return outputPayload;\n}\nfunction processOnAxis(axisInfo, newValue, updaters, noSnap, outputFinder) {\n  var axis = axisInfo.axis;\n  if (axis.scale.isBlank() || !axis.containData(newValue)) {\n    return;\n  }\n  if (!axisInfo.involveSeries) {\n    updaters.showPointer(axisInfo, newValue);\n    return;\n  } // Heavy calculation. So put it after axis.containData checking.\n\n  var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n  var payloadBatch = payloadInfo.payloadBatch;\n  var snapToValue = payloadInfo.snapToValue; // Fill content of event obj for echarts.connect.\n  // By default use the first involved series data as a sample to connect.\n\n  if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n    extend(outputFinder, payloadBatch[0]);\n  } // If no linkSource input, this process is for collecting link\n  // target, where snap should not be accepted.\n\n  if (!noSnap && axisInfo.snap) {\n    if (axis.containData(snapToValue) && snapToValue != null) {\n      newValue = snapToValue;\n    }\n  }\n  updaters.showPointer(axisInfo, newValue, payloadBatch); // Tooltip should always be snapToValue, otherwise there will be\n  // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n\n  updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n}\nfunction buildPayloadsBySeries(value, axisInfo) {\n  var axis = axisInfo.axis;\n  var dim = axis.dim;\n  var snapToValue = value;\n  var payloadBatch = [];\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n  each(axisInfo.seriesModels, function (series, idx) {\n    var dataDim = series.getData().mapDimensionsAll(dim);\n    var seriesNestestValue;\n    var dataIndices;\n    if (series.getAxisTooltipData) {\n      var result = series.getAxisTooltipData(dataDim, value, axis);\n      dataIndices = result.dataIndices;\n      seriesNestestValue = result.nestestValue;\n    } else {\n      dataIndices = series.getData().indicesOfNearest(dataDim[0], value,\n      // Add a threshold to avoid find the wrong dataIndex\n      // when data length is not same.\n      // false,\n      axis.type === 'category' ? 0.5 : null);\n      if (!dataIndices.length) {\n        return;\n      }\n      seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n    }\n    if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n      return;\n    }\n    var diff = value - seriesNestestValue;\n    var dist = Math.abs(diff); // Consider category case\n\n    if (dist <= minDist) {\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        snapToValue = seriesNestestValue;\n        payloadBatch.length = 0;\n      }\n      each(dataIndices, function (dataIndex) {\n        payloadBatch.push({\n          seriesIndex: series.seriesIndex,\n          dataIndexInside: dataIndex,\n          dataIndex: series.getData().getRawIndex(dataIndex)\n        });\n      });\n    }\n  });\n  return {\n    payloadBatch: payloadBatch,\n    snapToValue: snapToValue\n  };\n}\nfunction showPointer(showValueMap, axisInfo, value, payloadBatch) {\n  showValueMap[axisInfo.key] = {\n    value: value,\n    payloadBatch: payloadBatch\n  };\n}\nfunction showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n  var payloadBatch = payloadInfo.payloadBatch;\n  var axis = axisInfo.axis;\n  var axisModel = axis.model;\n  var axisPointerModel = axisInfo.axisPointerModel; // If no data, do not create anything in dataByCoordSys,\n  // whose length will be used to judge whether dispatch action.\n\n  if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n    return;\n  }\n  var coordSysModel = axisInfo.coordSys.model;\n  var coordSysKey = modelHelper.makeKey(coordSysModel);\n  var coordSysItem = dataByCoordSys.map[coordSysKey];\n  if (!coordSysItem) {\n    coordSysItem = dataByCoordSys.map[coordSysKey] = {\n      coordSysId: coordSysModel.id,\n      coordSysIndex: coordSysModel.componentIndex,\n      coordSysType: coordSysModel.type,\n      coordSysMainType: coordSysModel.mainType,\n      dataByAxis: []\n    };\n    dataByCoordSys.list.push(coordSysItem);\n  }\n  coordSysItem.dataByAxis.push({\n    axisDim: axis.dim,\n    axisIndex: axisModel.componentIndex,\n    axisType: axisModel.type,\n    axisId: axisModel.id,\n    value: value,\n    // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n    // depends that all models have been updated. So it should not be performed\n    // here. Considering axisPointerModel used here is volatile, which is hard\n    // to be retrieve in TooltipView, we prepare parameters here.\n    valueLabelOpt: {\n      precision: axisPointerModel.get(['label', 'precision']),\n      formatter: axisPointerModel.get(['label', 'formatter'])\n    },\n    seriesDataIndices: payloadBatch.slice()\n  });\n}\nfunction updateModelActually(showValueMap, axesInfo, outputPayload) {\n  var outputAxesInfo = outputPayload.axesInfo = []; // Basic logic: If no 'show' required, 'hide' this axisPointer.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    var valItem = showValueMap[key];\n    if (valItem) {\n      !axisInfo.useHandle && (option.status = 'show');\n      option.value = valItem.value; // For label formatter param and highlight.\n\n      option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n    } // When always show (e.g., handle used), remain\n    // original value and status.\n    else {\n      // If hide, value still need to be set, consider\n      // click legend to toggle axis blank.\n      !axisInfo.useHandle && (option.status = 'hide');\n    } // If status is 'hide', should be no info in payload.\n\n    option.status === 'show' && outputAxesInfo.push({\n      axisDim: axisInfo.axis.dim,\n      axisIndex: axisInfo.axis.model.componentIndex,\n      value: option.value\n    });\n  });\n}\nfunction dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n  // Basic logic: If no showTip required, hideTip will be dispatched.\n  if (illegalPoint(point) || !dataByCoordSys.list.length) {\n    dispatchAction({\n      type: 'hideTip'\n    });\n    return;\n  } // In most case only one axis (or event one series is used). It is\n  // convenient to fetch payload.seriesIndex and payload.dataIndex\n  // directly. So put the first seriesIndex and dataIndex of the first\n  // axis on the payload.\n\n  var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n  dispatchAction({\n    type: 'showTip',\n    escapeConnect: true,\n    x: point[0],\n    y: point[1],\n    tooltipOption: payload.tooltipOption,\n    position: payload.position,\n    dataIndexInside: sampleItem.dataIndexInside,\n    dataIndex: sampleItem.dataIndex,\n    seriesIndex: sampleItem.seriesIndex,\n    dataByCoordSys: dataByCoordSys.list\n  });\n}\nfunction dispatchHighDownActually(axesInfo, dispatchAction, api) {\n  // FIXME\n  // highlight status modification should be a stage of main process?\n  // (Consider confilct (e.g., legend and axisPointer) and setOption)\n  var zr = api.getZr();\n  var highDownKey = 'axisPointerLastHighlights';\n  var lastHighlights = inner(zr)[highDownKey] || {};\n  var newHighlights = inner(zr)[highDownKey] = {}; // Update highlight/downplay status according to axisPointer model.\n  // Build hash map and remove duplicate incidentally.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n      var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n      newHighlights[key] = batchItem;\n    });\n  }); // Diff.\n\n  var toHighlight = [];\n  var toDownplay = [];\n  each(lastHighlights, function (batchItem, key) {\n    !newHighlights[key] && toDownplay.push(batchItem);\n  });\n  each(newHighlights, function (batchItem, key) {\n    !lastHighlights[key] && toHighlight.push(batchItem);\n  });\n  toDownplay.length && api.dispatchAction({\n    type: 'downplay',\n    escapeConnect: true,\n    // Not blur others when highlight in axisPointer.\n    notBlur: true,\n    batch: toDownplay\n  });\n  toHighlight.length && api.dispatchAction({\n    type: 'highlight',\n    escapeConnect: true,\n    // Not blur others when highlight in axisPointer.\n    notBlur: true,\n    batch: toHighlight\n  });\n}\nfunction findInputAxisInfo(inputAxesInfo, axisInfo) {\n  for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n    var inputAxisInfo = inputAxesInfo[i];\n    if (axisInfo.axis.dim === inputAxisInfo.axisDim && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex) {\n      return inputAxisInfo;\n    }\n  }\n}\nfunction makeMapperParam(axisInfo) {\n  var axisModel = axisInfo.axis.model;\n  var item = {};\n  var dim = item.axisDim = axisInfo.axis.dim;\n  item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n  item.axisName = item[dim + 'AxisName'] = axisModel.name;\n  item.axisId = item[dim + 'AxisId'] = axisModel.id;\n  return item;\n}\nfunction illegalPoint(point) {\n  return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n}","import \"core-js/modules/es.string.link.js\";\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport AxisView from '../axis/AxisView.js';\nimport CartesianAxisPointer from './CartesianAxisPointer.js';\nimport AxisPointerModel from './AxisPointerModel.js';\nimport AxisPointerView from './AxisPointerView.js';\nimport { isArray } from 'zrender/lib/core/util.js';\nimport { collect } from './modelHelper.js';\nimport axisTrigger from './axisTrigger.js';\nexport function install(registers) {\n  // CartesianAxisPointer is not supposed to be required here. But consider\n  // echarts.simple.js and online build tooltip, which only require gridSimple,\n  // CartesianAxisPointer should be able to required somewhere.\n  AxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\n  registers.registerComponentModel(AxisPointerModel);\n  registers.registerComponentView(AxisPointerView);\n  registers.registerPreprocessor(function (option) {\n    // Always has a global axisPointerModel for default setting.\n    if (option) {\n      (!option.axisPointer || option.axisPointer.length === 0) && (option.axisPointer = {});\n      var link = option.axisPointer.link; // Normalize to array to avoid object mergin. But if link\n      // is not set, remain null/undefined, otherwise it will\n      // override existent link setting.\n\n      if (link && !isArray(link)) {\n        option.axisPointer.link = [link];\n      }\n    }\n  }); // This process should proformed after coordinate systems created\n  // and series data processed. So put it on statistic processing stage.\n\n  registers.registerProcessor(registers.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n    // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n    // allAxesInfo should be updated when setOption performed.\n    ecModel.getComponent('axisPointer').coordSysAxesInfo = collect(ecModel, api);\n  }); // Broadcast to all views.\n\n  registers.registerAction({\n    type: 'updateAxisPointer',\n    event: 'updateAxisPointer',\n    update: ':updateAxisPointer'\n  }, axisTrigger);\n}","import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.slice.js\";\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport Model from '../../model/Model.js';\nimport { each, curry, clone, defaults, isArray, indexOf } from 'zrender/lib/core/util.js'; // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n// allAxesInfo should be updated when setOption performed.\n\nexport function collect(ecModel, api) {\n  var result = {\n    /**\n     * key: makeKey(axis.model)\n     * value: {\n     *      axis,\n     *      coordSys,\n     *      axisPointerModel,\n     *      triggerTooltip,\n     *      involveSeries,\n     *      snap,\n     *      seriesModels,\n     *      seriesDataCount\n     * }\n     */\n    axesInfo: {},\n    seriesInvolved: false,\n    /**\n     * key: makeKey(coordSys.model)\n     * value: Object: key makeKey(axis.model), value: axisInfo\n     */\n    coordSysAxesInfo: {},\n    coordSysMap: {}\n  };\n  collectAxesInfo(result, ecModel, api); // Check seriesInvolved for performance, in case too many series in some chart.\n\n  result.seriesInvolved && collectSeriesInfo(result, ecModel);\n  return result;\n}\nfunction collectAxesInfo(result, ecModel, api) {\n  var globalTooltipModel = ecModel.getComponent('tooltip');\n  var globalAxisPointerModel = ecModel.getComponent('axisPointer'); // links can only be set on global.\n\n  var linksOption = globalAxisPointerModel.get('link', true) || [];\n  var linkGroups = []; // Collect axes info.\n\n  each(api.getCoordinateSystems(), function (coordSys) {\n    // Some coordinate system do not support axes, like geo.\n    if (!coordSys.axisPointerEnabled) {\n      return;\n    }\n    var coordSysKey = makeKey(coordSys.model);\n    var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n    result.coordSysMap[coordSysKey] = coordSys; // Set tooltip (like 'cross') is a convenient way to show axisPointer\n    // for user. So we enable setting tooltip on coordSys model.\n\n    var coordSysModel = coordSys.model;\n    var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n    each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null)); // If axis tooltip used, choose tooltip axis for each coordSys.\n    // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n\n    if (coordSys.getTooltipAxes && globalTooltipModel // If tooltip.showContent is set as false, tooltip will not\n    // show but axisPointer will show as normal.\n    && baseTooltipModel.get('show')) {\n      // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n      // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n      var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n      var cross = baseTooltipModel.get(['axisPointer', 'type']) === 'cross';\n      var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get(['axisPointer', 'axis']));\n      if (triggerAxis || cross) {\n        each(tooltipAxes.baseAxes, curry(saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis));\n      }\n      if (cross) {\n        each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n      }\n    } // fromTooltip: true | false | 'cross'\n    // triggerTooltip: true | false | null\n\n    function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n      var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n      var axisPointerShow = axisPointerModel.get('show');\n      if (!axisPointerShow || axisPointerShow === 'auto' && !fromTooltip && !isHandleTrigger(axisPointerModel)) {\n        return;\n      }\n      if (triggerTooltip == null) {\n        triggerTooltip = axisPointerModel.get('triggerTooltip');\n      }\n      axisPointerModel = fromTooltip ? makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) : axisPointerModel;\n      var snap = axisPointerModel.get('snap');\n      var axisKey = makeKey(axis.model);\n      var involveSeries = triggerTooltip || snap || axis.type === 'category'; // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n\n      var axisInfo = result.axesInfo[axisKey] = {\n        key: axisKey,\n        axis: axis,\n        coordSys: coordSys,\n        axisPointerModel: axisPointerModel,\n        triggerTooltip: triggerTooltip,\n        involveSeries: involveSeries,\n        snap: snap,\n        useHandle: isHandleTrigger(axisPointerModel),\n        seriesModels: [],\n        linkGroup: null\n      };\n      axesInfoInCoordSys[axisKey] = axisInfo;\n      result.seriesInvolved = result.seriesInvolved || involveSeries;\n      var groupIndex = getLinkGroupIndex(linksOption, axis);\n      if (groupIndex != null) {\n        var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {\n          axesInfo: {}\n        });\n        linkGroup.axesInfo[axisKey] = axisInfo;\n        linkGroup.mapper = linksOption[groupIndex].mapper;\n        axisInfo.linkGroup = linkGroup;\n      }\n    }\n  });\n}\nfunction makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) {\n  var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n  var fields = ['type', 'snap', 'lineStyle', 'shadowStyle', 'label', 'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'];\n  var volatileOption = {};\n  each(fields, function (field) {\n    volatileOption[field] = clone(tooltipAxisPointerModel.get(field));\n  }); // category axis do not auto snap, otherwise some tick that do not\n  // has value can not be hovered. value/time/log axis default snap if\n  // triggered from tooltip and trigger tooltip.\n\n  volatileOption.snap = axis.type !== 'category' && !!triggerTooltip; // Compatible with previous behavior, tooltip axis does not show label by default.\n  // Only these properties can be overridden from tooltip to axisPointer.\n\n  if (tooltipAxisPointerModel.get('type') === 'cross') {\n    volatileOption.type = 'line';\n  }\n  var labelOption = volatileOption.label || (volatileOption.label = {}); // Follow the convention, do not show label when triggered by tooltip by default.\n\n  labelOption.show == null && (labelOption.show = false);\n  if (fromTooltip === 'cross') {\n    // When 'cross', both axes show labels.\n    var tooltipAxisPointerLabelShow = tooltipAxisPointerModel.get(['label', 'show']);\n    labelOption.show = tooltipAxisPointerLabelShow != null ? tooltipAxisPointerLabelShow : true; // If triggerTooltip, this is a base axis, which should better not use cross style\n    // (cross style is dashed by default)\n\n    if (!triggerTooltip) {\n      var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n      crossStyle && defaults(labelOption, crossStyle.textStyle);\n    }\n  }\n  return axis.model.getModel('axisPointer', new Model(volatileOption, globalAxisPointerModel, ecModel));\n}\nfunction collectSeriesInfo(result, ecModel) {\n  // Prepare data for axis trigger\n  ecModel.eachSeries(function (seriesModel) {\n    // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesTooltipTrigger = seriesModel.get(['tooltip', 'trigger'], true);\n    var seriesTooltipShow = seriesModel.get(['tooltip', 'show'], true);\n    if (!coordSys || seriesTooltipTrigger === 'none' || seriesTooltipTrigger === false || seriesTooltipTrigger === 'item' || seriesTooltipShow === false || seriesModel.get(['axisPointer', 'show'], true) === false) {\n      return;\n    }\n    each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n      var axis = axisInfo.axis;\n      if (coordSys.getAxis(axis.dim) === axis) {\n        axisInfo.seriesModels.push(seriesModel);\n        axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n        axisInfo.seriesDataCount += seriesModel.getData().count();\n      }\n    });\n  });\n}\n/**\n * For example:\n * {\n *     axisPointer: {\n *         links: [{\n *             xAxisIndex: [2, 4],\n *             yAxisIndex: 'all'\n *         }, {\n *             xAxisId: ['a5', 'a7'],\n *             xAxisName: 'xxx'\n *         }]\n *     }\n * }\n */\n\nfunction getLinkGroupIndex(linksOption, axis) {\n  var axisModel = axis.model;\n  var dim = axis.dim;\n  for (var i = 0; i < linksOption.length; i++) {\n    var linkOption = linksOption[i] || {};\n    if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id) || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex) || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)) {\n      return i;\n    }\n  }\n}\nfunction checkPropInLink(linkPropValue, axisPropValue) {\n  return linkPropValue === 'all' || isArray(linkPropValue) && indexOf(linkPropValue, axisPropValue) >= 0 || linkPropValue === axisPropValue;\n}\nexport function fixValue(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n  if (!axisInfo) {\n    return;\n  }\n  var axisPointerModel = axisInfo.axisPointerModel;\n  var scale = axisInfo.axis.scale;\n  var option = axisPointerModel.option;\n  var status = axisPointerModel.get('status');\n  var value = axisPointerModel.get('value'); // Parse init value for category and time axis.\n\n  if (value != null) {\n    value = scale.parse(value);\n  }\n  var useHandle = isHandleTrigger(axisPointerModel); // If `handle` used, `axisPointer` will always be displayed, so value\n  // and status should be initialized.\n\n  if (status == null) {\n    option.status = useHandle ? 'show' : 'hide';\n  }\n  var extent = scale.getExtent().slice();\n  extent[0] > extent[1] && extent.reverse();\n  if (\n  // Pick a value on axis when initializing.\n  value == null // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n  // where we should re-pick a value to keep `handle` displaying normally.\n  || value > extent[1]) {\n    // Make handle displayed on the end of the axis when init, which looks better.\n    value = extent[1];\n  }\n  if (value < extent[0]) {\n    value = extent[0];\n  }\n  option.value = value;\n  if (useHandle) {\n    option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n  }\n}\nexport function getAxisInfo(axisModel) {\n  var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n  return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n}\nexport function getAxisPointerModel(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n  return axisInfo && axisInfo.axisPointerModel;\n}\nfunction isHandleTrigger(axisPointerModel) {\n  return !!axisPointerModel.get(['handle', 'show']);\n}\n/**\n * @param {module:echarts/model/Model} model\n * @return {string} unique key\n */\n\nexport function makeKey(model) {\n  return model.type + '||' + model.id;\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport * as graphic from '../../util/graphic.js';\nimport * as textContain from 'zrender/lib/contain/text.js';\nimport * as formatUtil from '../../util/format.js';\nimport * as matrix from 'zrender/lib/core/matrix.js';\nimport * as axisHelper from '../../coord/axisHelper.js';\nimport AxisBuilder from '../axis/AxisBuilder.js';\nimport { createTextStyle } from '../../label/labelStyle.js';\nexport function buildElStyle(axisPointerModel) {\n  var axisPointerType = axisPointerModel.get('type');\n  var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n  var style;\n\n  if (axisPointerType === 'line') {\n    style = styleModel.getLineStyle();\n    style.fill = null;\n  } else if (axisPointerType === 'shadow') {\n    style = styleModel.getAreaStyle();\n    style.stroke = null;\n  }\n\n  return style;\n}\n/**\n * @param {Function} labelPos {align, verticalAlign, position}\n */\n\nexport function buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos) {\n  var value = axisPointerModel.get('value');\n  var text = getValueLabel(value, axisModel.axis, axisModel.ecModel, axisPointerModel.get('seriesDataIndices'), {\n    precision: axisPointerModel.get(['label', 'precision']),\n    formatter: axisPointerModel.get(['label', 'formatter'])\n  });\n  var labelModel = axisPointerModel.getModel('label');\n  var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n  var font = labelModel.getFont();\n  var textRect = textContain.getBoundingRect(text, font);\n  var position = labelPos.position;\n  var width = textRect.width + paddings[1] + paddings[3];\n  var height = textRect.height + paddings[0] + paddings[2]; // Adjust by align.\n\n  var align = labelPos.align;\n  align === 'right' && (position[0] -= width);\n  align === 'center' && (position[0] -= width / 2);\n  var verticalAlign = labelPos.verticalAlign;\n  verticalAlign === 'bottom' && (position[1] -= height);\n  verticalAlign === 'middle' && (position[1] -= height / 2); // Not overflow ec container\n\n  confineInContainer(position, width, height, api);\n  var bgColor = labelModel.get('backgroundColor');\n\n  if (!bgColor || bgColor === 'auto') {\n    bgColor = axisModel.get(['axisLine', 'lineStyle', 'color']);\n  }\n\n  elOption.label = {\n    // shape: {x: 0, y: 0, width: width, height: height, r: labelModel.get('borderRadius')},\n    x: position[0],\n    y: position[1],\n    style: createTextStyle(labelModel, {\n      text: text,\n      font: font,\n      fill: labelModel.getTextColor(),\n      padding: paddings,\n      backgroundColor: bgColor\n    }),\n    // Label should be over axisPointer.\n    z2: 10\n  };\n} // Do not overflow ec container\n\nfunction confineInContainer(position, width, height, api) {\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  position[0] = Math.min(position[0] + width, viewWidth) - width;\n  position[1] = Math.min(position[1] + height, viewHeight) - height;\n  position[0] = Math.max(position[0], 0);\n  position[1] = Math.max(position[1], 0);\n}\n\nexport function getValueLabel(value, axis, ecModel, seriesDataIndices, opt) {\n  value = axis.scale.parse(value);\n  var text = axis.scale.getLabel({\n    value: value\n  }, {\n    // If `precision` is set, width can be fixed (like '12.00500'), which\n    // helps to debounce when when moving label.\n    precision: opt.precision\n  });\n  var formatter = opt.formatter;\n\n  if (formatter) {\n    var params_1 = {\n      value: axisHelper.getAxisRawValue(axis, {\n        value: value\n      }),\n      axisDimension: axis.dim,\n      axisIndex: axis.index,\n      seriesData: []\n    };\n    zrUtil.each(seriesDataIndices, function (idxItem) {\n      var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n      var dataIndex = idxItem.dataIndexInside;\n      var dataParams = series && series.getDataParams(dataIndex);\n      dataParams && params_1.seriesData.push(dataParams);\n    });\n\n    if (zrUtil.isString(formatter)) {\n      text = formatter.replace('{value}', text);\n    } else if (zrUtil.isFunction(formatter)) {\n      text = formatter(params_1);\n    }\n  }\n\n  return text;\n}\nexport function getTransformedPosition(axis, value, layoutInfo) {\n  var transform = matrix.create();\n  matrix.rotate(transform, transform, layoutInfo.rotation);\n  matrix.translate(transform, transform, layoutInfo.position);\n  return graphic.applyTransform([axis.dataToCoord(value), (layoutInfo.labelOffset || 0) + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)], transform);\n}\nexport function buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api) {\n  // @ts-ignore\n  var textLayout = AxisBuilder.innerTextLayout(layoutInfo.rotation, 0, layoutInfo.labelDirection);\n  layoutInfo.labelMargin = axisPointerModel.get(['label', 'margin']);\n  buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n    position: getTransformedPosition(axisModel.axis, value, layoutInfo),\n    align: textLayout.textAlign,\n    verticalAlign: textLayout.textVerticalAlign\n  });\n}\nexport function makeLineShape(p1, p2, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x1: p1[xDimIndex],\n    y1: p1[1 - xDimIndex],\n    x2: p2[xDimIndex],\n    y2: p2[1 - xDimIndex]\n  };\n}\nexport function makeRectShape(xy, wh, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x: xy[xDimIndex],\n    y: xy[1 - xDimIndex],\n    width: wh[xDimIndex],\n    height: wh[1 - xDimIndex]\n  };\n}\nexport function makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n  return {\n    cx: cx,\n    cy: cy,\n    r0: r0,\n    r: r,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    clockwise: true\n  };\n}","import \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.fill.js\";\nimport \"core-js/modules/es.array.push.js\";\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport * as graphic from '../../util/graphic.js';\nimport { createTextStyle } from '../../label/labelStyle.js';\nimport Model from '../../model/Model.js';\nimport AxisView from './AxisView.js';\nimport AxisBuilder from './AxisBuilder.js';\nimport { getECData } from '../../util/innerStore.js';\nvar elementList = ['axisLine', 'axisLabel', 'axisTick', 'minorTick', 'splitLine', 'minorSplitLine', 'splitArea'];\nfunction getAxisLineShape(polar, rExtent, angle) {\n  rExtent[1] > rExtent[0] && (rExtent = rExtent.slice().reverse());\n  var start = polar.coordToPoint([rExtent[0], angle]);\n  var end = polar.coordToPoint([rExtent[1], angle]);\n  return {\n    x1: start[0],\n    y1: start[1],\n    x2: end[0],\n    y2: end[1]\n  };\n}\nfunction getRadiusIdx(polar) {\n  var radiusAxis = polar.getRadiusAxis();\n  return radiusAxis.inverse ? 0 : 1;\n} // Remove the last tick which will overlap the first tick\n\nfunction fixAngleOverlap(list) {\n  var firstItem = list[0];\n  var lastItem = list[list.length - 1];\n  if (firstItem && lastItem && Math.abs(Math.abs(firstItem.coord - lastItem.coord) - 360) < 1e-4) {\n    list.pop();\n  }\n}\nvar AngleAxisView = /** @class */\nfunction (_super) {\n  __extends(AngleAxisView, _super);\n  function AngleAxisView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = AngleAxisView.type;\n    _this.axisPointerClass = 'PolarAxisPointer';\n    return _this;\n  }\n  AngleAxisView.prototype.render = function (angleAxisModel, ecModel) {\n    this.group.removeAll();\n    if (!angleAxisModel.get('show')) {\n      return;\n    }\n    var angleAxis = angleAxisModel.axis;\n    var polar = angleAxis.polar;\n    var radiusExtent = polar.getRadiusAxis().getExtent();\n    var ticksAngles = angleAxis.getTicksCoords();\n    var minorTickAngles = angleAxis.getMinorTicksCoords();\n    var labels = zrUtil.map(angleAxis.getViewLabels(), function (labelItem) {\n      labelItem = zrUtil.clone(labelItem);\n      var scale = angleAxis.scale;\n      var tickValue = scale.type === 'ordinal' ? scale.getRawOrdinalNumber(labelItem.tickValue) : labelItem.tickValue;\n      labelItem.coord = angleAxis.dataToCoord(tickValue);\n      return labelItem;\n    });\n    fixAngleOverlap(labels);\n    fixAngleOverlap(ticksAngles);\n    zrUtil.each(elementList, function (name) {\n      if (angleAxisModel.get([name, 'show']) && (!angleAxis.scale.isBlank() || name === 'axisLine')) {\n        angelAxisElementsBuilders[name](this.group, angleAxisModel, polar, ticksAngles, minorTickAngles, radiusExtent, labels);\n      }\n    }, this);\n  };\n  AngleAxisView.type = 'angleAxis';\n  return AngleAxisView;\n}(AxisView);\nvar angelAxisElementsBuilders = {\n  axisLine: function axisLine(group, angleAxisModel, polar, ticksAngles, minorTickAngles, radiusExtent) {\n    var lineStyleModel = angleAxisModel.getModel(['axisLine', 'lineStyle']); // extent id of the axis radius (r0 and r)\n\n    var rId = getRadiusIdx(polar);\n    var r0Id = rId ? 0 : 1;\n    var shape;\n    if (radiusExtent[r0Id] === 0) {\n      shape = new graphic.Circle({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r: radiusExtent[rId]\n        },\n        style: lineStyleModel.getLineStyle(),\n        z2: 1,\n        silent: true\n      });\n    } else {\n      shape = new graphic.Ring({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r: radiusExtent[rId],\n          r0: radiusExtent[r0Id]\n        },\n        style: lineStyleModel.getLineStyle(),\n        z2: 1,\n        silent: true\n      });\n    }\n    shape.style.fill = null;\n    group.add(shape);\n  },\n  axisTick: function axisTick(group, angleAxisModel, polar, ticksAngles, minorTickAngles, radiusExtent) {\n    var tickModel = angleAxisModel.getModel('axisTick');\n    var tickLen = (tickModel.get('inside') ? -1 : 1) * tickModel.get('length');\n    var radius = radiusExtent[getRadiusIdx(polar)];\n    var lines = zrUtil.map(ticksAngles, function (tickAngleItem) {\n      return new graphic.Line({\n        shape: getAxisLineShape(polar, [radius, radius + tickLen], tickAngleItem.coord)\n      });\n    });\n    group.add(graphic.mergePath(lines, {\n      style: zrUtil.defaults(tickModel.getModel('lineStyle').getLineStyle(), {\n        stroke: angleAxisModel.get(['axisLine', 'lineStyle', 'color'])\n      })\n    }));\n  },\n  minorTick: function minorTick(group, angleAxisModel, polar, tickAngles, minorTickAngles, radiusExtent) {\n    if (!minorTickAngles.length) {\n      return;\n    }\n    var tickModel = angleAxisModel.getModel('axisTick');\n    var minorTickModel = angleAxisModel.getModel('minorTick');\n    var tickLen = (tickModel.get('inside') ? -1 : 1) * minorTickModel.get('length');\n    var radius = radiusExtent[getRadiusIdx(polar)];\n    var lines = [];\n    for (var i = 0; i < minorTickAngles.length; i++) {\n      for (var k = 0; k < minorTickAngles[i].length; k++) {\n        lines.push(new graphic.Line({\n          shape: getAxisLineShape(polar, [radius, radius + tickLen], minorTickAngles[i][k].coord)\n        }));\n      }\n    }\n    group.add(graphic.mergePath(lines, {\n      style: zrUtil.defaults(minorTickModel.getModel('lineStyle').getLineStyle(), zrUtil.defaults(tickModel.getLineStyle(), {\n        stroke: angleAxisModel.get(['axisLine', 'lineStyle', 'color'])\n      }))\n    }));\n  },\n  axisLabel: function axisLabel(group, angleAxisModel, polar, ticksAngles, minorTickAngles, radiusExtent, labels) {\n    var rawCategoryData = angleAxisModel.getCategories(true);\n    var commonLabelModel = angleAxisModel.getModel('axisLabel');\n    var labelMargin = commonLabelModel.get('margin');\n    var triggerEvent = angleAxisModel.get('triggerEvent'); // Use length of ticksAngles because it may remove the last tick to avoid overlapping\n\n    zrUtil.each(labels, function (labelItem, idx) {\n      var labelModel = commonLabelModel;\n      var tickValue = labelItem.tickValue;\n      var r = radiusExtent[getRadiusIdx(polar)];\n      var p = polar.coordToPoint([r + labelMargin, labelItem.coord]);\n      var cx = polar.cx;\n      var cy = polar.cy;\n      var labelTextAlign = Math.abs(p[0] - cx) / r < 0.3 ? 'center' : p[0] > cx ? 'left' : 'right';\n      var labelTextVerticalAlign = Math.abs(p[1] - cy) / r < 0.3 ? 'middle' : p[1] > cy ? 'top' : 'bottom';\n      if (rawCategoryData && rawCategoryData[tickValue]) {\n        var rawCategoryItem = rawCategoryData[tickValue];\n        if (zrUtil.isObject(rawCategoryItem) && rawCategoryItem.textStyle) {\n          labelModel = new Model(rawCategoryItem.textStyle, commonLabelModel, commonLabelModel.ecModel);\n        }\n      }\n      var textEl = new graphic.Text({\n        silent: AxisBuilder.isLabelSilent(angleAxisModel),\n        style: createTextStyle(labelModel, {\n          x: p[0],\n          y: p[1],\n          fill: labelModel.getTextColor() || angleAxisModel.get(['axisLine', 'lineStyle', 'color']),\n          text: labelItem.formattedLabel,\n          align: labelTextAlign,\n          verticalAlign: labelTextVerticalAlign\n        })\n      });\n      group.add(textEl); // Pack data for mouse event\n\n      if (triggerEvent) {\n        var eventData = AxisBuilder.makeAxisEventDataBase(angleAxisModel);\n        eventData.targetType = 'axisLabel';\n        eventData.value = labelItem.rawLabel;\n        getECData(textEl).eventData = eventData;\n      }\n    }, this);\n  },\n  splitLine: function splitLine(group, angleAxisModel, polar, ticksAngles, minorTickAngles, radiusExtent) {\n    var splitLineModel = angleAxisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineCount = 0;\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var splitLines = [];\n    for (var i = 0; i < ticksAngles.length; i++) {\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Line({\n        shape: getAxisLineShape(polar, radiusExtent, ticksAngles[i].coord)\n      }));\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n    for (var i = 0; i < splitLines.length; i++) {\n      group.add(graphic.mergePath(splitLines[i], {\n        style: zrUtil.defaults({\n          stroke: lineColors[i % lineColors.length]\n        }, lineStyleModel.getLineStyle()),\n        silent: true,\n        z: angleAxisModel.get('z')\n      }));\n    }\n  },\n  minorSplitLine: function minorSplitLine(group, angleAxisModel, polar, ticksAngles, minorTickAngles, radiusExtent) {\n    if (!minorTickAngles.length) {\n      return;\n    }\n    var minorSplitLineModel = angleAxisModel.getModel('minorSplitLine');\n    var lineStyleModel = minorSplitLineModel.getModel('lineStyle');\n    var lines = [];\n    for (var i = 0; i < minorTickAngles.length; i++) {\n      for (var k = 0; k < minorTickAngles[i].length; k++) {\n        lines.push(new graphic.Line({\n          shape: getAxisLineShape(polar, radiusExtent, minorTickAngles[i][k].coord)\n        }));\n      }\n    }\n    group.add(graphic.mergePath(lines, {\n      style: lineStyleModel.getLineStyle(),\n      silent: true,\n      z: angleAxisModel.get('z')\n    }));\n  },\n  splitArea: function splitArea(group, angleAxisModel, polar, ticksAngles, minorTickAngles, radiusExtent) {\n    if (!ticksAngles.length) {\n      return;\n    }\n    var splitAreaModel = angleAxisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var lineCount = 0;\n    areaColors = areaColors instanceof Array ? areaColors : [areaColors];\n    var splitAreas = [];\n    var RADIAN = Math.PI / 180;\n    var prevAngle = -ticksAngles[0].coord * RADIAN;\n    var r0 = Math.min(radiusExtent[0], radiusExtent[1]);\n    var r1 = Math.max(radiusExtent[0], radiusExtent[1]);\n    var clockwise = angleAxisModel.get('clockwise');\n    for (var i = 1, len = ticksAngles.length; i <= len; i++) {\n      var coord = i === len ? ticksAngles[0].coord : ticksAngles[i].coord;\n      var colorIndex = lineCount++ % areaColors.length;\n      splitAreas[colorIndex] = splitAreas[colorIndex] || [];\n      splitAreas[colorIndex].push(new graphic.Sector({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r0: r0,\n          r: r1,\n          startAngle: prevAngle,\n          endAngle: -coord * RADIAN,\n          clockwise: clockwise\n        },\n        silent: true\n      }));\n      prevAngle = -coord * RADIAN;\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n    for (var i = 0; i < splitAreas.length; i++) {\n      group.add(graphic.mergePath(splitAreas[i], {\n        style: zrUtil.defaults({\n          fill: areaColors[i % areaColors.length]\n        }, areaStyleModel.getAreaStyle()),\n        silent: true\n      }));\n    }\n  }\n};\nexport default AngleAxisView;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { retrieve, defaults, extend, each, isObject, map, isString, isNumber, isFunction } from 'zrender/lib/core/util.js';\nimport * as graphic from '../../util/graphic.js';\nimport { getECData } from '../../util/innerStore.js';\nimport { createTextStyle } from '../../label/labelStyle.js';\nimport Model from '../../model/Model.js';\nimport { isRadianAroundZero, remRadian } from '../../util/number.js';\nimport { createSymbol, normalizeSymbolOffset } from '../../util/symbol.js';\nimport * as matrixUtil from 'zrender/lib/core/matrix.js';\nimport { applyTransform as v2ApplyTransform } from 'zrender/lib/core/vector.js';\nimport { shouldShowAllLabels } from '../../coord/axisHelper.js';\nimport { prepareLayoutList, hideOverlap } from '../../label/labelLayoutHelper.js';\nvar PI = Math.PI;\n/**\n * A final axis is translated and rotated from a \"standard axis\".\n * So opt.position and opt.rotation is required.\n *\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n * for example: (0, 0) ------------> (0, 50)\n *\n * nameDirection or tickDirection or labelDirection is 1 means tick\n * or label is below the standard axis, whereas is -1 means above\n * the standard axis. labelOffset means offset between label and axis,\n * which is useful when 'onZero', where axisLabel is in the grid and\n * label in outside grid.\n *\n * Tips: like always,\n * positive rotation represents anticlockwise, and negative rotation\n * represents clockwise.\n * The direction of position coordinate is the same as the direction\n * of screen coordinate.\n *\n * Do not need to consider axis 'inverse', which is auto processed by\n * axis extent.\n */\n\nvar AxisBuilder =\n/** @class */\nfunction () {\n  function AxisBuilder(axisModel, opt) {\n    this.group = new graphic.Group();\n    this.opt = opt;\n    this.axisModel = axisModel; // Default value\n\n    defaults(opt, {\n      labelOffset: 0,\n      nameDirection: 1,\n      tickDirection: 1,\n      labelDirection: 1,\n      silent: true,\n      handleAutoShown: function () {\n        return true;\n      }\n    }); // FIXME Not use a separate text group?\n\n    var transformGroup = new graphic.Group({\n      x: opt.position[0],\n      y: opt.position[1],\n      rotation: opt.rotation\n    }); // this.group.add(transformGroup);\n    // this._transformGroup = transformGroup;\n\n    transformGroup.updateTransform();\n    this._transformGroup = transformGroup;\n  }\n\n  AxisBuilder.prototype.hasBuilder = function (name) {\n    return !!builders[name];\n  };\n\n  AxisBuilder.prototype.add = function (name) {\n    builders[name](this.opt, this.axisModel, this.group, this._transformGroup);\n  };\n\n  AxisBuilder.prototype.getGroup = function () {\n    return this.group;\n  };\n\n  AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n    var rotationDiff = remRadian(textRotation - axisRotation);\n    var textAlign;\n    var textVerticalAlign;\n\n    if (isRadianAroundZero(rotationDiff)) {\n      // Label is parallel with axis line.\n      textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n      textAlign = 'center';\n    } else if (isRadianAroundZero(rotationDiff - PI)) {\n      // Label is inverse parallel with axis line.\n      textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n      textAlign = 'center';\n    } else {\n      textVerticalAlign = 'middle';\n\n      if (rotationDiff > 0 && rotationDiff < PI) {\n        textAlign = direction > 0 ? 'right' : 'left';\n      } else {\n        textAlign = direction > 0 ? 'left' : 'right';\n      }\n    }\n\n    return {\n      rotation: rotationDiff,\n      textAlign: textAlign,\n      textVerticalAlign: textVerticalAlign\n    };\n  };\n\n  AxisBuilder.makeAxisEventDataBase = function (axisModel) {\n    var eventData = {\n      componentType: axisModel.mainType,\n      componentIndex: axisModel.componentIndex\n    };\n    eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n    return eventData;\n  };\n\n  AxisBuilder.isLabelSilent = function (axisModel) {\n    var tooltipOpt = axisModel.get('tooltip');\n    return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\n    || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\n  };\n\n  return AxisBuilder;\n}();\n\n;\nvar builders = {\n  axisLine: function (opt, axisModel, group, transformGroup) {\n    var shown = axisModel.get(['axisLine', 'show']);\n\n    if (shown === 'auto' && opt.handleAutoShown) {\n      shown = opt.handleAutoShown('axisLine');\n    }\n\n    if (!shown) {\n      return;\n    }\n\n    var extent = axisModel.axis.getExtent();\n    var matrix = transformGroup.transform;\n    var pt1 = [extent[0], 0];\n    var pt2 = [extent[1], 0];\n    var inverse = pt1[0] > pt2[0];\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    }\n\n    var lineStyle = extend({\n      lineCap: 'round'\n    }, axisModel.getModel(['axisLine', 'lineStyle']).getLineStyle());\n    var line = new graphic.Line({\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: lineStyle,\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\n      silent: true,\n      z2: 1\n    });\n    graphic.subPixelOptimizeLine(line.shape, line.style.lineWidth);\n    line.anid = 'line';\n    group.add(line);\n    var arrows = axisModel.get(['axisLine', 'symbol']);\n\n    if (arrows != null) {\n      var arrowSize = axisModel.get(['axisLine', 'symbolSize']);\n\n      if (isString(arrows)) {\n        // Use the same arrow for start and end point\n        arrows = [arrows, arrows];\n      }\n\n      if (isString(arrowSize) || isNumber(arrowSize)) {\n        // Use the same size for width and height\n        arrowSize = [arrowSize, arrowSize];\n      }\n\n      var arrowOffset = normalizeSymbolOffset(axisModel.get(['axisLine', 'symbolOffset']) || 0, arrowSize);\n      var symbolWidth_1 = arrowSize[0];\n      var symbolHeight_1 = arrowSize[1];\n      each([{\n        rotate: opt.rotation + Math.PI / 2,\n        offset: arrowOffset[0],\n        r: 0\n      }, {\n        rotate: opt.rotation - Math.PI / 2,\n        offset: arrowOffset[1],\n        r: Math.sqrt((pt1[0] - pt2[0]) * (pt1[0] - pt2[0]) + (pt1[1] - pt2[1]) * (pt1[1] - pt2[1]))\n      }], function (point, index) {\n        if (arrows[index] !== 'none' && arrows[index] != null) {\n          var symbol = createSymbol(arrows[index], -symbolWidth_1 / 2, -symbolHeight_1 / 2, symbolWidth_1, symbolHeight_1, lineStyle.stroke, true); // Calculate arrow position with offset\n\n          var r = point.r + point.offset;\n          var pt = inverse ? pt2 : pt1;\n          symbol.attr({\n            rotation: point.rotate,\n            x: pt[0] + r * Math.cos(opt.rotation),\n            y: pt[1] - r * Math.sin(opt.rotation),\n            silent: true,\n            z2: 11\n          });\n          group.add(symbol);\n        }\n      });\n    }\n  },\n  axisTickLabel: function (opt, axisModel, group, transformGroup) {\n    var ticksEls = buildAxisMajorTicks(group, transformGroup, axisModel, opt);\n    var labelEls = buildAxisLabel(group, transformGroup, axisModel, opt);\n    fixMinMaxLabelShow(axisModel, labelEls, ticksEls);\n    buildAxisMinorTicks(group, transformGroup, axisModel, opt.tickDirection); // This bit fixes the label overlap issue for the time chart.\n    // See https://github.com/apache/echarts/issues/14266 for more.\n\n    if (axisModel.get(['axisLabel', 'hideOverlap'])) {\n      var labelList = prepareLayoutList(map(labelEls, function (label) {\n        return {\n          label: label,\n          priority: label.z2,\n          defaultAttr: {\n            ignore: label.ignore\n          }\n        };\n      }));\n      hideOverlap(labelList);\n    }\n  },\n  axisName: function (opt, axisModel, group, transformGroup) {\n    var name = retrieve(opt.axisName, axisModel.get('name'));\n\n    if (!name) {\n      return;\n    }\n\n    var nameLocation = axisModel.get('nameLocation');\n    var nameDirection = opt.nameDirection;\n    var textStyleModel = axisModel.getModel('nameTextStyle');\n    var gap = axisModel.get('nameGap') || 0;\n    var extent = axisModel.axis.getExtent();\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // Reuse labelOffset.\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\n    var labelLayout;\n    var nameRotation = axisModel.get('nameRotate');\n\n    if (nameRotation != null) {\n      nameRotation = nameRotation * PI / 180; // To radian.\n    }\n\n    var axisNameAvailableWidth;\n\n    if (isNameLocationCenter(nameLocation)) {\n      labelLayout = AxisBuilder.innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n      nameDirection);\n    } else {\n      labelLayout = endTextLayout(opt.rotation, nameLocation, nameRotation || 0, extent);\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\n\n      if (axisNameAvailableWidth != null) {\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n      }\n    }\n\n    var textFont = textStyleModel.getFont();\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\n    var ellipsis = truncateOpt.ellipsis;\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth);\n    var textEl = new graphic.Text({\n      x: pos[0],\n      y: pos[1],\n      rotation: labelLayout.rotation,\n      silent: AxisBuilder.isLabelSilent(axisModel),\n      style: createTextStyle(textStyleModel, {\n        text: name,\n        font: textFont,\n        overflow: 'truncate',\n        width: maxWidth,\n        ellipsis: ellipsis,\n        fill: textStyleModel.getTextColor() || axisModel.get(['axisLine', 'lineStyle', 'color']),\n        align: textStyleModel.get('align') || labelLayout.textAlign,\n        verticalAlign: textStyleModel.get('verticalAlign') || labelLayout.textVerticalAlign\n      }),\n      z2: 1\n    });\n    graphic.setTooltipConfig({\n      el: textEl,\n      componentModel: axisModel,\n      itemName: name\n    });\n    textEl.__fullText = name; // Id for animation\n\n    textEl.anid = 'name';\n\n    if (axisModel.get('triggerEvent')) {\n      var eventData = AxisBuilder.makeAxisEventDataBase(axisModel);\n      eventData.targetType = 'axisName';\n      eventData.name = name;\n      getECData(textEl).eventData = eventData;\n    } // FIXME\n\n\n    transformGroup.add(textEl);\n    textEl.updateTransform();\n    group.add(textEl);\n    textEl.decomposeTransform();\n  }\n};\n\nfunction endTextLayout(rotation, textPosition, textRotate, extent) {\n  var rotationDiff = remRadian(textRotate - rotation);\n  var textAlign;\n  var textVerticalAlign;\n  var inverse = extent[0] > extent[1];\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\n\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n      textAlign = onLeft ? 'left' : 'right';\n    } else {\n      textAlign = onLeft ? 'right' : 'left';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n  if (shouldShowAllLabels(axisModel.axis)) {\n    return;\n  } // If min or max are user set, we need to check\n  // If the tick on min(max) are overlap on their neighbour tick\n  // If they are overlapped, we need to hide the min(max) tick label\n\n\n  var showMinLabel = axisModel.get(['axisLabel', 'showMinLabel']);\n  var showMaxLabel = axisModel.get(['axisLabel', 'showMaxLabel']); // FIXME\n  // Have not consider onBand yet, where tick els is more than label els.\n\n  labelEls = labelEls || [];\n  tickEls = tickEls || [];\n  var firstLabel = labelEls[0];\n  var nextLabel = labelEls[1];\n  var lastLabel = labelEls[labelEls.length - 1];\n  var prevLabel = labelEls[labelEls.length - 2];\n  var firstTick = tickEls[0];\n  var nextTick = tickEls[1];\n  var lastTick = tickEls[tickEls.length - 1];\n  var prevTick = tickEls[tickEls.length - 2];\n\n  if (showMinLabel === false) {\n    ignoreEl(firstLabel);\n    ignoreEl(firstTick);\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n    if (showMinLabel) {\n      ignoreEl(nextLabel);\n      ignoreEl(nextTick);\n    } else {\n      ignoreEl(firstLabel);\n      ignoreEl(firstTick);\n    }\n  }\n\n  if (showMaxLabel === false) {\n    ignoreEl(lastLabel);\n    ignoreEl(lastTick);\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n    if (showMaxLabel) {\n      ignoreEl(prevLabel);\n      ignoreEl(prevTick);\n    } else {\n      ignoreEl(lastLabel);\n      ignoreEl(lastTick);\n    }\n  }\n}\n\nfunction ignoreEl(el) {\n  el && (el.ignore = true);\n}\n\nfunction isTwoLabelOverlapped(current, next) {\n  // current and next has the same rotation.\n  var firstRect = current && current.getBoundingRect().clone();\n  var nextRect = next && next.getBoundingRect().clone();\n\n  if (!firstRect || !nextRect) {\n    return;\n  } // When checking intersect of two rotated labels, we use mRotationBack\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n\n\n  var mRotationBack = matrixUtil.identity([]);\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\n  return firstRect.intersect(nextRect);\n}\n\nfunction isNameLocationCenter(nameLocation) {\n  return nameLocation === 'middle' || nameLocation === 'center';\n}\n\nfunction createTicks(ticksCoords, tickTransform, tickEndCoord, tickLineStyle, anidPrefix) {\n  var tickEls = [];\n  var pt1 = [];\n  var pt2 = [];\n\n  for (var i = 0; i < ticksCoords.length; i++) {\n    var tickCoord = ticksCoords[i].coord;\n    pt1[0] = tickCoord;\n    pt1[1] = 0;\n    pt2[0] = tickCoord;\n    pt2[1] = tickEndCoord;\n\n    if (tickTransform) {\n      v2ApplyTransform(pt1, pt1, tickTransform);\n      v2ApplyTransform(pt2, pt2, tickTransform);\n    } // Tick line, Not use group transform to have better line draw\n\n\n    var tickEl = new graphic.Line({\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: tickLineStyle,\n      z2: 2,\n      autoBatch: true,\n      silent: true\n    });\n    graphic.subPixelOptimizeLine(tickEl.shape, tickEl.style.lineWidth);\n    tickEl.anid = anidPrefix + '_' + ticksCoords[i].tickValue;\n    tickEls.push(tickEl);\n  }\n\n  return tickEls;\n}\n\nfunction buildAxisMajorTicks(group, transformGroup, axisModel, opt) {\n  var axis = axisModel.axis;\n  var tickModel = axisModel.getModel('axisTick');\n  var shown = tickModel.get('show');\n\n  if (shown === 'auto' && opt.handleAutoShown) {\n    shown = opt.handleAutoShown('axisTick');\n  }\n\n  if (!shown || axis.scale.isBlank()) {\n    return;\n  }\n\n  var lineStyleModel = tickModel.getModel('lineStyle');\n  var tickEndCoord = opt.tickDirection * tickModel.get('length');\n  var ticksCoords = axis.getTicksCoords();\n  var ticksEls = createTicks(ticksCoords, transformGroup.transform, tickEndCoord, defaults(lineStyleModel.getLineStyle(), {\n    stroke: axisModel.get(['axisLine', 'lineStyle', 'color'])\n  }), 'ticks');\n\n  for (var i = 0; i < ticksEls.length; i++) {\n    group.add(ticksEls[i]);\n  }\n\n  return ticksEls;\n}\n\nfunction buildAxisMinorTicks(group, transformGroup, axisModel, tickDirection) {\n  var axis = axisModel.axis;\n  var minorTickModel = axisModel.getModel('minorTick');\n\n  if (!minorTickModel.get('show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var minorTicksCoords = axis.getMinorTicksCoords();\n\n  if (!minorTicksCoords.length) {\n    return;\n  }\n\n  var lineStyleModel = minorTickModel.getModel('lineStyle');\n  var tickEndCoord = tickDirection * minorTickModel.get('length');\n  var minorTickLineStyle = defaults(lineStyleModel.getLineStyle(), defaults(axisModel.getModel('axisTick').getLineStyle(), {\n    stroke: axisModel.get(['axisLine', 'lineStyle', 'color'])\n  }));\n\n  for (var i = 0; i < minorTicksCoords.length; i++) {\n    var minorTicksEls = createTicks(minorTicksCoords[i], transformGroup.transform, tickEndCoord, minorTickLineStyle, 'minorticks_' + i);\n\n    for (var k = 0; k < minorTicksEls.length; k++) {\n      group.add(minorTicksEls[k]);\n    }\n  }\n}\n\nfunction buildAxisLabel(group, transformGroup, axisModel, opt) {\n  var axis = axisModel.axis;\n  var show = retrieve(opt.axisLabelShow, axisModel.get(['axisLabel', 'show']));\n\n  if (!show || axis.scale.isBlank()) {\n    return;\n  }\n\n  var labelModel = axisModel.getModel('axisLabel');\n  var labelMargin = labelModel.get('margin');\n  var labels = axis.getViewLabels(); // Special label rotate.\n\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\n  var labelLayout = AxisBuilder.innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n  var rawCategoryData = axisModel.getCategories && axisModel.getCategories(true);\n  var labelEls = [];\n  var silent = AxisBuilder.isLabelSilent(axisModel);\n  var triggerEvent = axisModel.get('triggerEvent');\n  each(labels, function (labelItem, index) {\n    var tickValue = axis.scale.type === 'ordinal' ? axis.scale.getRawOrdinalNumber(labelItem.tickValue) : labelItem.tickValue;\n    var formattedLabel = labelItem.formattedLabel;\n    var rawLabel = labelItem.rawLabel;\n    var itemLabelModel = labelModel;\n\n    if (rawCategoryData && rawCategoryData[tickValue]) {\n      var rawCategoryItem = rawCategoryData[tickValue];\n\n      if (isObject(rawCategoryItem) && rawCategoryItem.textStyle) {\n        itemLabelModel = new Model(rawCategoryItem.textStyle, labelModel, axisModel.ecModel);\n      }\n    }\n\n    var textColor = itemLabelModel.getTextColor() || axisModel.get(['axisLine', 'lineStyle', 'color']);\n    var tickCoord = axis.dataToCoord(tickValue);\n    var textEl = new graphic.Text({\n      x: tickCoord,\n      y: opt.labelOffset + opt.labelDirection * labelMargin,\n      rotation: labelLayout.rotation,\n      silent: silent,\n      z2: 10 + (labelItem.level || 0),\n      style: createTextStyle(itemLabelModel, {\n        text: formattedLabel,\n        align: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\n        verticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\n        fill: isFunction(textColor) ? textColor( // (1) In category axis with data zoom, tick is not the original\n        // index of axis.data. So tick should not be exposed to user\n        // in category axis.\n        // (2) Compatible with previous version, which always use formatted label as\n        // input. But in interval scale the formatted label is like '223,445', which\n        // maked user replace ','. So we modify it to return original val but remain\n        // it as 'string' to avoid error in replacing.\n        axis.type === 'category' ? rawLabel : axis.type === 'value' ? tickValue + '' : tickValue, index) : textColor\n      })\n    });\n    textEl.anid = 'label_' + tickValue; // Pack data for mouse event\n\n    if (triggerEvent) {\n      var eventData = AxisBuilder.makeAxisEventDataBase(axisModel);\n      eventData.targetType = 'axisLabel';\n      eventData.value = rawLabel;\n      eventData.tickIndex = index;\n\n      if (axis.type === 'category') {\n        eventData.dataIndex = tickValue;\n      }\n\n      getECData(textEl).eventData = eventData;\n    } // FIXME\n\n\n    transformGroup.add(textEl);\n    textEl.updateTransform();\n    labelEls.push(textEl);\n    group.add(textEl);\n    textEl.decomposeTransform();\n  });\n  return labelEls;\n}\n\nexport default AxisBuilder;","import \"core-js/modules/es.error.cause.js\";\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as axisPointerModelHelper from '../axisPointer/modelHelper.js';\nimport ComponentView from '../../view/Component.js';\nvar axisPointerClazz = {};\n/**\n * Base class of AxisView.\n */\n\nvar AxisView = /** @class */\nfunction (_super) {\n  __extends(AxisView, _super);\n  function AxisView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = AxisView.type;\n    return _this;\n  }\n  /**\n   * @override\n   */\n\n  AxisView.prototype.render = function (axisModel, ecModel, api, payload) {\n    // FIXME\n    // This process should proformed after coordinate systems updated\n    // (axis scale updated), and should be performed each time update.\n    // So put it here temporarily, although it is not appropriate to\n    // put a model-writing procedure in `view`.\n    this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n    _super.prototype.render.apply(this, arguments);\n    this._doUpdateAxisPointerClass(axisModel, api, true);\n  };\n  /**\n   * Action handler.\n   */\n\n  AxisView.prototype.updateAxisPointer = function (axisModel, ecModel, api, payload) {\n    this._doUpdateAxisPointerClass(axisModel, api, false);\n  };\n  /**\n   * @override\n   */\n\n  AxisView.prototype.remove = function (ecModel, api) {\n    var axisPointer = this._axisPointer;\n    axisPointer && axisPointer.remove(api);\n  };\n  /**\n   * @override\n   */\n\n  AxisView.prototype.dispose = function (ecModel, api) {\n    this._disposeAxisPointer(api);\n    _super.prototype.dispose.apply(this, arguments);\n  };\n  AxisView.prototype._doUpdateAxisPointerClass = function (axisModel, api, forceRender) {\n    var Clazz = AxisView.getAxisPointerClass(this.axisPointerClass);\n    if (!Clazz) {\n      return;\n    }\n    var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n    axisPointerModel ? (this._axisPointer || (this._axisPointer = new Clazz())).render(axisModel, axisPointerModel, api, forceRender) : this._disposeAxisPointer(api);\n  };\n  AxisView.prototype._disposeAxisPointer = function (api) {\n    this._axisPointer && this._axisPointer.dispose(api);\n    this._axisPointer = null;\n  };\n  AxisView.registerAxisPointerClass = function (type, clazz) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (axisPointerClazz[type]) {\n        throw new Error('axisPointer ' + type + ' exists');\n      }\n    }\n    axisPointerClazz[type] = clazz;\n  };\n  ;\n  AxisView.getAxisPointerClass = function (type) {\n    return type && axisPointerClazz[type];\n  };\n  ;\n  AxisView.type = 'axis';\n  return AxisView;\n}(ComponentView);\nexport default AxisView;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport * as graphic from '../../util/graphic.js';\nimport AxisBuilder from './AxisBuilder.js';\nimport AxisView from './AxisView.js';\nimport * as cartesianAxisHelper from '../../coord/cartesian/cartesianAxisHelper.js';\nimport { rectCoordAxisBuildSplitArea, rectCoordAxisHandleRemove } from './axisSplitHelper.js';\nimport { isIntervalOrLogScale } from '../../scale/helper.js';\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitArea', 'splitLine', 'minorSplitLine'];\nvar CartesianAxisView = /** @class */\nfunction (_super) {\n  __extends(CartesianAxisView, _super);\n  function CartesianAxisView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = CartesianAxisView.type;\n    _this.axisPointerClass = 'CartesianAxisPointer';\n    return _this;\n  }\n  /**\n   * @override\n   */\n\n  CartesianAxisView.prototype.render = function (axisModel, ecModel, api, payload) {\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n    if (!axisModel.get('show')) {\n      return;\n    }\n    var gridModel = axisModel.getCoordSysModel();\n    var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, zrUtil.extend({\n      handleAutoShown: function handleAutoShown(elementType) {\n        var cartesians = gridModel.coordinateSystem.getCartesians();\n        for (var i = 0; i < cartesians.length; i++) {\n          if (isIntervalOrLogScale(cartesians[i].getOtherAxis(axisModel.axis).scale)) {\n            // Still show axis tick or axisLine if other axis is value / log\n            return true;\n          }\n        } // Not show axisTick or axisLine if other axis is category / time\n\n        return false;\n      }\n    }, layout));\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n    this._axisGroup.add(axisBuilder.getGroup());\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (axisModel.get([name, 'show'])) {\n        axisElementBuilders[name](this, this._axisGroup, axisModel, gridModel);\n      }\n    }, this); // THIS is a special case for bar racing chart.\n    // Update the axis label from the natural initial layout to\n    // sorted layout should has no animation.\n\n    var isInitialSortFromBarRacing = payload && payload.type === 'changeAxisOrder' && payload.isInitSort;\n    if (!isInitialSortFromBarRacing) {\n      graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n    }\n    _super.prototype.render.call(this, axisModel, ecModel, api, payload);\n  };\n  CartesianAxisView.prototype.remove = function () {\n    rectCoordAxisHandleRemove(this);\n  };\n  CartesianAxisView.type = 'cartesianAxis';\n  return CartesianAxisView;\n}(AxisView);\nvar axisElementBuilders = {\n  splitLine: function splitLine(axisView, axisGroup, axisModel, gridModel) {\n    var axis = axisModel.axis;\n    if (axis.scale.isBlank()) {\n      return;\n    }\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords({\n      tickModel: splitLineModel\n    });\n    var p1 = [];\n    var p2 = [];\n    var lineStyle = lineStyleModel.getLineStyle();\n    for (var i = 0; i < ticksCoords.length; i++) {\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n      var colorIndex = lineCount++ % lineColors.length;\n      var tickValue = ticksCoords[i].tickValue;\n      var line = new graphic.Line({\n        anid: tickValue != null ? 'line_' + ticksCoords[i].tickValue : null,\n        autoBatch: true,\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: zrUtil.defaults({\n          stroke: lineColors[colorIndex]\n        }, lineStyle),\n        silent: true\n      });\n      graphic.subPixelOptimizeLine(line.shape, lineStyle.lineWidth);\n      axisGroup.add(line);\n    }\n  },\n  minorSplitLine: function minorSplitLine(axisView, axisGroup, axisModel, gridModel) {\n    var axis = axisModel.axis;\n    var minorSplitLineModel = axisModel.getModel('minorSplitLine');\n    var lineStyleModel = minorSplitLineModel.getModel('lineStyle');\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var minorTicksCoords = axis.getMinorTicksCoords();\n    if (!minorTicksCoords.length) {\n      return;\n    }\n    var p1 = [];\n    var p2 = [];\n    var lineStyle = lineStyleModel.getLineStyle();\n    for (var i = 0; i < minorTicksCoords.length; i++) {\n      for (var k = 0; k < minorTicksCoords[i].length; k++) {\n        var tickCoord = axis.toGlobalCoord(minorTicksCoords[i][k].coord);\n        if (isHorizontal) {\n          p1[0] = tickCoord;\n          p1[1] = gridRect.y;\n          p2[0] = tickCoord;\n          p2[1] = gridRect.y + gridRect.height;\n        } else {\n          p1[0] = gridRect.x;\n          p1[1] = tickCoord;\n          p2[0] = gridRect.x + gridRect.width;\n          p2[1] = tickCoord;\n        }\n        var line = new graphic.Line({\n          anid: 'minor_line_' + minorTicksCoords[i][k].tickValue,\n          autoBatch: true,\n          shape: {\n            x1: p1[0],\n            y1: p1[1],\n            x2: p2[0],\n            y2: p2[1]\n          },\n          style: lineStyle,\n          silent: true\n        });\n        graphic.subPixelOptimizeLine(line.shape, lineStyle.lineWidth);\n        axisGroup.add(line);\n      }\n    }\n  },\n  splitArea: function splitArea(axisView, axisGroup, axisModel, gridModel) {\n    rectCoordAxisBuildSplitArea(axisView, axisGroup, axisModel, gridModel);\n  }\n};\nvar CartesianXAxisView = /** @class */\nfunction (_super) {\n  __extends(CartesianXAxisView, _super);\n  function CartesianXAxisView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = CartesianXAxisView.type;\n    return _this;\n  }\n  CartesianXAxisView.type = 'xAxis';\n  return CartesianXAxisView;\n}(CartesianAxisView);\nexport { CartesianXAxisView };\nvar CartesianYAxisView = /** @class */\nfunction (_super) {\n  __extends(CartesianYAxisView, _super);\n  function CartesianYAxisView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = CartesianXAxisView.type;\n    return _this;\n  }\n  CartesianYAxisView.type = 'yAxis';\n  return CartesianYAxisView;\n}(CartesianAxisView);\nexport { CartesianYAxisView };\nexport default CartesianAxisView;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport AxisBuilder from './AxisBuilder.js';\nimport BrushController from '../helper/BrushController.js';\nimport * as brushHelper from '../helper/brushHelper.js';\nimport * as graphic from '../../util/graphic.js';\nimport ComponentView from '../../view/Component.js';\nvar elementList = ['axisLine', 'axisTickLabel', 'axisName'];\nvar ParallelAxisView = /** @class */\nfunction (_super) {\n  __extends(ParallelAxisView, _super);\n  function ParallelAxisView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = ParallelAxisView.type;\n    return _this;\n  }\n  ParallelAxisView.prototype.init = function (ecModel, api) {\n    _super.prototype.init.apply(this, arguments);\n    (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this));\n  };\n  ParallelAxisView.prototype.render = function (axisModel, ecModel, api, payload) {\n    if (fromAxisAreaSelect(axisModel, ecModel, payload)) {\n      return;\n    }\n    this.axisModel = axisModel;\n    this.api = api;\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n    if (!axisModel.get('show')) {\n      return;\n    }\n    var coordSysModel = getCoordSysModel(axisModel, ecModel);\n    var coordSys = coordSysModel.coordinateSystem;\n    var areaSelectStyle = axisModel.getAreaSelectStyle();\n    var areaWidth = areaSelectStyle.width;\n    var dim = axisModel.axis.dim;\n    var axisLayout = coordSys.getAxisLayout(dim);\n    var builderOpt = zrUtil.extend({\n      strokeContainThreshold: areaWidth\n    }, axisLayout);\n    var axisBuilder = new AxisBuilder(axisModel, builderOpt);\n    zrUtil.each(elementList, axisBuilder.add, axisBuilder);\n    this._axisGroup.add(axisBuilder.getGroup());\n    this._refreshBrushController(builderOpt, areaSelectStyle, axisModel, coordSysModel, areaWidth, api);\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n  }; // /**\n  //  * @override\n  //  */\n  // updateVisual(axisModel, ecModel, api, payload) {\n  //     this._brushController && this._brushController\n  //         .updateCovers(getCoverInfoList(axisModel));\n  // }\n\n  ParallelAxisView.prototype._refreshBrushController = function (builderOpt, areaSelectStyle, axisModel, coordSysModel, areaWidth, api) {\n    // After filtering, axis may change, select area needs to be update.\n    var extent = axisModel.axis.getExtent();\n    var extentLen = extent[1] - extent[0];\n    var extra = Math.min(30, Math.abs(extentLen) * 0.1); // Arbitrary value.\n    // width/height might be negative, which will be\n    // normalized in BoundingRect.\n\n    var rect = graphic.BoundingRect.create({\n      x: extent[0],\n      y: -areaWidth / 2,\n      width: extentLen,\n      height: areaWidth\n    });\n    rect.x -= extra;\n    rect.width += 2 * extra;\n    this._brushController.mount({\n      enableGlobalPan: true,\n      rotation: builderOpt.rotation,\n      x: builderOpt.position[0],\n      y: builderOpt.position[1]\n    }).setPanels([{\n      panelId: 'pl',\n      clipPath: brushHelper.makeRectPanelClipPath(rect),\n      isTargetByCursor: brushHelper.makeRectIsTargetByCursor(rect, api, coordSysModel),\n      getLinearBrushOtherExtent: brushHelper.makeLinearBrushOtherExtent(rect, 0)\n    }]).enableBrush({\n      brushType: 'lineX',\n      brushStyle: areaSelectStyle,\n      removeOnClick: true\n    }).updateCovers(getCoverInfoList(axisModel));\n  };\n  ParallelAxisView.prototype._onBrush = function (eventParam) {\n    var coverInfoList = eventParam.areas; // Do not cache these object, because the mey be changed.\n\n    var axisModel = this.axisModel;\n    var axis = axisModel.axis;\n    var intervals = zrUtil.map(coverInfoList, function (coverInfo) {\n      return [axis.coordToData(coverInfo.range[0], true), axis.coordToData(coverInfo.range[1], true)];\n    }); // If realtime is true, action is not dispatched on drag end, because\n    // the drag end emits the same params with the last drag move event,\n    // and may have some delay when using touch pad.\n\n    if (!axisModel.option.realtime === eventParam.isEnd || eventParam.removeOnClick) {\n      // jshint ignore:line\n      this.api.dispatchAction({\n        type: 'axisAreaSelect',\n        parallelAxisId: axisModel.id,\n        intervals: intervals\n      });\n    }\n  };\n  ParallelAxisView.prototype.dispose = function () {\n    this._brushController.dispose();\n  };\n  ParallelAxisView.type = 'parallelAxis';\n  return ParallelAxisView;\n}(ComponentView);\nfunction fromAxisAreaSelect(axisModel, ecModel, payload) {\n  return payload && payload.type === 'axisAreaSelect' && ecModel.findComponents({\n    mainType: 'parallelAxis',\n    query: payload\n  })[0] === axisModel;\n}\nfunction getCoverInfoList(axisModel) {\n  var axis = axisModel.axis;\n  return zrUtil.map(axisModel.activeIntervals, function (interval) {\n    return {\n      brushType: 'lineX',\n      panelId: 'pl',\n      range: [axis.dataToCoord(interval[0], true), axis.dataToCoord(interval[1], true)]\n    };\n  });\n}\nfunction getCoordSysModel(axisModel, ecModel) {\n  return ecModel.getComponent('parallel', axisModel.get('parallelIndex'));\n}\nexport default ParallelAxisView;","import \"core-js/modules/es.array.push.js\";\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport * as graphic from '../../util/graphic.js';\nimport AxisBuilder from './AxisBuilder.js';\nimport AxisView from './AxisView.js';\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitLine', 'splitArea', 'minorSplitLine'];\nvar RadiusAxisView = /** @class */\nfunction (_super) {\n  __extends(RadiusAxisView, _super);\n  function RadiusAxisView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = RadiusAxisView.type;\n    _this.axisPointerClass = 'PolarAxisPointer';\n    return _this;\n  }\n  RadiusAxisView.prototype.render = function (radiusAxisModel, ecModel) {\n    this.group.removeAll();\n    if (!radiusAxisModel.get('show')) {\n      return;\n    }\n    var oldAxisGroup = this._axisGroup;\n    var newAxisGroup = this._axisGroup = new graphic.Group();\n    this.group.add(newAxisGroup);\n    var radiusAxis = radiusAxisModel.axis;\n    var polar = radiusAxis.polar;\n    var angleAxis = polar.getAngleAxis();\n    var ticksCoords = radiusAxis.getTicksCoords();\n    var minorTicksCoords = radiusAxis.getMinorTicksCoords();\n    var axisAngle = angleAxis.getExtent()[0];\n    var radiusExtent = radiusAxis.getExtent();\n    var layout = layoutAxis(polar, radiusAxisModel, axisAngle);\n    var axisBuilder = new AxisBuilder(radiusAxisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n    newAxisGroup.add(axisBuilder.getGroup());\n    graphic.groupTransition(oldAxisGroup, newAxisGroup, radiusAxisModel);\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (radiusAxisModel.get([name, 'show']) && !radiusAxis.scale.isBlank()) {\n        axisElementBuilders[name](this.group, radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords, minorTicksCoords);\n      }\n    }, this);\n  };\n  RadiusAxisView.type = 'radiusAxis';\n  return RadiusAxisView;\n}(AxisView);\nvar axisElementBuilders = {\n  splitLine: function splitLine(group, radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords) {\n    var splitLineModel = radiusAxisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineCount = 0;\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var splitLines = [];\n    for (var i = 0; i < ticksCoords.length; i++) {\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Circle({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          // ensure circle radius >= 0\n          r: Math.max(ticksCoords[i].coord, 0)\n        }\n      }));\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n    for (var i = 0; i < splitLines.length; i++) {\n      group.add(graphic.mergePath(splitLines[i], {\n        style: zrUtil.defaults({\n          stroke: lineColors[i % lineColors.length],\n          fill: null\n        }, lineStyleModel.getLineStyle()),\n        silent: true\n      }));\n    }\n  },\n  minorSplitLine: function minorSplitLine(group, radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords, minorTicksCoords) {\n    if (!minorTicksCoords.length) {\n      return;\n    }\n    var minorSplitLineModel = radiusAxisModel.getModel('minorSplitLine');\n    var lineStyleModel = minorSplitLineModel.getModel('lineStyle');\n    var lines = [];\n    for (var i = 0; i < minorTicksCoords.length; i++) {\n      for (var k = 0; k < minorTicksCoords[i].length; k++) {\n        lines.push(new graphic.Circle({\n          shape: {\n            cx: polar.cx,\n            cy: polar.cy,\n            r: minorTicksCoords[i][k].coord\n          }\n        }));\n      }\n    }\n    group.add(graphic.mergePath(lines, {\n      style: zrUtil.defaults({\n        fill: null\n      }, lineStyleModel.getLineStyle()),\n      silent: true\n    }));\n  },\n  splitArea: function splitArea(group, radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords) {\n    if (!ticksCoords.length) {\n      return;\n    }\n    var splitAreaModel = radiusAxisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var lineCount = 0;\n    areaColors = areaColors instanceof Array ? areaColors : [areaColors];\n    var splitAreas = [];\n    var prevRadius = ticksCoords[0].coord;\n    for (var i = 1; i < ticksCoords.length; i++) {\n      var colorIndex = lineCount++ % areaColors.length;\n      splitAreas[colorIndex] = splitAreas[colorIndex] || [];\n      splitAreas[colorIndex].push(new graphic.Sector({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r0: prevRadius,\n          r: ticksCoords[i].coord,\n          startAngle: 0,\n          endAngle: Math.PI * 2\n        },\n        silent: true\n      }));\n      prevRadius = ticksCoords[i].coord;\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n    for (var i = 0; i < splitAreas.length; i++) {\n      group.add(graphic.mergePath(splitAreas[i], {\n        style: zrUtil.defaults({\n          fill: areaColors[i % areaColors.length]\n        }, areaStyleModel.getAreaStyle()),\n        silent: true\n      }));\n    }\n  }\n};\n/**\n * @inner\n */\n\nfunction layoutAxis(polar, radiusAxisModel, axisAngle) {\n  return {\n    position: [polar.cx, polar.cy],\n    rotation: axisAngle / 180 * Math.PI,\n    labelDirection: -1,\n    tickDirection: -1,\n    nameDirection: 1,\n    labelRotate: radiusAxisModel.getModel('axisLabel').get('rotate'),\n    // Over splitLine and splitArea\n    z2: 1\n  };\n}\nexport default RadiusAxisView;","import \"core-js/modules/es.array.push.js\";\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport AxisBuilder from './AxisBuilder.js';\nimport * as graphic from '../../util/graphic.js';\nimport * as singleAxisHelper from '../../coord/single/singleAxisHelper.js';\nimport AxisView from './AxisView.js';\nimport { rectCoordAxisBuildSplitArea, rectCoordAxisHandleRemove } from './axisSplitHelper.js';\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitArea', 'splitLine'];\nvar SingleAxisView = /** @class */\nfunction (_super) {\n  __extends(SingleAxisView, _super);\n  function SingleAxisView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = SingleAxisView.type;\n    _this.axisPointerClass = 'SingleAxisPointer';\n    return _this;\n  }\n  SingleAxisView.prototype.render = function (axisModel, ecModel, api, payload) {\n    var group = this.group;\n    group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    var layout = singleAxisHelper.layout(axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n    group.add(this._axisGroup);\n    group.add(axisBuilder.getGroup());\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (axisModel.get([name, 'show'])) {\n        axisElementBuilders[name](this, this.group, this._axisGroup, axisModel);\n      }\n    }, this);\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n    _super.prototype.render.call(this, axisModel, ecModel, api, payload);\n  };\n  SingleAxisView.prototype.remove = function () {\n    rectCoordAxisHandleRemove(this);\n  };\n  SingleAxisView.type = 'singleAxis';\n  return SingleAxisView;\n}(AxisView);\nvar axisElementBuilders = {\n  splitLine: function splitLine(axisView, group, axisGroup, axisModel) {\n    var axis = axisModel.axis;\n    if (axis.scale.isBlank()) {\n      return;\n    }\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var lineWidth = lineStyleModel.get('width');\n    var gridRect = axisModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var splitLines = [];\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords({\n      tickModel: splitLineModel\n    });\n    var p1 = [];\n    var p2 = [];\n    for (var i = 0; i < ticksCoords.length; ++i) {\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n      var line = new graphic.Line({\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        silent: true\n      });\n      graphic.subPixelOptimizeLine(line.shape, lineWidth);\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(line);\n    }\n    var lineStyle = lineStyleModel.getLineStyle(['color']);\n    for (var i = 0; i < splitLines.length; ++i) {\n      group.add(graphic.mergePath(splitLines[i], {\n        style: zrUtil.defaults({\n          stroke: lineColors[i % lineColors.length]\n        }, lineStyle),\n        silent: true\n      }));\n    }\n  },\n  splitArea: function splitArea(axisView, group, axisGroup, axisModel) {\n    rectCoordAxisBuildSplitArea(axisView, axisGroup, axisModel, axisModel);\n  }\n};\nexport default SingleAxisView;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport * as graphic from '../../util/graphic.js';\nimport { makeInner } from '../../util/model.js';\nvar inner = makeInner();\nexport function rectCoordAxisBuildSplitArea(axisView, axisGroup, axisModel, gridModel) {\n  var axis = axisModel.axis;\n\n  if (axis.scale.isBlank()) {\n    return;\n  } // TODO: TYPE\n\n\n  var splitAreaModel = axisModel.getModel('splitArea');\n  var areaStyleModel = splitAreaModel.getModel('areaStyle');\n  var areaColors = areaStyleModel.get('color');\n  var gridRect = gridModel.coordinateSystem.getRect();\n  var ticksCoords = axis.getTicksCoords({\n    tickModel: splitAreaModel,\n    clamp: true\n  });\n\n  if (!ticksCoords.length) {\n    return;\n  } // For Making appropriate splitArea animation, the color and anid\n  // should be corresponding to previous one if possible.\n\n\n  var areaColorsLen = areaColors.length;\n  var lastSplitAreaColors = inner(axisView).splitAreaColors;\n  var newSplitAreaColors = zrUtil.createHashMap();\n  var colorIndex = 0;\n\n  if (lastSplitAreaColors) {\n    for (var i = 0; i < ticksCoords.length; i++) {\n      var cIndex = lastSplitAreaColors.get(ticksCoords[i].tickValue);\n\n      if (cIndex != null) {\n        colorIndex = (cIndex + (areaColorsLen - 1) * i) % areaColorsLen;\n        break;\n      }\n    }\n  }\n\n  var prev = axis.toGlobalCoord(ticksCoords[0].coord);\n  var areaStyle = areaStyleModel.getAreaStyle();\n  areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n\n  for (var i = 1; i < ticksCoords.length; i++) {\n    var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\n    var x = void 0;\n    var y = void 0;\n    var width = void 0;\n    var height = void 0;\n\n    if (axis.isHorizontal()) {\n      x = prev;\n      y = gridRect.y;\n      width = tickCoord - x;\n      height = gridRect.height;\n      prev = x + width;\n    } else {\n      x = gridRect.x;\n      y = prev;\n      width = gridRect.width;\n      height = tickCoord - y;\n      prev = y + height;\n    }\n\n    var tickValue = ticksCoords[i - 1].tickValue;\n    tickValue != null && newSplitAreaColors.set(tickValue, colorIndex);\n    axisGroup.add(new graphic.Rect({\n      anid: tickValue != null ? 'area_' + tickValue : null,\n      shape: {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      },\n      style: zrUtil.defaults({\n        fill: areaColors[colorIndex]\n      }, areaStyle),\n      autoBatch: true,\n      silent: true\n    }));\n    colorIndex = (colorIndex + 1) % areaColorsLen;\n  }\n\n  inner(axisView).splitAreaColors = newSplitAreaColors;\n}\nexport function rectCoordAxisHandleRemove(axisView) {\n  inner(axisView).splitAreaColors = null;\n}","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar actionInfo = {\n  type: 'axisAreaSelect',\n  event: 'axisAreaSelected' // update: 'updateVisual'\n};\n\nexport function installParallelActions(registers) {\n  registers.registerAction(actionInfo, function (payload, ecModel) {\n    ecModel.eachComponent({\n      mainType: 'parallelAxis',\n      query: payload\n    }, function (parallelAxisModel) {\n      parallelAxisModel.axis.model.setActiveIntervals(payload.intervals);\n    });\n  });\n  /**\n   * @payload\n   */\n\n  registers.registerAction('parallelAxisExpand', function (payload, ecModel) {\n    ecModel.eachComponent({\n      mainType: 'parallel',\n      query: payload\n    }, function (parallelModel) {\n      parallelModel.setAxisExpand(payload);\n    });\n  });\n}"],"names":["ariaPreprocessor","option","aria","show","enabled","label","name","install","registers","registerPreprocessor","registerVisual","PRIORITY","VISUAL","ARIA","inner","makeInner","clone","zrUtil","bind","BaseAxisPointer","this","_dragging","animationThreshold","prototype","render","axisModel","axisPointerModel","api","forceRender","value","get","status","_axisModel","_axisPointerModel","_api","_lastValue","_lastStatus","group","_group","handle","_handle","hide","elOption","makeElOption","graphicKey","_lastGraphicKey","clear","moveAnimation","_moveAnimation","determineAnimation","doUpdateProps","updateProps","updatePointerEl","updateLabelEl","graphic","createPointerEl","createLabelEl","getZr","add","updateMandatoryProps","_renderHandle","remove","dispose","animation","axis","isCategoryAxis","type","useSnap","getBandWidth","seriesDataCount","axisPointerModelHelper","axisExtent","getExtent","Math","abs","pointerOption","pointer","pointerEl","labelEl","updateLabelShowHide","setStyle","style","shape","x","y","updateHandleTransform","isInit","zr","handleModel","getModel","cursor","draggable","onmousemove","e","eventTool","event","onmousedown","_onHandleDragMove","drift","ondragend","_onHandleDragEnd","getItemStyle","handleSize","scaleX","scaleY","throttleUtil","_moveHandleToValue","getHandleTransProps","getHandleTransform","dx","dy","trans","_payloadInfo","stopAnimation","attr","lastProp","_doDispatchAxisPointer","payloadInfo","dispatchAction","cursorPoint","tooltipOption","axesInfo","axisDim","dim","axisIndex","componentIndex","doClear","buildLabel","xy","wh","xDimIndex","width","height","animationModel","el","props","propsEqual","lastProps","newProps","equals_1","item","key","rotation","silent","z","zlevel","traverse","PolarAxisPointer","_super","apply","arguments","PI","polar","otherAxis","getOtherAxis","otherExtent","coordValue","dataToCoord","axisPointerType","elStyle","pointerShapeBuilder","labelMargin","labelPos","getLabelPosition","coord","axisAngle","getAngleAxis","position","align","verticalAlign","radiusExtent","getRadiusAxis","transform","cx","cy","labelRotation","labelLayout","textAlign","textVerticalAlign","r","coordToPoint","line","shadow","bandWidth","max","radian","XY","WH","SingleAxisPointer","coordSys","coordinateSystem","getGlobalExtent","getPointDimIndex","pixelValue","dataToPoint","layoutInfo","labelInside","labelDirection","delta","dimIndex","currPosition","min","cursorOtherValue","targetShape","subPixelOptimize","span","isHorizontal","rect","getRect","findPointFromSeries","finder","ecModel","seriesModel","point","seriesIndex","getSeriesByIndex","data","getData","dataIndex","modelUtil","getItemGraphicEl","getTooltipPosition","isStacked","baseAxis","getBaseAxis","valueAxis","valueAxisDim","baseAxisDim","baseDataOffset","baseDim","mapDimension","stackedData","getCalculationInfo","getValues","dimensions","getBoundingRect","applyTransform","each","register","handler","env","records","initGlobalListeners","record","useHandler","eventType","cb","on","dis","makeDispatchAction","dispatchTooltipFinally","pendings","initialized","doEnter","onLeave","actuallyPayload","showLen","showTip","length","hideLen","hideTip","currTrigger","payload","pendingList","push","unregister","CartesianAxisPointer","grid","getCartesian","toGlobalCoord","viewHelper","cartesianAxisHelper","model","pos","tooltipOptions","opt","index","getAxisDimIndex","AxisPointerModel","_this","defaultOption","snap","triggerTooltip","link","animationDurationUpdate","lineStyle","color","shadowStyle","formatter","precision","margin","padding","backgroundColor","borderColor","borderWidth","borderRadius","icon","size","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","throttle","Component","AxisPointerView","globalAxisPointerModel","globalTooltipModel","getComponent","triggerOn","globalListener","indexOf","offsetX","offsetY","axisTrigger","coordSysAxesInfo","illegalPoint","isIllegalPoint","inputAxesInfo","shouldHide","outputPayload","showValueMap","dataByCoordSys","list","map","updaters","showPointer","curry","showTooltip","coordSysMap","coordSysKey","coordSysContainsPoint","containPoint","axisInfo","inputAxisInfo","findInputAxisInfo","val","pointToData","processOnAxis","linkTriggers","tarAxisInfo","tarKey","linkGroup","srcAxisInfo","srcKey","srcValItem","mapper","scale","parse","makeMapperParam","updateModelActually","dispatchTooltipActually","dispatchHighDownActually","newValue","noSnap","outputFinder","isBlank","containData","involveSeries","buildPayloadsBySeries","payloadBatch","snapToValue","extend","minDist","Number","MAX_VALUE","minDiff","seriesModels","series","idx","seriesNestestValue","dataIndices","dataDim","mapDimensionsAll","getAxisTooltipData","result","nestestValue","indicesOfNearest","isFinite","diff","dist","dataIndexInside","getRawIndex","coordSysModel","modelHelper","coordSysItem","coordSysId","id","coordSysIndex","coordSysType","coordSysMainType","mainType","dataByAxis","axisType","axisId","valueLabelOpt","seriesDataIndices","slice","outputAxesInfo","valItem","useHandle","sampleItem","escapeConnect","highDownKey","lastHighlights","newHighlights","batchItem","toHighlight","toDownplay","notBlur","batch","i","axisName","isNaN","AxisView","registerComponentModel","registerComponentView","axisPointer","isArray","registerProcessor","PROCESSOR","STATISTIC","registerAction","update","collect","seriesInvolved","collectAxesInfo","collectSeriesInfo","linksOption","linkGroups","getCoordinateSystems","axisPointerEnabled","makeKey","axesInfoInCoordSys","baseTooltipModel","getAxes","saveTooltipAxisInfo","getTooltipAxes","triggerAxis","cross","tooltipAxes","baseAxes","otherAxes","fromTooltip","axisPointerShow","isHandleTrigger","makeAxisPointerModel","axisKey","groupIndex","getLinkGroupIndex","tooltipAxisPointerModel","fields","volatileOption","field","labelOption","tooltipAxisPointerLabelShow","crossStyle","defaults","textStyle","eachSeries","seriesTooltipTrigger","seriesTooltipShow","getAxis","count","linkOption","checkPropInLink","linkPropValue","axisPropValue","fixValue","getAxisInfo","extent","reverse","getAxisPointerModel","buildElStyle","styleModel","getLineStyle","fill","getAreaStyle","stroke","buildLabelElOption","text","getValueLabel","labelModel","paddings","formatUtil","font","getFont","textRect","textContain","confineInContainer","bgColor","createTextStyle","getTextColor","z2","viewWidth","getWidth","viewHeight","getHeight","getLabel","params_1","axisHelper","axisDimension","seriesData","idxItem","dataParams","getDataParams","replace","getTransformedPosition","matrix","labelOffset","buildCartesianSingleLabelElOption","textLayout","AxisBuilder","makeLineShape","p1","p2","x1","y1","x2","y2","makeRectShape","makeSectorShape","r0","startAngle","endAngle","clockwise","elementList","getAxisLineShape","rExtent","angle","start","end","getRadiusIdx","radiusAxis","inverse","fixAngleOverlap","firstItem","lastItem","pop","AngleAxisView","axisPointerClass","angleAxisModel","removeAll","angleAxis","ticksAngles","getTicksCoords","minorTickAngles","getMinorTicksCoords","labels","getViewLabels","labelItem","tickValue","getRawOrdinalNumber","angelAxisElementsBuilders","axisLine","lineStyleModel","rId","r0Id","axisTick","tickModel","tickLen","radius","lines","tickAngleItem","minorTick","tickAngles","minorTickModel","k","axisLabel","rawCategoryData","getCategories","commonLabelModel","triggerEvent","p","labelTextAlign","labelTextVerticalAlign","rawCategoryItem","textEl","formattedLabel","eventData","targetType","rawLabel","splitLine","splitLineModel","lineColors","lineCount","Array","splitLines","colorIndex","minorSplitLine","minorSplitLineModel","splitArea","splitAreaModel","areaStyleModel","areaColors","splitAreas","RADIAN","prevAngle","r1","len","nameDirection","tickDirection","handleAutoShown","transformGroup","updateTransform","_transformGroup","hasBuilder","builders","getGroup","innerTextLayout","axisRotation","textRotation","direction","rotationDiff","remRadian","isRadianAroundZero","makeAxisEventDataBase","componentType","isLabelSilent","tooltipOpt","shown","pt1","pt2","v2ApplyTransform","lineCap","strokeContainThreshold","lineWidth","anid","arrows","arrowSize","isString","isNumber","arrowOffset","normalizeSymbolOffset","symbolWidth_1","symbolHeight_1","rotate","offset","sqrt","symbol","createSymbol","pt","cos","sin","axisTickLabel","ticksEls","buildAxisMajorTicks","labelEls","buildAxisLabel","fixMinMaxLabelShow","buildAxisMinorTicks","labelList","prepareLayoutList","priority","defaultAttr","ignore","hideOverlap","retrieve","axisNameAvailableWidth","nameLocation","textStyleModel","gap","gapSignal","isNameLocationCenter","nameRotation","endTextLayout","textFont","truncateOpt","ellipsis","maxWidth","nameTruncateMaxWidth","overflow","componentModel","itemName","__fullText","getECData","decomposeTransform","textPosition","textRotate","onLeft","tickEls","shouldShowAllLabels","showMinLabel","showMaxLabel","firstLabel","nextLabel","lastLabel","prevLabel","firstTick","nextTick","lastTick","prevTick","ignoreEl","isTwoLabelOverlapped","current","next","firstRect","nextRect","mRotationBack","matrixUtil","getLocalTransform","intersect","createTicks","ticksCoords","tickTransform","tickEndCoord","tickLineStyle","anidPrefix","tickCoord","tickEl","autoBatch","minorTicksCoords","minorTickLineStyle","minorTicksEls","axisLabelShow","labelRotate","itemLabelModel","isObject","Model","textColor","level","getShallow","isFunction","tickIndex","axisPointerClazz","_doUpdateAxisPointerClass","updateAxisPointer","_axisPointer","_disposeAxisPointer","Clazz","getAxisPointerClass","registerAxisPointerClass","clazz","axisBuilderAttrs","selfBuilderAttrs","CartesianAxisView","oldAxisGroup","_axisGroup","gridModel","getCoordSysModel","layout","axisBuilder","elementType","cartesians","getCartesians","axisElementBuilders","isInitialSortFromBarRacing","isInitSort","call","axisView","axisGroup","gridRect","CartesianXAxisView","CartesianYAxisView","ParallelAxisView","init","_brushController","_onBrush","fromAxisAreaSelect","areaSelectStyle","getAreaSelectStyle","areaWidth","axisLayout","getAxisLayout","builderOpt","_refreshBrushController","extentLen","extra","mount","enableGlobalPan","setPanels","panelId","clipPath","isTargetByCursor","getLinearBrushOtherExtent","enableBrush","brushType","brushStyle","removeOnClick","updateCovers","getCoverInfoList","eventParam","coverInfoList","areas","intervals","coverInfo","coordToData","range","realtime","isEnd","parallelAxisId","findComponents","query","activeIntervals","interval","RadiusAxisView","radiusAxisModel","newAxisGroup","layoutAxis","prevRadius","SingleAxisView","rectCoordAxisBuildSplitArea","clamp","areaColorsLen","lastSplitAreaColors","splitAreaColors","newSplitAreaColors","cIndex","prev","areaStyle","set","rectCoordAxisHandleRemove","actionInfo","installParallelActions","eachComponent","parallelAxisModel","setActiveIntervals","parallelModel","setAxisExpand"],"sourceRoot":""}