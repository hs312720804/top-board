{"version":3,"file":"js/chunk-vendors-0ff46c1f-legacy.dd1e3afd.js","mappings":"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","sources":["webpack://databoard/./node_modules/echarts/lib/chart/tree/traversalHelper.js","webpack://databoard/./node_modules/echarts/lib/chart/tree/treeLayout.js","webpack://databoard/./node_modules/echarts/lib/chart/tree/treeVisual.js","webpack://databoard/./node_modules/echarts/lib/chart/tree/treeAction.js","webpack://databoard/./node_modules/echarts/lib/chart/tree/install.js","webpack://databoard/./node_modules/echarts/lib/chart/tree/layoutHelper.js","webpack://databoard/./node_modules/echarts/lib/chart/treemap/treemapAction.js","webpack://databoard/./node_modules/echarts/lib/chart/treemap/TreemapSeries.js","webpack://databoard/./node_modules/echarts/lib/chart/treemap/Breadcrumb.js","webpack://databoard/./node_modules/echarts/lib/chart/treemap/TreemapView.js","webpack://databoard/./node_modules/echarts/lib/chart/treemap/treemapVisual.js","webpack://databoard/./node_modules/echarts/lib/chart/treemap/treemapLayout.js","webpack://databoard/./node_modules/echarts/lib/chart/treemap/install.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Traverse the tree from bottom to top and do something\n */\nfunction eachAfter(root, callback, separation) {\n  var nodes = [root];\n  var next = [];\n  var node;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    next.push(node);\n\n    if (node.isExpand) {\n      var children = node.children;\n\n      if (children.length) {\n        for (var i = 0; i < children.length; i++) {\n          nodes.push(children[i]);\n        }\n      }\n    }\n  }\n\n  while (node = next.pop()) {\n    // jshint ignore:line\n    callback(node, separation);\n  }\n}\n/**\n * Traverse the tree from top to bottom and do something\n */\n\n\nfunction eachBefore(root, callback) {\n  var nodes = [root];\n  var node;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    callback(node);\n\n    if (node.isExpand) {\n      var children = node.children;\n\n      if (children.length) {\n        for (var i = children.length - 1; i >= 0; i--) {\n          nodes.push(children[i]);\n        }\n      }\n    }\n  }\n}\n\nexport { eachAfter, eachBefore };","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { eachAfter, eachBefore } from './traversalHelper.js';\nimport { init, firstWalk, secondWalk, separation as sep, radialCoordinate, getViewRect } from './layoutHelper.js';\nexport default function treeLayout(ecModel, api) {\n  ecModel.eachSeriesByType('tree', function (seriesModel) {\n    commonLayout(seriesModel, api);\n  });\n}\nfunction commonLayout(seriesModel, api) {\n  var layoutInfo = getViewRect(seriesModel, api);\n  seriesModel.layoutInfo = layoutInfo;\n  var layout = seriesModel.get('layout');\n  var width = 0;\n  var height = 0;\n  var separation = null;\n  if (layout === 'radial') {\n    width = 2 * Math.PI;\n    height = Math.min(layoutInfo.height, layoutInfo.width) / 2;\n    separation = sep(function (node1, node2) {\n      return (node1.parentNode === node2.parentNode ? 1 : 2) / node1.depth;\n    });\n  } else {\n    width = layoutInfo.width;\n    height = layoutInfo.height;\n    separation = sep();\n  }\n  var virtualRoot = seriesModel.getData().tree.root;\n  var realRoot = virtualRoot.children[0];\n  if (realRoot) {\n    init(virtualRoot);\n    eachAfter(realRoot, firstWalk, separation);\n    virtualRoot.hierNode.modifier = -realRoot.hierNode.prelim;\n    eachBefore(realRoot, secondWalk);\n    var left_1 = realRoot;\n    var right_1 = realRoot;\n    var bottom_1 = realRoot;\n    eachBefore(realRoot, function (node) {\n      var x = node.getLayout().x;\n      if (x < left_1.getLayout().x) {\n        left_1 = node;\n      }\n      if (x > right_1.getLayout().x) {\n        right_1 = node;\n      }\n      if (node.depth > bottom_1.depth) {\n        bottom_1 = node;\n      }\n    });\n    var delta = left_1 === right_1 ? 1 : separation(left_1, right_1) / 2;\n    var tx_1 = delta - left_1.getLayout().x;\n    var kx_1 = 0;\n    var ky_1 = 0;\n    var coorX_1 = 0;\n    var coorY_1 = 0;\n    if (layout === 'radial') {\n      kx_1 = width / (right_1.getLayout().x + delta + tx_1); // here we use (node.depth - 1), bucause the real root's depth is 1\n\n      ky_1 = height / (bottom_1.depth - 1 || 1);\n      eachBefore(realRoot, function (node) {\n        coorX_1 = (node.getLayout().x + tx_1) * kx_1;\n        coorY_1 = (node.depth - 1) * ky_1;\n        var finalCoor = radialCoordinate(coorX_1, coorY_1);\n        node.setLayout({\n          x: finalCoor.x,\n          y: finalCoor.y,\n          rawX: coorX_1,\n          rawY: coorY_1\n        }, true);\n      });\n    } else {\n      var orient_1 = seriesModel.getOrient();\n      if (orient_1 === 'RL' || orient_1 === 'LR') {\n        ky_1 = height / (right_1.getLayout().x + delta + tx_1);\n        kx_1 = width / (bottom_1.depth - 1 || 1);\n        eachBefore(realRoot, function (node) {\n          coorY_1 = (node.getLayout().x + tx_1) * ky_1;\n          coorX_1 = orient_1 === 'LR' ? (node.depth - 1) * kx_1 : width - (node.depth - 1) * kx_1;\n          node.setLayout({\n            x: coorX_1,\n            y: coorY_1\n          }, true);\n        });\n      } else if (orient_1 === 'TB' || orient_1 === 'BT') {\n        kx_1 = width / (right_1.getLayout().x + delta + tx_1);\n        ky_1 = height / (bottom_1.depth - 1 || 1);\n        eachBefore(realRoot, function (node) {\n          coorX_1 = (node.getLayout().x + tx_1) * kx_1;\n          coorY_1 = orient_1 === 'TB' ? (node.depth - 1) * ky_1 : height - (node.depth - 1) * ky_1;\n          node.setLayout({\n            x: coorX_1,\n            y: coorY_1\n          }, true);\n        });\n      }\n    }\n  }\n}","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { extend } from 'zrender/lib/core/util.js';\nexport default function treeVisual(ecModel) {\n  ecModel.eachSeriesByType('tree', function (seriesModel) {\n    var data = seriesModel.getData();\n    var tree = data.tree;\n    tree.eachNode(function (node) {\n      var model = node.getModel(); // TODO Optimize\n\n      var style = model.getModel('itemStyle').getItemStyle();\n      var existsStyle = data.ensureUniqueItemVisual(node.dataIndex, 'style');\n      extend(existsStyle, style);\n    });\n  });\n}","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { updateCenterAndZoom } from '../../action/roamHelper.js';\nexport function installTreeAction(registers) {\n  registers.registerAction({\n    type: 'treeExpandAndCollapse',\n    event: 'treeExpandAndCollapse',\n    update: 'update'\n  }, function (payload, ecModel) {\n    ecModel.eachComponent({\n      mainType: 'series',\n      subType: 'tree',\n      query: payload\n    }, function (seriesModel) {\n      var dataIndex = payload.dataIndex;\n      var tree = seriesModel.getData().tree;\n      var node = tree.getNodeByDataIndex(dataIndex);\n      node.isExpand = !node.isExpand;\n    });\n  });\n  registers.registerAction({\n    type: 'treeRoam',\n    event: 'treeRoam',\n    // Here we set 'none' instead of 'update', because roam action\n    // just need to update the transform matrix without having to recalculate\n    // the layout. So don't need to go through the whole update process, such\n    // as 'dataPrcocess', 'coordSystemUpdate', 'layout' and so on.\n    update: 'none'\n  }, function (payload, ecModel, api) {\n    ecModel.eachComponent({\n      mainType: 'series',\n      subType: 'tree',\n      query: payload\n    }, function (seriesModel) {\n      var coordSys = seriesModel.coordinateSystem;\n      var res = updateCenterAndZoom(coordSys, payload, undefined, api);\n      seriesModel.setCenter && seriesModel.setCenter(res.center);\n      seriesModel.setZoom && seriesModel.setZoom(res.zoom);\n    });\n  });\n}","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport TreeView from './TreeView.js';\nimport TreeSeriesModel from './TreeSeries.js';\nimport treeLayout from './treeLayout.js';\nimport treeVisual from './treeVisual.js';\nimport { installTreeAction } from './treeAction.js';\nexport function install(registers) {\n  registers.registerChartView(TreeView);\n  registers.registerSeriesModel(TreeSeriesModel);\n  registers.registerLayout(treeLayout);\n  registers.registerVisual(treeVisual);\n  installTreeAction(registers);\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* A third-party license is embedded for some of the code in this file:\n* The tree layoutHelper implementation was originally copied from\n* \"d3.js\"(https://github.com/d3/d3-hierarchy) with\n* some modifications made for this project.\n* (see more details in the comment of the specific method below.)\n* The use of the source code of this file is also subject to the terms\n* and consitions of the licence of \"d3.js\" (BSD-3Clause, see\n* </licenses/LICENSE-d3>).\n*/\n\n/**\n * @file The layout algorithm of node-link tree diagrams. Here we using Reingold-Tilford algorithm to drawing\n *       the tree.\n */\nimport * as layout from '../../util/layout.js';\n/**\n * Initialize all computational message for following algorithm.\n */\n\nexport function init(inRoot) {\n  var root = inRoot;\n  root.hierNode = {\n    defaultAncestor: null,\n    ancestor: root,\n    prelim: 0,\n    modifier: 0,\n    change: 0,\n    shift: 0,\n    i: 0,\n    thread: null\n  };\n  var nodes = [root];\n  var node;\n  var children;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    children = node.children;\n\n    if (node.isExpand && children.length) {\n      var n = children.length;\n\n      for (var i = n - 1; i >= 0; i--) {\n        var child = children[i];\n        child.hierNode = {\n          defaultAncestor: null,\n          ancestor: child,\n          prelim: 0,\n          modifier: 0,\n          change: 0,\n          shift: 0,\n          i: i,\n          thread: null\n        };\n        nodes.push(child);\n      }\n    }\n  }\n}\n/**\n * The implementation of this function was originally copied from \"d3.js\"\n * <https://github.com/d3/d3-hierarchy/blob/4c1f038f2725d6eae2e49b61d01456400694bac4/src/tree.js>\n * with some modifications made for this program.\n * See the license statement at the head of this file.\n *\n * Computes a preliminary x coordinate for node. Before that, this function is\n * applied recursively to the children of node, as well as the function\n * apportion(). After spacing out the children by calling executeShifts(), the\n * node is placed to the midpoint of its outermost children.\n */\n\nexport function firstWalk(node, separation) {\n  var children = node.isExpand ? node.children : [];\n  var siblings = node.parentNode.children;\n  var subtreeW = node.hierNode.i ? siblings[node.hierNode.i - 1] : null;\n\n  if (children.length) {\n    executeShifts(node);\n    var midPoint = (children[0].hierNode.prelim + children[children.length - 1].hierNode.prelim) / 2;\n\n    if (subtreeW) {\n      node.hierNode.prelim = subtreeW.hierNode.prelim + separation(node, subtreeW);\n      node.hierNode.modifier = node.hierNode.prelim - midPoint;\n    } else {\n      node.hierNode.prelim = midPoint;\n    }\n  } else if (subtreeW) {\n    node.hierNode.prelim = subtreeW.hierNode.prelim + separation(node, subtreeW);\n  }\n\n  node.parentNode.hierNode.defaultAncestor = apportion(node, subtreeW, node.parentNode.hierNode.defaultAncestor || siblings[0], separation);\n}\n/**\n * The implementation of this function was originally copied from \"d3.js\"\n * <https://github.com/d3/d3-hierarchy/blob/4c1f038f2725d6eae2e49b61d01456400694bac4/src/tree.js>\n * with some modifications made for this program.\n * See the license statement at the head of this file.\n *\n * Computes all real x-coordinates by summing up the modifiers recursively.\n */\n\nexport function secondWalk(node) {\n  var nodeX = node.hierNode.prelim + node.parentNode.hierNode.modifier;\n  node.setLayout({\n    x: nodeX\n  }, true);\n  node.hierNode.modifier += node.parentNode.hierNode.modifier;\n}\nexport function separation(cb) {\n  return arguments.length ? cb : defaultSeparation;\n}\n/**\n * Transform the common coordinate to radial coordinate.\n */\n\nexport function radialCoordinate(rad, r) {\n  rad -= Math.PI / 2;\n  return {\n    x: r * Math.cos(rad),\n    y: r * Math.sin(rad)\n  };\n}\n/**\n * Get the layout position of the whole view.\n */\n\nexport function getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n/**\n * All other shifts, applied to the smaller subtrees between w- and w+, are\n * performed by this function.\n *\n * The implementation of this function was originally copied from \"d3.js\"\n * <https://github.com/d3/d3-hierarchy/blob/4c1f038f2725d6eae2e49b61d01456400694bac4/src/tree.js>\n * with some modifications made for this program.\n * See the license statement at the head of this file.\n */\n\nfunction executeShifts(node) {\n  var children = node.children;\n  var n = children.length;\n  var shift = 0;\n  var change = 0;\n\n  while (--n >= 0) {\n    var child = children[n];\n    child.hierNode.prelim += shift;\n    child.hierNode.modifier += shift;\n    change += child.hierNode.change;\n    shift += child.hierNode.shift + change;\n  }\n}\n/**\n * The implementation of this function was originally copied from \"d3.js\"\n * <https://github.com/d3/d3-hierarchy/blob/4c1f038f2725d6eae2e49b61d01456400694bac4/src/tree.js>\n * with some modifications made for this program.\n * See the license statement at the head of this file.\n *\n * The core of the algorithm. Here, a new subtree is combined with the\n * previous subtrees. Threads are used to traverse the inside and outside\n * contours of the left and right subtree up to the highest common level.\n * Whenever two nodes of the inside contours conflict, we compute the left\n * one of the greatest uncommon ancestors using the function nextAncestor()\n * and call moveSubtree() to shift the subtree and prepare the shifts of\n * smaller subtrees. Finally, we add a new thread (if necessary).\n */\n\n\nfunction apportion(subtreeV, subtreeW, ancestor, separation) {\n  if (subtreeW) {\n    var nodeOutRight = subtreeV;\n    var nodeInRight = subtreeV;\n    var nodeOutLeft = nodeInRight.parentNode.children[0];\n    var nodeInLeft = subtreeW;\n    var sumOutRight = nodeOutRight.hierNode.modifier;\n    var sumInRight = nodeInRight.hierNode.modifier;\n    var sumOutLeft = nodeOutLeft.hierNode.modifier;\n    var sumInLeft = nodeInLeft.hierNode.modifier;\n\n    while (nodeInLeft = nextRight(nodeInLeft), nodeInRight = nextLeft(nodeInRight), nodeInLeft && nodeInRight) {\n      nodeOutRight = nextRight(nodeOutRight);\n      nodeOutLeft = nextLeft(nodeOutLeft);\n      nodeOutRight.hierNode.ancestor = subtreeV;\n      var shift = nodeInLeft.hierNode.prelim + sumInLeft - nodeInRight.hierNode.prelim - sumInRight + separation(nodeInLeft, nodeInRight);\n\n      if (shift > 0) {\n        moveSubtree(nextAncestor(nodeInLeft, subtreeV, ancestor), subtreeV, shift);\n        sumInRight += shift;\n        sumOutRight += shift;\n      }\n\n      sumInLeft += nodeInLeft.hierNode.modifier;\n      sumInRight += nodeInRight.hierNode.modifier;\n      sumOutRight += nodeOutRight.hierNode.modifier;\n      sumOutLeft += nodeOutLeft.hierNode.modifier;\n    }\n\n    if (nodeInLeft && !nextRight(nodeOutRight)) {\n      nodeOutRight.hierNode.thread = nodeInLeft;\n      nodeOutRight.hierNode.modifier += sumInLeft - sumOutRight;\n    }\n\n    if (nodeInRight && !nextLeft(nodeOutLeft)) {\n      nodeOutLeft.hierNode.thread = nodeInRight;\n      nodeOutLeft.hierNode.modifier += sumInRight - sumOutLeft;\n      ancestor = subtreeV;\n    }\n  }\n\n  return ancestor;\n}\n/**\n * This function is used to traverse the right contour of a subtree.\n * It returns the rightmost child of node or the thread of node. The function\n * returns null if and only if node is on the highest depth of its subtree.\n */\n\n\nfunction nextRight(node) {\n  var children = node.children;\n  return children.length && node.isExpand ? children[children.length - 1] : node.hierNode.thread;\n}\n/**\n * This function is used to traverse the left contour of a subtree (or a subforest).\n * It returns the leftmost child of node or the thread of node. The function\n * returns null if and only if node is on the highest depth of its subtree.\n */\n\n\nfunction nextLeft(node) {\n  var children = node.children;\n  return children.length && node.isExpand ? children[0] : node.hierNode.thread;\n}\n/**\n * If nodeInLeft’s ancestor is a sibling of node, returns nodeInLeft’s ancestor.\n * Otherwise, returns the specified ancestor.\n */\n\n\nfunction nextAncestor(nodeInLeft, node, ancestor) {\n  return nodeInLeft.hierNode.ancestor.parentNode === node.parentNode ? nodeInLeft.hierNode.ancestor : ancestor;\n}\n/**\n * The implementation of this function was originally copied from \"d3.js\"\n * <https://github.com/d3/d3-hierarchy/blob/4c1f038f2725d6eae2e49b61d01456400694bac4/src/tree.js>\n * with some modifications made for this program.\n * See the license statement at the head of this file.\n *\n * Shifts the current subtree rooted at wr.\n * This is done by increasing prelim(w+) and modifier(w+) by shift.\n */\n\n\nfunction moveSubtree(wl, wr, shift) {\n  var change = shift / (wr.hierNode.i - wl.hierNode.i);\n  wr.hierNode.change -= change;\n  wr.hierNode.shift += shift;\n  wr.hierNode.modifier += shift;\n  wr.hierNode.prelim += shift;\n  wl.hierNode.change += change;\n}\n/**\n * The implementation of this function was originally copied from \"d3.js\"\n * <https://github.com/d3/d3-hierarchy/blob/4c1f038f2725d6eae2e49b61d01456400694bac4/src/tree.js>\n * with some modifications made for this program.\n * See the license statement at the head of this file.\n */\n\n\nfunction defaultSeparation(node1, node2) {\n  return node1.parentNode === node2.parentNode ? 1 : 2;\n}","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as helper from '../helper/treeHelper.js';\nimport { noop } from 'zrender/lib/core/util.js';\nvar actionTypes = ['treemapZoomToNode', 'treemapRender', 'treemapMove'];\nexport function installTreemapAction(registers) {\n  for (var i = 0; i < actionTypes.length; i++) {\n    registers.registerAction({\n      type: actionTypes[i],\n      update: 'updateView'\n    }, noop);\n  }\n  registers.registerAction({\n    type: 'treemapRootToNode',\n    update: 'updateView'\n  }, function (payload, ecModel) {\n    ecModel.eachComponent({\n      mainType: 'series',\n      subType: 'treemap',\n      query: payload\n    }, handleRootToNode);\n    function handleRootToNode(model, index) {\n      var types = ['treemapZoomToNode', 'treemapRootToNode'];\n      var targetInfo = helper.retrieveTargetInfo(payload, types, model);\n      if (targetInfo) {\n        var originViewRoot = model.getViewRoot();\n        if (originViewRoot) {\n          payload.direction = helper.aboveViewRoot(originViewRoot, targetInfo.node) ? 'rollUp' : 'drillDown';\n        }\n        model.resetViewRoot(targetInfo.node);\n      }\n    }\n  });\n}","import \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.slice.js\";\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport SeriesModel from '../../model/Series.js';\nimport Tree from '../../data/Tree.js';\nimport Model from '../../model/Model.js';\nimport { wrapTreePathInfo } from '../helper/treeHelper.js';\nimport { normalizeToArray } from '../../util/model.js';\nimport { createTooltipMarkup } from '../../component/tooltip/tooltipMarkup.js';\nimport enableAriaDecalForTree from '../helper/enableAriaDecalForTree.js';\nvar TreemapSeriesModel = /** @class */\nfunction (_super) {\n  __extends(TreemapSeriesModel, _super);\n  function TreemapSeriesModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = TreemapSeriesModel.type;\n    _this.preventUsingHoverLayer = true;\n    return _this;\n  }\n  /**\n   * @override\n   */\n\n  TreemapSeriesModel.prototype.getInitialData = function (option, ecModel) {\n    // Create a virtual root.\n    var root = {\n      name: option.name,\n      children: option.data\n    };\n    completeTreeValue(root);\n    var levels = option.levels || []; // Used in \"visual priority\" in `treemapVisual.js`.\n    // This way is a little tricky, must satisfy the precondition:\n    //   1. There is no `treeNode.getModel('itemStyle.xxx')` used.\n    //   2. The `Model.prototype.getModel()` will not use any clone-like way.\n\n    var designatedVisualItemStyle = this.designatedVisualItemStyle = {};\n    var designatedVisualModel = new Model({\n      itemStyle: designatedVisualItemStyle\n    }, this, ecModel);\n    levels = option.levels = setDefault(levels, ecModel);\n    var levelModels = zrUtil.map(levels || [], function (levelDefine) {\n      return new Model(levelDefine, designatedVisualModel, ecModel);\n    }, this); // Make sure always a new tree is created when setOption,\n    // in TreemapView, we check whether oldTree === newTree\n    // to choose mappings approach among old shapes and new shapes.\n\n    var tree = Tree.createTree(root, this, beforeLink);\n    function beforeLink(nodeData) {\n      nodeData.wrapMethod('getItemModel', function (model, idx) {\n        var node = tree.getNodeByDataIndex(idx);\n        var levelModel = node ? levelModels[node.depth] : null; // If no levelModel, we also need `designatedVisualModel`.\n\n        model.parentModel = levelModel || designatedVisualModel;\n        return model;\n      });\n    }\n    return tree.data;\n  };\n  TreemapSeriesModel.prototype.optionUpdated = function () {\n    this.resetViewRoot();\n  };\n  /**\n   * @override\n   * @param {number} dataIndex\n   * @param {boolean} [mutipleSeries=false]\n   */\n\n  TreemapSeriesModel.prototype.formatTooltip = function (dataIndex, multipleSeries, dataType) {\n    var data = this.getData();\n    var value = this.getRawValue(dataIndex);\n    var name = data.getName(dataIndex);\n    return createTooltipMarkup('nameValue', {\n      name: name,\n      value: value\n    });\n  };\n  /**\n   * Add tree path to tooltip param\n   *\n   * @override\n   * @param {number} dataIndex\n   * @return {Object}\n   */\n\n  TreemapSeriesModel.prototype.getDataParams = function (dataIndex) {\n    var params = _super.prototype.getDataParams.apply(this, arguments);\n    var node = this.getData().tree.getNodeByDataIndex(dataIndex);\n    params.treeAncestors = wrapTreePathInfo(node, this); // compatitable the previous code.\n\n    params.treePathInfo = params.treeAncestors;\n    return params;\n  };\n  /**\n   * @public\n   * @param {Object} layoutInfo {\n   *                                x: containerGroup x\n   *                                y: containerGroup y\n   *                                width: containerGroup width\n   *                                height: containerGroup height\n   *                            }\n   */\n\n  TreemapSeriesModel.prototype.setLayoutInfo = function (layoutInfo) {\n    /**\n     * @readOnly\n     * @type {Object}\n     */\n    this.layoutInfo = this.layoutInfo || {};\n    zrUtil.extend(this.layoutInfo, layoutInfo);\n  };\n  /**\n   * @param  {string} id\n   * @return {number} index\n   */\n\n  TreemapSeriesModel.prototype.mapIdToIndex = function (id) {\n    // A feature is implemented:\n    // index is monotone increasing with the sequence of\n    // input id at the first time.\n    // This feature can make sure that each data item and its\n    // mapped color have the same index between data list and\n    // color list at the beginning, which is useful for user\n    // to adjust data-color mapping.\n\n    /**\n     * @private\n     * @type {Object}\n     */\n    var idIndexMap = this._idIndexMap;\n    if (!idIndexMap) {\n      idIndexMap = this._idIndexMap = zrUtil.createHashMap();\n      /**\n       * @private\n       * @type {number}\n       */\n\n      this._idIndexMapCount = 0;\n    }\n    var index = idIndexMap.get(id);\n    if (index == null) {\n      idIndexMap.set(id, index = this._idIndexMapCount++);\n    }\n    return index;\n  };\n  TreemapSeriesModel.prototype.getViewRoot = function () {\n    return this._viewRoot;\n  };\n  TreemapSeriesModel.prototype.resetViewRoot = function (viewRoot) {\n    viewRoot ? this._viewRoot = viewRoot : viewRoot = this._viewRoot;\n    var root = this.getRawData().tree.root;\n    if (!viewRoot || viewRoot !== root && !root.contains(viewRoot)) {\n      this._viewRoot = root;\n    }\n  };\n  TreemapSeriesModel.prototype.enableAriaDecal = function () {\n    enableAriaDecalForTree(this);\n  };\n  TreemapSeriesModel.type = 'series.treemap';\n  TreemapSeriesModel.layoutMode = 'box';\n  TreemapSeriesModel.defaultOption = {\n    // Disable progressive rendering\n    progressive: 0,\n    // size: ['80%', '80%'],            // deprecated, compatible with ec2.\n    left: 'center',\n    top: 'middle',\n    width: '80%',\n    height: '80%',\n    sort: true,\n    clipWindow: 'origin',\n    squareRatio: 0.5 * (1 + Math.sqrt(5)),\n    leafDepth: null,\n    drillDownIcon: '▶',\n    // to align specialized icon. ▷▶❒❐▼✚\n    zoomToNodeRatio: 0.32 * 0.32,\n    roam: true,\n    nodeClick: 'zoomToNode',\n    animation: true,\n    animationDurationUpdate: 900,\n    animationEasing: 'quinticInOut',\n    breadcrumb: {\n      show: true,\n      height: 22,\n      left: 'center',\n      top: 'bottom',\n      // right\n      // bottom\n      emptyItemWidth: 25,\n      itemStyle: {\n        color: 'rgba(0,0,0,0.7)',\n        textStyle: {\n          color: '#fff'\n        }\n      },\n      emphasis: {\n        itemStyle: {\n          color: 'rgba(0,0,0,0.9)' // '#5793f3',\n        }\n      }\n    },\n\n    label: {\n      show: true,\n      // Do not use textDistance, for ellipsis rect just the same as treemap node rect.\n      distance: 0,\n      padding: 5,\n      position: 'inside',\n      // formatter: null,\n      color: '#fff',\n      overflow: 'truncate' // align\n      // verticalAlign\n    },\n\n    upperLabel: {\n      show: false,\n      position: [0, '50%'],\n      height: 20,\n      // formatter: null,\n      // color: '#fff',\n      overflow: 'truncate',\n      // align: null,\n      verticalAlign: 'middle'\n    },\n    itemStyle: {\n      color: null,\n      colorAlpha: null,\n      colorSaturation: null,\n      borderWidth: 0,\n      gapWidth: 0,\n      borderColor: '#fff',\n      borderColorSaturation: null // If specified, borderColor will be ineffective, and the\n      // border color is evaluated by color of current node and\n      // borderColorSaturation.\n    },\n\n    emphasis: {\n      upperLabel: {\n        show: true,\n        position: [0, '50%'],\n        overflow: 'truncate',\n        verticalAlign: 'middle'\n      }\n    },\n    visualDimension: 0,\n    visualMin: null,\n    visualMax: null,\n    color: [],\n    // level[n].color (if necessary).\n    // + Specify color list of each level. level[0].color would be global\n    // color list if not specified. (see method `setDefault`).\n    // + But set as a empty array to forbid fetch color from global palette\n    // when using nodeModel.get('color'), otherwise nodes on deep level\n    // will always has color palette set and are not able to inherit color\n    // from parent node.\n    // + TreemapSeries.color can not be set as 'none', otherwise effect\n    // legend color fetching (see seriesColor.js).\n    colorAlpha: null,\n    colorSaturation: null,\n    colorMappingBy: 'index',\n    visibleMin: 10,\n    // be rendered. Only works when sort is 'asc' or 'desc'.\n    childrenVisibleMin: null,\n    // grandchildren will not show.\n    // Why grandchildren? If not grandchildren but children,\n    // some siblings show children and some not,\n    // the appearance may be mess and not consistent,\n    levels: [] // Each item: {\n    //     visibleMin, itemStyle, visualDimension, label\n    // }\n  };\n\n  return TreemapSeriesModel;\n}(SeriesModel);\n/**\n * @param {Object} dataNode\n */\n\nfunction completeTreeValue(dataNode) {\n  // Postorder travel tree.\n  // If value of none-leaf node is not set,\n  // calculate it by suming up the value of all children.\n  var sum = 0;\n  zrUtil.each(dataNode.children, function (child) {\n    completeTreeValue(child);\n    var childValue = child.value;\n    zrUtil.isArray(childValue) && (childValue = childValue[0]);\n    sum += childValue;\n  });\n  var thisValue = dataNode.value;\n  if (zrUtil.isArray(thisValue)) {\n    thisValue = thisValue[0];\n  }\n  if (thisValue == null || isNaN(thisValue)) {\n    thisValue = sum;\n  } // Value should not less than 0.\n\n  if (thisValue < 0) {\n    thisValue = 0;\n  }\n  zrUtil.isArray(dataNode.value) ? dataNode.value[0] = thisValue : dataNode.value = thisValue;\n}\n/**\n * set default to level configuration\n */\n\nfunction setDefault(levels, ecModel) {\n  var globalColorList = normalizeToArray(ecModel.get('color'));\n  var globalDecalList = normalizeToArray(ecModel.get(['aria', 'decal', 'decals']));\n  if (!globalColorList) {\n    return;\n  }\n  levels = levels || [];\n  var hasColorDefine;\n  var hasDecalDefine;\n  zrUtil.each(levels, function (levelDefine) {\n    var model = new Model(levelDefine);\n    var modelColor = model.get('color');\n    var modelDecal = model.get('decal');\n    if (model.get(['itemStyle', 'color']) || modelColor && modelColor !== 'none') {\n      hasColorDefine = true;\n    }\n    if (model.get(['itemStyle', 'decal']) || modelDecal && modelDecal !== 'none') {\n      hasDecalDefine = true;\n    }\n  });\n  var level0 = levels[0] || (levels[0] = {});\n  if (!hasColorDefine) {\n    level0.color = globalColorList.slice();\n  }\n  if (!hasDecalDefine && globalDecalList) {\n    level0.decal = globalDecalList.slice();\n  }\n  return levels;\n}\nexport default TreemapSeriesModel;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as graphic from '../../util/graphic.js';\nimport { getECData } from '../../util/innerStore.js';\nimport * as layout from '../../util/layout.js';\nimport { wrapTreePathInfo } from '../helper/treeHelper.js';\nimport { curry, defaults } from 'zrender/lib/core/util.js';\nimport { convertOptionIdName } from '../../util/model.js';\nimport { toggleHoverEmphasis, Z2_EMPHASIS_LIFT } from '../../util/states.js';\nimport { createTextStyle } from '../../label/labelStyle.js';\nvar TEXT_PADDING = 8;\nvar ITEM_GAP = 8;\nvar ARRAY_LENGTH = 5;\n\nvar Breadcrumb =\n/** @class */\nfunction () {\n  function Breadcrumb(containerGroup) {\n    this.group = new graphic.Group();\n    containerGroup.add(this.group);\n  }\n\n  Breadcrumb.prototype.render = function (seriesModel, api, targetNode, onSelect) {\n    var model = seriesModel.getModel('breadcrumb');\n    var thisGroup = this.group;\n    thisGroup.removeAll();\n\n    if (!model.get('show') || !targetNode) {\n      return;\n    }\n\n    var normalStyleModel = model.getModel('itemStyle');\n    var emphasisModel = model.getModel('emphasis');\n    var textStyleModel = normalStyleModel.getModel('textStyle');\n    var emphasisTextStyleModel = emphasisModel.getModel(['itemStyle', 'textStyle']);\n    var layoutParam = {\n      pos: {\n        left: model.get('left'),\n        right: model.get('right'),\n        top: model.get('top'),\n        bottom: model.get('bottom')\n      },\n      box: {\n        width: api.getWidth(),\n        height: api.getHeight()\n      },\n      emptyItemWidth: model.get('emptyItemWidth'),\n      totalWidth: 0,\n      renderList: []\n    };\n\n    this._prepare(targetNode, layoutParam, textStyleModel);\n\n    this._renderContent(seriesModel, layoutParam, normalStyleModel, emphasisModel, textStyleModel, emphasisTextStyleModel, onSelect);\n\n    layout.positionElement(thisGroup, layoutParam.pos, layoutParam.box);\n  };\n  /**\n   * Prepare render list and total width\n   * @private\n   */\n\n\n  Breadcrumb.prototype._prepare = function (targetNode, layoutParam, textStyleModel) {\n    for (var node = targetNode; node; node = node.parentNode) {\n      var text = convertOptionIdName(node.getModel().get('name'), '');\n      var textRect = textStyleModel.getTextRect(text);\n      var itemWidth = Math.max(textRect.width + TEXT_PADDING * 2, layoutParam.emptyItemWidth);\n      layoutParam.totalWidth += itemWidth + ITEM_GAP;\n      layoutParam.renderList.push({\n        node: node,\n        text: text,\n        width: itemWidth\n      });\n    }\n  };\n  /**\n   * @private\n   */\n\n\n  Breadcrumb.prototype._renderContent = function (seriesModel, layoutParam, normalStyleModel, emphasisModel, textStyleModel, emphasisTextStyleModel, onSelect) {\n    // Start rendering.\n    var lastX = 0;\n    var emptyItemWidth = layoutParam.emptyItemWidth;\n    var height = seriesModel.get(['breadcrumb', 'height']);\n    var availableSize = layout.getAvailableSize(layoutParam.pos, layoutParam.box);\n    var totalWidth = layoutParam.totalWidth;\n    var renderList = layoutParam.renderList;\n    var emphasisItemStyle = emphasisModel.getModel('itemStyle').getItemStyle();\n\n    for (var i = renderList.length - 1; i >= 0; i--) {\n      var item = renderList[i];\n      var itemNode = item.node;\n      var itemWidth = item.width;\n      var text = item.text; // Hdie text and shorten width if necessary.\n\n      if (totalWidth > availableSize.width) {\n        totalWidth -= itemWidth - emptyItemWidth;\n        itemWidth = emptyItemWidth;\n        text = null;\n      }\n\n      var el = new graphic.Polygon({\n        shape: {\n          points: makeItemPoints(lastX, 0, itemWidth, height, i === renderList.length - 1, i === 0)\n        },\n        style: defaults(normalStyleModel.getItemStyle(), {\n          lineJoin: 'bevel'\n        }),\n        textContent: new graphic.Text({\n          style: createTextStyle(textStyleModel, {\n            text: text\n          })\n        }),\n        textConfig: {\n          position: 'inside'\n        },\n        z2: Z2_EMPHASIS_LIFT * 1e4,\n        onclick: curry(onSelect, itemNode)\n      });\n      el.disableLabelAnimation = true;\n      el.getTextContent().ensureState('emphasis').style = createTextStyle(emphasisTextStyleModel, {\n        text: text\n      });\n      el.ensureState('emphasis').style = emphasisItemStyle;\n      toggleHoverEmphasis(el, emphasisModel.get('focus'), emphasisModel.get('blurScope'), emphasisModel.get('disabled'));\n      this.group.add(el);\n      packEventData(el, seriesModel, itemNode);\n      lastX += itemWidth + ITEM_GAP;\n    }\n  };\n\n  Breadcrumb.prototype.remove = function () {\n    this.group.removeAll();\n  };\n\n  return Breadcrumb;\n}();\n\nfunction makeItemPoints(x, y, itemWidth, itemHeight, head, tail) {\n  var points = [[head ? x : x - ARRAY_LENGTH, y], [x + itemWidth, y], [x + itemWidth, y + itemHeight], [head ? x : x - ARRAY_LENGTH, y + itemHeight]];\n  !tail && points.splice(2, 0, [x + itemWidth + ARRAY_LENGTH, y + itemHeight / 2]);\n  !head && points.push([x, y + itemHeight / 2]);\n  return points;\n} // Package custom mouse event.\n\n\nfunction packEventData(el, seriesModel, itemNode) {\n  getECData(el).eventData = {\n    componentType: 'series',\n    componentSubType: 'treemap',\n    componentIndex: seriesModel.componentIndex,\n    seriesIndex: seriesModel.seriesIndex,\n    seriesName: seriesModel.name,\n    seriesType: 'treemap',\n    selfType: 'breadcrumb',\n    nodeData: {\n      dataIndex: itemNode && itemNode.dataIndex,\n      name: itemNode && itemNode.name\n    },\n    treePathInfo: itemNode && wrapTreePathInfo(itemNode, seriesModel)\n  };\n}\n\nexport default Breadcrumb;","import \"core-js/modules/es.array.fill.js\";\nimport \"core-js/modules/es.array.push.js\";\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport { bind, each, indexOf, curry, extend, normalizeCssArray, isFunction } from 'zrender/lib/core/util.js';\nimport * as graphic from '../../util/graphic.js';\nimport { getECData } from '../../util/innerStore.js';\nimport { isHighDownDispatcher, setAsHighDownDispatcher, setDefaultStateProxy, enableHoverFocus, Z2_EMPHASIS_LIFT } from '../../util/states.js';\nimport DataDiffer from '../../data/DataDiffer.js';\nimport * as helper from '../helper/treeHelper.js';\nimport Breadcrumb from './Breadcrumb.js';\nimport RoamController from '../../component/helper/RoamController.js';\nimport BoundingRect from 'zrender/lib/core/BoundingRect.js';\nimport * as matrix from 'zrender/lib/core/matrix.js';\nimport * as animationUtil from '../../util/animation.js';\nimport makeStyleMapper from '../../model/mixin/makeStyleMapper.js';\nimport ChartView from '../../view/Chart.js';\nimport Displayable from 'zrender/lib/graphic/Displayable.js';\nimport { makeInner, convertOptionIdName } from '../../util/model.js';\nimport { windowOpen } from '../../util/format.js';\nimport { setLabelStyle, getLabelStatesModels } from '../../label/labelStyle.js';\nvar Group = graphic.Group;\nvar Rect = graphic.Rect;\nvar DRAG_THRESHOLD = 3;\nvar PATH_LABEL_NOAMAL = 'label';\nvar PATH_UPPERLABEL_NORMAL = 'upperLabel'; // Should larger than emphasis states lift z\n\nvar Z2_BASE = Z2_EMPHASIS_LIFT * 10; // Should bigger than every z2.\n\nvar Z2_BG = Z2_EMPHASIS_LIFT * 2;\nvar Z2_CONTENT = Z2_EMPHASIS_LIFT * 3;\nvar getStateItemStyle = makeStyleMapper([['fill', 'color'],\n// `borderColor` and `borderWidth` has been occupied,\n// so use `stroke` to indicate the stroke of the rect.\n['stroke', 'strokeColor'], ['lineWidth', 'strokeWidth'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor'] // Option decal is in `DecalObject` but style.decal is in `PatternObject`.\n// So do not transfer decal directly.\n]);\n\nvar getItemStyleNormal = function getItemStyleNormal(model) {\n  // Normal style props should include emphasis style props.\n  var itemStyle = getStateItemStyle(model); // Clear styles set by emphasis.\n\n  itemStyle.stroke = itemStyle.fill = itemStyle.lineWidth = null;\n  return itemStyle;\n};\nvar inner = makeInner();\nvar TreemapView = /** @class */\nfunction (_super) {\n  __extends(TreemapView, _super);\n  function TreemapView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = TreemapView.type;\n    _this._state = 'ready';\n    _this._storage = createStorage();\n    return _this;\n  }\n  /**\n   * @override\n   */\n\n  TreemapView.prototype.render = function (seriesModel, ecModel, api, payload) {\n    var models = ecModel.findComponents({\n      mainType: 'series',\n      subType: 'treemap',\n      query: payload\n    });\n    if (indexOf(models, seriesModel) < 0) {\n      return;\n    }\n    this.seriesModel = seriesModel;\n    this.api = api;\n    this.ecModel = ecModel;\n    var types = ['treemapZoomToNode', 'treemapRootToNode'];\n    var targetInfo = helper.retrieveTargetInfo(payload, types, seriesModel);\n    var payloadType = payload && payload.type;\n    var layoutInfo = seriesModel.layoutInfo;\n    var isInit = !this._oldTree;\n    var thisStorage = this._storage; // Mark new root when action is treemapRootToNode.\n\n    var reRoot = payloadType === 'treemapRootToNode' && targetInfo && thisStorage ? {\n      rootNodeGroup: thisStorage.nodeGroup[targetInfo.node.getRawIndex()],\n      direction: payload.direction\n    } : null;\n    var containerGroup = this._giveContainerGroup(layoutInfo);\n    var hasAnimation = seriesModel.get('animation');\n    var renderResult = this._doRender(containerGroup, seriesModel, reRoot);\n    hasAnimation && !isInit && (!payloadType || payloadType === 'treemapZoomToNode' || payloadType === 'treemapRootToNode') ? this._doAnimation(containerGroup, renderResult, seriesModel, reRoot) : renderResult.renderFinally();\n    this._resetController(api);\n    this._renderBreadcrumb(seriesModel, api, targetInfo);\n  };\n  TreemapView.prototype._giveContainerGroup = function (layoutInfo) {\n    var containerGroup = this._containerGroup;\n    if (!containerGroup) {\n      // FIXME\n      // 加一层containerGroup是为了clip，但是现在clip功能并没有实现。\n      containerGroup = this._containerGroup = new Group();\n      this._initEvents(containerGroup);\n      this.group.add(containerGroup);\n    }\n    containerGroup.x = layoutInfo.x;\n    containerGroup.y = layoutInfo.y;\n    return containerGroup;\n  };\n  TreemapView.prototype._doRender = function (containerGroup, seriesModel, reRoot) {\n    var thisTree = seriesModel.getData().tree;\n    var oldTree = this._oldTree; // Clear last shape records.\n\n    var lastsForAnimation = createStorage();\n    var thisStorage = createStorage();\n    var oldStorage = this._storage;\n    var willInvisibleEls = [];\n    function doRenderNode(thisNode, oldNode, parentGroup, depth) {\n      return renderNode(seriesModel, thisStorage, oldStorage, reRoot, lastsForAnimation, willInvisibleEls, thisNode, oldNode, parentGroup, depth);\n    } // Notice: When thisTree and oldTree are the same tree (see list.cloneShallow),\n    // the oldTree is actually losted, so we cannot find all of the old graphic\n    // elements from tree. So we use this strategy: make element storage, move\n    // from old storage to new storage, clear old storage.\n\n    dualTravel(thisTree.root ? [thisTree.root] : [], oldTree && oldTree.root ? [oldTree.root] : [], containerGroup, thisTree === oldTree || !oldTree, 0); // Process all removing.\n\n    var willDeleteEls = clearStorage(oldStorage);\n    this._oldTree = thisTree;\n    this._storage = thisStorage;\n    return {\n      lastsForAnimation: lastsForAnimation,\n      willDeleteEls: willDeleteEls,\n      renderFinally: renderFinally\n    };\n    function dualTravel(thisViewChildren, oldViewChildren, parentGroup, sameTree, depth) {\n      // When 'render' is triggered by action,\n      // 'this' and 'old' may be the same tree,\n      // we use rawIndex in that case.\n      if (sameTree) {\n        oldViewChildren = thisViewChildren;\n        each(thisViewChildren, function (child, index) {\n          !child.isRemoved() && processNode(index, index);\n        });\n      } // Diff hierarchically (diff only in each subtree, but not whole).\n      // because, consistency of view is important.\n      else {\n        new DataDiffer(oldViewChildren, thisViewChildren, getKey, getKey).add(processNode).update(processNode).remove(curry(processNode, null)).execute();\n      }\n      function getKey(node) {\n        // Identify by name or raw index.\n        return node.getId();\n      }\n      function processNode(newIndex, oldIndex) {\n        var thisNode = newIndex != null ? thisViewChildren[newIndex] : null;\n        var oldNode = oldIndex != null ? oldViewChildren[oldIndex] : null;\n        var group = doRenderNode(thisNode, oldNode, parentGroup, depth);\n        group && dualTravel(thisNode && thisNode.viewChildren || [], oldNode && oldNode.viewChildren || [], group, sameTree, depth + 1);\n      }\n    }\n    function clearStorage(storage) {\n      var willDeleteEls = createStorage();\n      storage && each(storage, function (store, storageName) {\n        var delEls = willDeleteEls[storageName];\n        each(store, function (el) {\n          el && (delEls.push(el), inner(el).willDelete = true);\n        });\n      });\n      return willDeleteEls;\n    }\n    function renderFinally() {\n      each(willDeleteEls, function (els) {\n        each(els, function (el) {\n          el.parent && el.parent.remove(el);\n        });\n      });\n      each(willInvisibleEls, function (el) {\n        el.invisible = true; // Setting invisible is for optimizing, so no need to set dirty,\n        // just mark as invisible.\n\n        el.dirty();\n      });\n    }\n  };\n  TreemapView.prototype._doAnimation = function (containerGroup, renderResult, seriesModel, reRoot) {\n    var durationOption = seriesModel.get('animationDurationUpdate');\n    var easingOption = seriesModel.get('animationEasing'); // TODO: do not support function until necessary.\n\n    var duration = (isFunction(durationOption) ? 0 : durationOption) || 0;\n    var easing = (isFunction(easingOption) ? null : easingOption) || 'cubicOut';\n    var animationWrap = animationUtil.createWrap(); // Make delete animations.\n\n    each(renderResult.willDeleteEls, function (store, storageName) {\n      each(store, function (el, rawIndex) {\n        if (el.invisible) {\n          return;\n        }\n        var parent = el.parent; // Always has parent, and parent is nodeGroup.\n\n        var target;\n        var innerStore = inner(parent);\n        if (reRoot && reRoot.direction === 'drillDown') {\n          target = parent === reRoot.rootNodeGroup // This is the content element of view root.\n          // Only `content` will enter this branch, because\n          // `background` and `nodeGroup` will not be deleted.\n          ? {\n            shape: {\n              x: 0,\n              y: 0,\n              width: innerStore.nodeWidth,\n              height: innerStore.nodeHeight\n            },\n            style: {\n              opacity: 0\n            }\n          } // Others.\n          : {\n            style: {\n              opacity: 0\n            }\n          };\n        } else {\n          var targetX = 0;\n          var targetY = 0;\n          if (!innerStore.willDelete) {\n            // Let node animate to right-bottom corner, cooperating with fadeout,\n            // which is appropriate for user understanding.\n            // Divided by 2 for reRoot rolling up effect.\n            targetX = innerStore.nodeWidth / 2;\n            targetY = innerStore.nodeHeight / 2;\n          }\n          target = storageName === 'nodeGroup' ? {\n            x: targetX,\n            y: targetY,\n            style: {\n              opacity: 0\n            }\n          } : {\n            shape: {\n              x: targetX,\n              y: targetY,\n              width: 0,\n              height: 0\n            },\n            style: {\n              opacity: 0\n            }\n          };\n        } // TODO: do not support delay until necessary.\n\n        target && animationWrap.add(el, target, duration, 0, easing);\n      });\n    }); // Make other animations\n\n    each(this._storage, function (store, storageName) {\n      each(store, function (el, rawIndex) {\n        var last = renderResult.lastsForAnimation[storageName][rawIndex];\n        var target = {};\n        if (!last) {\n          return;\n        }\n        if (el instanceof graphic.Group) {\n          if (last.oldX != null) {\n            target.x = el.x;\n            target.y = el.y;\n            el.x = last.oldX;\n            el.y = last.oldY;\n          }\n        } else {\n          if (last.oldShape) {\n            target.shape = extend({}, el.shape);\n            el.setShape(last.oldShape);\n          }\n          if (last.fadein) {\n            el.setStyle('opacity', 0);\n            target.style = {\n              opacity: 1\n            };\n          } // When animation is stopped for succedent animation starting,\n          // el.style.opacity might not be 1\n          else if (el.style.opacity !== 1) {\n            target.style = {\n              opacity: 1\n            };\n          }\n        }\n        animationWrap.add(el, target, duration, 0, easing);\n      });\n    }, this);\n    this._state = 'animating';\n    animationWrap.finished(bind(function () {\n      this._state = 'ready';\n      renderResult.renderFinally();\n    }, this)).start();\n  };\n  TreemapView.prototype._resetController = function (api) {\n    var controller = this._controller; // Init controller.\n\n    if (!controller) {\n      controller = this._controller = new RoamController(api.getZr());\n      controller.enable(this.seriesModel.get('roam'));\n      controller.on('pan', bind(this._onPan, this));\n      controller.on('zoom', bind(this._onZoom, this));\n    }\n    var rect = new BoundingRect(0, 0, api.getWidth(), api.getHeight());\n    controller.setPointerChecker(function (e, x, y) {\n      return rect.contain(x, y);\n    });\n  };\n  TreemapView.prototype._clearController = function () {\n    var controller = this._controller;\n    if (controller) {\n      controller.dispose();\n      controller = null;\n    }\n  };\n  TreemapView.prototype._onPan = function (e) {\n    if (this._state !== 'animating' && (Math.abs(e.dx) > DRAG_THRESHOLD || Math.abs(e.dy) > DRAG_THRESHOLD)) {\n      // These param must not be cached.\n      var root = this.seriesModel.getData().tree.root;\n      if (!root) {\n        return;\n      }\n      var rootLayout = root.getLayout();\n      if (!rootLayout) {\n        return;\n      }\n      this.api.dispatchAction({\n        type: 'treemapMove',\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        rootRect: {\n          x: rootLayout.x + e.dx,\n          y: rootLayout.y + e.dy,\n          width: rootLayout.width,\n          height: rootLayout.height\n        }\n      });\n    }\n  };\n  TreemapView.prototype._onZoom = function (e) {\n    var mouseX = e.originX;\n    var mouseY = e.originY;\n    if (this._state !== 'animating') {\n      // These param must not be cached.\n      var root = this.seriesModel.getData().tree.root;\n      if (!root) {\n        return;\n      }\n      var rootLayout = root.getLayout();\n      if (!rootLayout) {\n        return;\n      }\n      var rect = new BoundingRect(rootLayout.x, rootLayout.y, rootLayout.width, rootLayout.height);\n      var layoutInfo = this.seriesModel.layoutInfo; // Transform mouse coord from global to containerGroup.\n\n      mouseX -= layoutInfo.x;\n      mouseY -= layoutInfo.y; // Scale root bounding rect.\n\n      var m = matrix.create();\n      matrix.translate(m, m, [-mouseX, -mouseY]);\n      matrix.scale(m, m, [e.scale, e.scale]);\n      matrix.translate(m, m, [mouseX, mouseY]);\n      rect.applyTransform(m);\n      this.api.dispatchAction({\n        type: 'treemapRender',\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        rootRect: {\n          x: rect.x,\n          y: rect.y,\n          width: rect.width,\n          height: rect.height\n        }\n      });\n    }\n  };\n  TreemapView.prototype._initEvents = function (containerGroup) {\n    var _this = this;\n    containerGroup.on('click', function (e) {\n      if (_this._state !== 'ready') {\n        return;\n      }\n      var nodeClick = _this.seriesModel.get('nodeClick', true);\n      if (!nodeClick) {\n        return;\n      }\n      var targetInfo = _this.findTarget(e.offsetX, e.offsetY);\n      if (!targetInfo) {\n        return;\n      }\n      var node = targetInfo.node;\n      if (node.getLayout().isLeafRoot) {\n        _this._rootToNode(targetInfo);\n      } else {\n        if (nodeClick === 'zoomToNode') {\n          _this._zoomToNode(targetInfo);\n        } else if (nodeClick === 'link') {\n          var itemModel = node.hostTree.data.getItemModel(node.dataIndex);\n          var link = itemModel.get('link', true);\n          var linkTarget = itemModel.get('target', true) || 'blank';\n          link && windowOpen(link, linkTarget);\n        }\n      }\n    }, this);\n  };\n  TreemapView.prototype._renderBreadcrumb = function (seriesModel, api, targetInfo) {\n    var _this = this;\n    if (!targetInfo) {\n      targetInfo = seriesModel.get('leafDepth', true) != null ? {\n        node: seriesModel.getViewRoot()\n      } // FIXME\n      // better way?\n      // Find breadcrumb tail on center of containerGroup.\n      : this.findTarget(api.getWidth() / 2, api.getHeight() / 2);\n      if (!targetInfo) {\n        targetInfo = {\n          node: seriesModel.getData().tree.root\n        };\n      }\n    }\n    (this._breadcrumb || (this._breadcrumb = new Breadcrumb(this.group))).render(seriesModel, api, targetInfo.node, function (node) {\n      if (_this._state !== 'animating') {\n        helper.aboveViewRoot(seriesModel.getViewRoot(), node) ? _this._rootToNode({\n          node: node\n        }) : _this._zoomToNode({\n          node: node\n        });\n      }\n    });\n  };\n  /**\n   * @override\n   */\n\n  TreemapView.prototype.remove = function () {\n    this._clearController();\n    this._containerGroup && this._containerGroup.removeAll();\n    this._storage = createStorage();\n    this._state = 'ready';\n    this._breadcrumb && this._breadcrumb.remove();\n  };\n  TreemapView.prototype.dispose = function () {\n    this._clearController();\n  };\n  TreemapView.prototype._zoomToNode = function (targetInfo) {\n    this.api.dispatchAction({\n      type: 'treemapZoomToNode',\n      from: this.uid,\n      seriesId: this.seriesModel.id,\n      targetNode: targetInfo.node\n    });\n  };\n  TreemapView.prototype._rootToNode = function (targetInfo) {\n    this.api.dispatchAction({\n      type: 'treemapRootToNode',\n      from: this.uid,\n      seriesId: this.seriesModel.id,\n      targetNode: targetInfo.node\n    });\n  };\n  /**\n   * @public\n   * @param {number} x Global coord x.\n   * @param {number} y Global coord y.\n   * @return {Object} info If not found, return undefined;\n   * @return {number} info.node Target node.\n   * @return {number} info.offsetX x refer to target node.\n   * @return {number} info.offsetY y refer to target node.\n   */\n\n  TreemapView.prototype.findTarget = function (x, y) {\n    var targetInfo;\n    var viewRoot = this.seriesModel.getViewRoot();\n    viewRoot.eachNode({\n      attr: 'viewChildren',\n      order: 'preorder'\n    }, function (node) {\n      var bgEl = this._storage.background[node.getRawIndex()]; // If invisible, there might be no element.\n\n      if (bgEl) {\n        var point = bgEl.transformCoordToLocal(x, y);\n        var shape = bgEl.shape; // For performance consideration, don't use 'getBoundingRect'.\n\n        if (shape.x <= point[0] && point[0] <= shape.x + shape.width && shape.y <= point[1] && point[1] <= shape.y + shape.height) {\n          targetInfo = {\n            node: node,\n            offsetX: point[0],\n            offsetY: point[1]\n          };\n        } else {\n          return false; // Suppress visit subtree.\n        }\n      }\n    }, this);\n    return targetInfo;\n  };\n  TreemapView.type = 'treemap';\n  return TreemapView;\n}(ChartView);\n/**\n * @inner\n */\n\nfunction createStorage() {\n  return {\n    nodeGroup: [],\n    background: [],\n    content: []\n  };\n}\n/**\n * @inner\n * @return Return undefined means do not travel further.\n */\n\nfunction renderNode(seriesModel, thisStorage, oldStorage, reRoot, lastsForAnimation, willInvisibleEls, thisNode, oldNode, parentGroup, depth) {\n  // Whether under viewRoot.\n  if (!thisNode) {\n    // Deleting nodes will be performed finally. This method just find\n    // element from old storage, or create new element, set them to new\n    // storage, and set styles.\n    return;\n  } // -------------------------------------------------------------------\n  // Start of closure variables available in \"Procedures in renderNode\".\n\n  var thisLayout = thisNode.getLayout();\n  var data = seriesModel.getData();\n  var nodeModel = thisNode.getModel(); // Only for enabling highlight/downplay. Clear firstly.\n  // Because some node will not be rendered.\n\n  data.setItemGraphicEl(thisNode.dataIndex, null);\n  if (!thisLayout || !thisLayout.isInView) {\n    return;\n  }\n  var thisWidth = thisLayout.width;\n  var thisHeight = thisLayout.height;\n  var borderWidth = thisLayout.borderWidth;\n  var thisInvisible = thisLayout.invisible;\n  var thisRawIndex = thisNode.getRawIndex();\n  var oldRawIndex = oldNode && oldNode.getRawIndex();\n  var thisViewChildren = thisNode.viewChildren;\n  var upperHeight = thisLayout.upperHeight;\n  var isParent = thisViewChildren && thisViewChildren.length;\n  var itemStyleNormalModel = nodeModel.getModel('itemStyle');\n  var itemStyleEmphasisModel = nodeModel.getModel(['emphasis', 'itemStyle']);\n  var itemStyleBlurModel = nodeModel.getModel(['blur', 'itemStyle']);\n  var itemStyleSelectModel = nodeModel.getModel(['select', 'itemStyle']);\n  var borderRadius = itemStyleNormalModel.get('borderRadius') || 0; // End of closure ariables available in \"Procedures in renderNode\".\n  // -----------------------------------------------------------------\n  // Node group\n\n  var group = giveGraphic('nodeGroup', Group);\n  if (!group) {\n    return;\n  }\n  parentGroup.add(group); // x,y are not set when el is above view root.\n\n  group.x = thisLayout.x || 0;\n  group.y = thisLayout.y || 0;\n  group.markRedraw();\n  inner(group).nodeWidth = thisWidth;\n  inner(group).nodeHeight = thisHeight;\n  if (thisLayout.isAboveViewRoot) {\n    return group;\n  } // Background\n\n  var bg = giveGraphic('background', Rect, depth, Z2_BG);\n  bg && renderBackground(group, bg, isParent && thisLayout.upperLabelHeight);\n  var emphasisModel = nodeModel.getModel('emphasis');\n  var focus = emphasisModel.get('focus');\n  var blurScope = emphasisModel.get('blurScope');\n  var isDisabled = emphasisModel.get('disabled');\n  var focusOrIndices = focus === 'ancestor' ? thisNode.getAncestorsIndices() : focus === 'descendant' ? thisNode.getDescendantIndices() : focus; // No children, render content.\n\n  if (isParent) {\n    // Because of the implementation about \"traverse\" in graphic hover style, we\n    // can not set hover listener on the \"group\" of non-leaf node. Otherwise the\n    // hover event from the descendents will be listenered.\n    if (isHighDownDispatcher(group)) {\n      setAsHighDownDispatcher(group, false);\n    }\n    if (bg) {\n      setAsHighDownDispatcher(bg, !isDisabled); // Only for enabling highlight/downplay.\n\n      data.setItemGraphicEl(thisNode.dataIndex, bg);\n      enableHoverFocus(bg, focusOrIndices, blurScope);\n    }\n  } else {\n    var content = giveGraphic('content', Rect, depth, Z2_CONTENT);\n    content && renderContent(group, content);\n    bg.disableMorphing = true;\n    if (bg && isHighDownDispatcher(bg)) {\n      setAsHighDownDispatcher(bg, false);\n    }\n    setAsHighDownDispatcher(group, !isDisabled); // Only for enabling highlight/downplay.\n\n    data.setItemGraphicEl(thisNode.dataIndex, group);\n    enableHoverFocus(group, focusOrIndices, blurScope);\n  }\n  return group; // ----------------------------\n  // | Procedures in renderNode |\n  // ----------------------------\n\n  function renderBackground(group, bg, useUpperLabel) {\n    var ecData = getECData(bg); // For tooltip.\n\n    ecData.dataIndex = thisNode.dataIndex;\n    ecData.seriesIndex = seriesModel.seriesIndex;\n    bg.setShape({\n      x: 0,\n      y: 0,\n      width: thisWidth,\n      height: thisHeight,\n      r: borderRadius\n    });\n    if (thisInvisible) {\n      // If invisible, do not set visual, otherwise the element will\n      // change immediately before animation. We think it is OK to\n      // remain its origin color when moving out of the view window.\n      processInvisible(bg);\n    } else {\n      bg.invisible = false;\n      var style = thisNode.getVisual('style');\n      var visualBorderColor = style.stroke;\n      var normalStyle = getItemStyleNormal(itemStyleNormalModel);\n      normalStyle.fill = visualBorderColor;\n      var emphasisStyle = getStateItemStyle(itemStyleEmphasisModel);\n      emphasisStyle.fill = itemStyleEmphasisModel.get('borderColor');\n      var blurStyle = getStateItemStyle(itemStyleBlurModel);\n      blurStyle.fill = itemStyleBlurModel.get('borderColor');\n      var selectStyle = getStateItemStyle(itemStyleSelectModel);\n      selectStyle.fill = itemStyleSelectModel.get('borderColor');\n      if (useUpperLabel) {\n        var upperLabelWidth = thisWidth - 2 * borderWidth;\n        prepareText(\n        // PENDING: convert ZRColor to ColorString for text.\n        bg, visualBorderColor, style.opacity, {\n          x: borderWidth,\n          y: 0,\n          width: upperLabelWidth,\n          height: upperHeight\n        });\n      } // For old bg.\n      else {\n        bg.removeTextContent();\n      }\n      bg.setStyle(normalStyle);\n      bg.ensureState('emphasis').style = emphasisStyle;\n      bg.ensureState('blur').style = blurStyle;\n      bg.ensureState('select').style = selectStyle;\n      setDefaultStateProxy(bg);\n    }\n    group.add(bg);\n  }\n  function renderContent(group, content) {\n    var ecData = getECData(content); // For tooltip.\n\n    ecData.dataIndex = thisNode.dataIndex;\n    ecData.seriesIndex = seriesModel.seriesIndex;\n    var contentWidth = Math.max(thisWidth - 2 * borderWidth, 0);\n    var contentHeight = Math.max(thisHeight - 2 * borderWidth, 0);\n    content.culling = true;\n    content.setShape({\n      x: borderWidth,\n      y: borderWidth,\n      width: contentWidth,\n      height: contentHeight,\n      r: borderRadius\n    });\n    if (thisInvisible) {\n      // If invisible, do not set visual, otherwise the element will\n      // change immediately before animation. We think it is OK to\n      // remain its origin color when moving out of the view window.\n      processInvisible(content);\n    } else {\n      content.invisible = false;\n      var nodeStyle = thisNode.getVisual('style');\n      var visualColor = nodeStyle.fill;\n      var normalStyle = getItemStyleNormal(itemStyleNormalModel);\n      normalStyle.fill = visualColor;\n      normalStyle.decal = nodeStyle.decal;\n      var emphasisStyle = getStateItemStyle(itemStyleEmphasisModel);\n      var blurStyle = getStateItemStyle(itemStyleBlurModel);\n      var selectStyle = getStateItemStyle(itemStyleSelectModel); // PENDING: convert ZRColor to ColorString for text.\n\n      prepareText(content, visualColor, nodeStyle.opacity, null);\n      content.setStyle(normalStyle);\n      content.ensureState('emphasis').style = emphasisStyle;\n      content.ensureState('blur').style = blurStyle;\n      content.ensureState('select').style = selectStyle;\n      setDefaultStateProxy(content);\n    }\n    group.add(content);\n  }\n  function processInvisible(element) {\n    // Delay invisible setting utill animation finished,\n    // avoid element vanish suddenly before animation.\n    !element.invisible && willInvisibleEls.push(element);\n  }\n  function prepareText(rectEl, visualColor, visualOpacity,\n  // Can be null/undefined\n  upperLabelRect) {\n    var normalLabelModel = nodeModel.getModel(upperLabelRect ? PATH_UPPERLABEL_NORMAL : PATH_LABEL_NOAMAL);\n    var defaultText = convertOptionIdName(nodeModel.get('name'), null);\n    var isShow = normalLabelModel.getShallow('show');\n    setLabelStyle(rectEl, getLabelStatesModels(nodeModel, upperLabelRect ? PATH_UPPERLABEL_NORMAL : PATH_LABEL_NOAMAL), {\n      defaultText: isShow ? defaultText : null,\n      inheritColor: visualColor,\n      defaultOpacity: visualOpacity,\n      labelFetcher: seriesModel,\n      labelDataIndex: thisNode.dataIndex\n    });\n    var textEl = rectEl.getTextContent();\n    if (!textEl) {\n      return;\n    }\n    var textStyle = textEl.style;\n    var textPadding = normalizeCssArray(textStyle.padding || 0);\n    if (upperLabelRect) {\n      rectEl.setTextConfig({\n        layoutRect: upperLabelRect\n      });\n      textEl.disableLabelLayout = true;\n    }\n    textEl.beforeUpdate = function () {\n      var width = Math.max((upperLabelRect ? upperLabelRect.width : rectEl.shape.width) - textPadding[1] - textPadding[3], 0);\n      var height = Math.max((upperLabelRect ? upperLabelRect.height : rectEl.shape.height) - textPadding[0] - textPadding[2], 0);\n      if (textStyle.width !== width || textStyle.height !== height) {\n        textEl.setStyle({\n          width: width,\n          height: height\n        });\n      }\n    };\n    textStyle.truncateMinChar = 2;\n    textStyle.lineOverflow = 'truncate';\n    addDrillDownIcon(textStyle, upperLabelRect, thisLayout);\n    var textEmphasisState = textEl.getState('emphasis');\n    addDrillDownIcon(textEmphasisState ? textEmphasisState.style : null, upperLabelRect, thisLayout);\n  }\n  function addDrillDownIcon(style, upperLabelRect, thisLayout) {\n    var text = style ? style.text : null;\n    if (!upperLabelRect && thisLayout.isLeafRoot && text != null) {\n      var iconChar = seriesModel.get('drillDownIcon', true);\n      style.text = iconChar ? iconChar + ' ' + text : text;\n    }\n  }\n  function giveGraphic(storageName, Ctor, depth, z) {\n    var element = oldRawIndex != null && oldStorage[storageName][oldRawIndex];\n    var lasts = lastsForAnimation[storageName];\n    if (element) {\n      // Remove from oldStorage\n      oldStorage[storageName][oldRawIndex] = null;\n      prepareAnimationWhenHasOld(lasts, element);\n    } // If invisible and no old element, do not create new element (for optimizing).\n    else if (!thisInvisible) {\n      element = new Ctor();\n      if (element instanceof Displayable) {\n        element.z2 = calculateZ2(depth, z);\n      }\n      prepareAnimationWhenNoOld(lasts, element);\n    } // Set to thisStorage\n\n    return thisStorage[storageName][thisRawIndex] = element;\n  }\n  function prepareAnimationWhenHasOld(lasts, element) {\n    var lastCfg = lasts[thisRawIndex] = {};\n    if (element instanceof Group) {\n      lastCfg.oldX = element.x;\n      lastCfg.oldY = element.y;\n    } else {\n      lastCfg.oldShape = extend({}, element.shape);\n    }\n  } // If a element is new, we need to find the animation start point carefully,\n  // otherwise it will looks strange when 'zoomToNode'.\n\n  function prepareAnimationWhenNoOld(lasts, element) {\n    var lastCfg = lasts[thisRawIndex] = {};\n    var parentNode = thisNode.parentNode;\n    var isGroup = element instanceof graphic.Group;\n    if (parentNode && (!reRoot || reRoot.direction === 'drillDown')) {\n      var parentOldX = 0;\n      var parentOldY = 0; // New nodes appear from right-bottom corner in 'zoomToNode' animation.\n      // For convenience, get old bounding rect from background.\n\n      var parentOldBg = lastsForAnimation.background[parentNode.getRawIndex()];\n      if (!reRoot && parentOldBg && parentOldBg.oldShape) {\n        parentOldX = parentOldBg.oldShape.width;\n        parentOldY = parentOldBg.oldShape.height;\n      } // When no parent old shape found, its parent is new too,\n      // so we can just use {x:0, y:0}.\n\n      if (isGroup) {\n        lastCfg.oldX = 0;\n        lastCfg.oldY = parentOldY;\n      } else {\n        lastCfg.oldShape = {\n          x: parentOldX,\n          y: parentOldY,\n          width: 0,\n          height: 0\n        };\n      }\n    } // Fade in, user can be aware that these nodes are new.\n\n    lastCfg.fadein = !isGroup;\n  }\n} // We cannot set all background with the same z, because the behaviour of\n// drill down and roll up differ background creation sequence from tree\n// hierarchy sequence, which cause lower background elements to overlap\n// upper ones. So we calculate z based on depth.\n// Moreover, we try to shrink down z interval to [0, 1] to avoid that\n// treemap with large z overlaps other components.\n\nfunction calculateZ2(depth, z2InLevel) {\n  return depth * Z2_BASE + z2InLevel;\n}\nexport default TreemapView;","import \"core-js/modules/es.array.fill.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.function.name.js\";\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport VisualMapping from '../../visual/VisualMapping.js';\nimport { each, extend, isArray } from 'zrender/lib/core/util.js';\nimport { modifyHSL, modifyAlpha } from 'zrender/lib/tool/color.js';\nimport { makeInner } from '../../util/model.js';\nvar ITEM_STYLE_NORMAL = 'itemStyle';\nvar inner = makeInner();\nexport default {\n  seriesType: 'treemap',\n  reset: function reset(seriesModel) {\n    var tree = seriesModel.getData().tree;\n    var root = tree.root;\n    if (root.isRemoved()) {\n      return;\n    }\n    travelTree(root,\n    // Visual should calculate from tree root but not view root.\n    {}, seriesModel.getViewRoot().getAncestors(), seriesModel);\n  }\n};\nfunction travelTree(node, designatedVisual, viewRootAncestors, seriesModel) {\n  var nodeModel = node.getModel();\n  var nodeLayout = node.getLayout();\n  var data = node.hostTree.data; // Optimize\n\n  if (!nodeLayout || nodeLayout.invisible || !nodeLayout.isInView) {\n    return;\n  }\n  var nodeItemStyleModel = nodeModel.getModel(ITEM_STYLE_NORMAL);\n  var visuals = buildVisuals(nodeItemStyleModel, designatedVisual, seriesModel);\n  var existsStyle = data.ensureUniqueItemVisual(node.dataIndex, 'style'); // calculate border color\n\n  var borderColor = nodeItemStyleModel.get('borderColor');\n  var borderColorSaturation = nodeItemStyleModel.get('borderColorSaturation');\n  var thisNodeColor;\n  if (borderColorSaturation != null) {\n    // For performance, do not always execute 'calculateColor'.\n    thisNodeColor = calculateColor(visuals);\n    borderColor = calculateBorderColor(borderColorSaturation, thisNodeColor);\n  }\n  existsStyle.stroke = borderColor;\n  var viewChildren = node.viewChildren;\n  if (!viewChildren || !viewChildren.length) {\n    thisNodeColor = calculateColor(visuals); // Apply visual to this node.\n\n    existsStyle.fill = thisNodeColor;\n  } else {\n    var mapping_1 = buildVisualMapping(node, nodeModel, nodeLayout, nodeItemStyleModel, visuals, viewChildren); // Designate visual to children.\n\n    each(viewChildren, function (child, index) {\n      // If higher than viewRoot, only ancestors of viewRoot is needed to visit.\n      if (child.depth >= viewRootAncestors.length || child === viewRootAncestors[child.depth]) {\n        var childVisual = mapVisual(nodeModel, visuals, child, index, mapping_1, seriesModel);\n        travelTree(child, childVisual, viewRootAncestors, seriesModel);\n      }\n    });\n  }\n}\nfunction buildVisuals(nodeItemStyleModel, designatedVisual, seriesModel) {\n  var visuals = extend({}, designatedVisual);\n  var designatedVisualItemStyle = seriesModel.designatedVisualItemStyle;\n  each(['color', 'colorAlpha', 'colorSaturation'], function (visualName) {\n    // Priority: thisNode > thisLevel > parentNodeDesignated > seriesModel\n    designatedVisualItemStyle[visualName] = designatedVisual[visualName];\n    var val = nodeItemStyleModel.get(visualName);\n    designatedVisualItemStyle[visualName] = null;\n    val != null && (visuals[visualName] = val);\n  });\n  return visuals;\n}\nfunction calculateColor(visuals) {\n  var color = getValueVisualDefine(visuals, 'color');\n  if (color) {\n    var colorAlpha = getValueVisualDefine(visuals, 'colorAlpha');\n    var colorSaturation = getValueVisualDefine(visuals, 'colorSaturation');\n    if (colorSaturation) {\n      color = modifyHSL(color, null, null, colorSaturation);\n    }\n    if (colorAlpha) {\n      color = modifyAlpha(color, colorAlpha);\n    }\n    return color;\n  }\n}\nfunction calculateBorderColor(borderColorSaturation, thisNodeColor) {\n  return thisNodeColor != null // Can only be string\n  ? modifyHSL(thisNodeColor, null, null, borderColorSaturation) : null;\n}\nfunction getValueVisualDefine(visuals, name) {\n  var value = visuals[name];\n  if (value != null && value !== 'none') {\n    return value;\n  }\n}\nfunction buildVisualMapping(node, nodeModel, nodeLayout, nodeItemStyleModel, visuals, viewChildren) {\n  if (!viewChildren || !viewChildren.length) {\n    return;\n  }\n  var rangeVisual = getRangeVisual(nodeModel, 'color') || visuals.color != null && visuals.color !== 'none' && (getRangeVisual(nodeModel, 'colorAlpha') || getRangeVisual(nodeModel, 'colorSaturation'));\n  if (!rangeVisual) {\n    return;\n  }\n  var visualMin = nodeModel.get('visualMin');\n  var visualMax = nodeModel.get('visualMax');\n  var dataExtent = nodeLayout.dataExtent.slice();\n  visualMin != null && visualMin < dataExtent[0] && (dataExtent[0] = visualMin);\n  visualMax != null && visualMax > dataExtent[1] && (dataExtent[1] = visualMax);\n  var colorMappingBy = nodeModel.get('colorMappingBy');\n  var opt = {\n    type: rangeVisual.name,\n    dataExtent: dataExtent,\n    visual: rangeVisual.range\n  };\n  if (opt.type === 'color' && (colorMappingBy === 'index' || colorMappingBy === 'id')) {\n    opt.mappingMethod = 'category';\n    opt.loop = true; // categories is ordinal, so do not set opt.categories.\n  } else {\n    opt.mappingMethod = 'linear';\n  }\n  var mapping = new VisualMapping(opt);\n  inner(mapping).drColorMappingBy = colorMappingBy;\n  return mapping;\n} // Notice: If we don't have the attribute 'colorRange', but only use\n// attribute 'color' to represent both concepts of 'colorRange' and 'color',\n// (It means 'colorRange' when 'color' is Array, means 'color' when not array),\n// this problem will be encountered:\n// If a level-1 node doesn't have children, and its siblings have children,\n// and colorRange is set on level-1, then the node cannot be colored.\n// So we separate 'colorRange' and 'color' to different attributes.\n\nfunction getRangeVisual(nodeModel, name) {\n  // 'colorRange', 'colorARange', 'colorSRange'.\n  // If not exists on this node, fetch from levels and series.\n  var range = nodeModel.get(name);\n  return isArray(range) && range.length ? {\n    name: name,\n    range: range\n  } : null;\n}\nfunction mapVisual(nodeModel, visuals, child, index, mapping, seriesModel) {\n  var childVisuals = extend({}, visuals);\n  if (mapping) {\n    // Only support color, colorAlpha, colorSaturation.\n    var mappingType = mapping.type;\n    var colorMappingBy = mappingType === 'color' && inner(mapping).drColorMappingBy;\n    var value = colorMappingBy === 'index' ? index : colorMappingBy === 'id' ? seriesModel.mapIdToIndex(child.getId()) : child.getValue(nodeModel.get('visualDimension'));\n    childVisuals[mappingType] = mapping.mapValueToVisual(value);\n  }\n  return childVisuals;\n}","import \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.splice.js\";\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* A third-party license is embedded for some of the code in this file:\n* The treemap layout implementation was originally copied from\n* \"d3.js\" with some modifications made for this project.\n* (See more details in the comment of the method \"squarify\" below.)\n* The use of the source code of this file is also subject to the terms\n* and consitions of the license of \"d3.js\" (BSD-3Clause, see\n* </licenses/LICENSE-d3>).\n*/\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport BoundingRect from 'zrender/lib/core/BoundingRect.js';\nimport { parsePercent, MAX_SAFE_INTEGER } from '../../util/number.js';\nimport * as layout from '../../util/layout.js';\nimport * as helper from '../helper/treeHelper.js';\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar retrieveValue = zrUtil.retrieve;\nvar each = zrUtil.each;\nvar PATH_BORDER_WIDTH = ['itemStyle', 'borderWidth'];\nvar PATH_GAP_WIDTH = ['itemStyle', 'gapWidth'];\nvar PATH_UPPER_LABEL_SHOW = ['upperLabel', 'show'];\nvar PATH_UPPER_LABEL_HEIGHT = ['upperLabel', 'height'];\n;\n/**\n * @public\n */\n\nexport default {\n  seriesType: 'treemap',\n  reset: function reset(seriesModel, ecModel, api, payload) {\n    // Layout result in each node:\n    // {x, y, width, height, area, borderWidth}\n    var ecWidth = api.getWidth();\n    var ecHeight = api.getHeight();\n    var seriesOption = seriesModel.option;\n    var layoutInfo = layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n    var size = seriesOption.size || []; // Compatible with ec2.\n\n    var containerWidth = parsePercent(retrieveValue(layoutInfo.width, size[0]), ecWidth);\n    var containerHeight = parsePercent(retrieveValue(layoutInfo.height, size[1]), ecHeight); // Fetch payload info.\n\n    var payloadType = payload && payload.type;\n    var types = ['treemapZoomToNode', 'treemapRootToNode'];\n    var targetInfo = helper.retrieveTargetInfo(payload, types, seriesModel);\n    var rootRect = payloadType === 'treemapRender' || payloadType === 'treemapMove' ? payload.rootRect : null;\n    var viewRoot = seriesModel.getViewRoot();\n    var viewAbovePath = helper.getPathToRoot(viewRoot);\n    if (payloadType !== 'treemapMove') {\n      var rootSize = payloadType === 'treemapZoomToNode' ? estimateRootSize(seriesModel, targetInfo, viewRoot, containerWidth, containerHeight) : rootRect ? [rootRect.width, rootRect.height] : [containerWidth, containerHeight];\n      var sort_1 = seriesOption.sort;\n      if (sort_1 && sort_1 !== 'asc' && sort_1 !== 'desc') {\n        // Default to be desc order.\n        sort_1 = 'desc';\n      }\n      var options = {\n        squareRatio: seriesOption.squareRatio,\n        sort: sort_1,\n        leafDepth: seriesOption.leafDepth\n      }; // layout should be cleared because using updateView but not update.\n\n      viewRoot.hostTree.clearLayouts(); // TODO\n      // optimize: if out of view clip, do not layout.\n      // But take care that if do not render node out of view clip,\n      // how to calculate start po\n\n      var viewRootLayout_1 = {\n        x: 0,\n        y: 0,\n        width: rootSize[0],\n        height: rootSize[1],\n        area: rootSize[0] * rootSize[1]\n      };\n      viewRoot.setLayout(viewRootLayout_1);\n      squarify(viewRoot, options, false, 0); // Supplement layout.\n\n      viewRootLayout_1 = viewRoot.getLayout();\n      each(viewAbovePath, function (node, index) {\n        var childValue = (viewAbovePath[index + 1] || viewRoot).getValue();\n        node.setLayout(zrUtil.extend({\n          dataExtent: [childValue, childValue],\n          borderWidth: 0,\n          upperHeight: 0\n        }, viewRootLayout_1));\n      });\n    }\n    var treeRoot = seriesModel.getData().tree.root;\n    treeRoot.setLayout(calculateRootPosition(layoutInfo, rootRect, targetInfo), true);\n    seriesModel.setLayoutInfo(layoutInfo); // FIXME\n    // 现在没有clip功能，暂时取ec高宽。\n\n    prunning(treeRoot,\n    // Transform to base element coordinate system.\n    new BoundingRect(-layoutInfo.x, -layoutInfo.y, ecWidth, ecHeight), viewAbovePath, viewRoot, 0);\n  }\n};\n/**\n * Layout treemap with squarify algorithm.\n * The original presentation of this algorithm\n * was made by Mark Bruls, Kees Huizing, and Jarke J. van Wijk\n * <https://graphics.ethz.ch/teaching/scivis_common/Literature/squarifiedTreeMaps.pdf>.\n * The implementation of this algorithm was originally copied from \"d3.js\"\n * <https://github.com/d3/d3/blob/9cc9a875e636a1dcf36cc1e07bdf77e1ad6e2c74/src/layout/treemap.js>\n * with some modifications made for this program.\n * See the license statement at the head of this file.\n *\n * @protected\n * @param {module:echarts/data/Tree~TreeNode} node\n * @param {Object} options\n * @param {string} options.sort 'asc' or 'desc'\n * @param {number} options.squareRatio\n * @param {boolean} hideChildren\n * @param {number} depth\n */\n\nfunction squarify(node, options, hideChildren, depth) {\n  var width;\n  var height;\n  if (node.isRemoved()) {\n    return;\n  }\n  var thisLayout = node.getLayout();\n  width = thisLayout.width;\n  height = thisLayout.height; // Considering border and gap\n\n  var nodeModel = node.getModel();\n  var borderWidth = nodeModel.get(PATH_BORDER_WIDTH);\n  var halfGapWidth = nodeModel.get(PATH_GAP_WIDTH) / 2;\n  var upperLabelHeight = getUpperLabelHeight(nodeModel);\n  var upperHeight = Math.max(borderWidth, upperLabelHeight);\n  var layoutOffset = borderWidth - halfGapWidth;\n  var layoutOffsetUpper = upperHeight - halfGapWidth;\n  node.setLayout({\n    borderWidth: borderWidth,\n    upperHeight: upperHeight,\n    upperLabelHeight: upperLabelHeight\n  }, true);\n  width = mathMax(width - 2 * layoutOffset, 0);\n  height = mathMax(height - layoutOffset - layoutOffsetUpper, 0);\n  var totalArea = width * height;\n  var viewChildren = initChildren(node, nodeModel, totalArea, options, hideChildren, depth);\n  if (!viewChildren.length) {\n    return;\n  }\n  var rect = {\n    x: layoutOffset,\n    y: layoutOffsetUpper,\n    width: width,\n    height: height\n  };\n  var rowFixedLength = mathMin(width, height);\n  var best = Infinity; // the best row score so far\n\n  var row = [];\n  row.area = 0;\n  for (var i = 0, len = viewChildren.length; i < len;) {\n    var child = viewChildren[i];\n    row.push(child);\n    row.area += child.getLayout().area;\n    var score = worst(row, rowFixedLength, options.squareRatio); // continue with this orientation\n\n    if (score <= best) {\n      i++;\n      best = score;\n    } // abort, and try a different orientation\n    else {\n      row.area -= row.pop().getLayout().area;\n      position(row, rowFixedLength, rect, halfGapWidth, false);\n      rowFixedLength = mathMin(rect.width, rect.height);\n      row.length = row.area = 0;\n      best = Infinity;\n    }\n  }\n  if (row.length) {\n    position(row, rowFixedLength, rect, halfGapWidth, true);\n  }\n  if (!hideChildren) {\n    var childrenVisibleMin = nodeModel.get('childrenVisibleMin');\n    if (childrenVisibleMin != null && totalArea < childrenVisibleMin) {\n      hideChildren = true;\n    }\n  }\n  for (var i = 0, len = viewChildren.length; i < len; i++) {\n    squarify(viewChildren[i], options, hideChildren, depth + 1);\n  }\n}\n/**\n * Set area to each child, and calculate data extent for visual coding.\n */\n\nfunction initChildren(node, nodeModel, totalArea, options, hideChildren, depth) {\n  var viewChildren = node.children || [];\n  var orderBy = options.sort;\n  orderBy !== 'asc' && orderBy !== 'desc' && (orderBy = null);\n  var overLeafDepth = options.leafDepth != null && options.leafDepth <= depth; // leafDepth has higher priority.\n\n  if (hideChildren && !overLeafDepth) {\n    return node.viewChildren = [];\n  } // Sort children, order by desc.\n\n  viewChildren = zrUtil.filter(viewChildren, function (child) {\n    return !child.isRemoved();\n  });\n  sort(viewChildren, orderBy);\n  var info = statistic(nodeModel, viewChildren, orderBy);\n  if (info.sum === 0) {\n    return node.viewChildren = [];\n  }\n  info.sum = filterByThreshold(nodeModel, totalArea, info.sum, orderBy, viewChildren);\n  if (info.sum === 0) {\n    return node.viewChildren = [];\n  } // Set area to each child.\n\n  for (var i = 0, len = viewChildren.length; i < len; i++) {\n    var area = viewChildren[i].getValue() / info.sum * totalArea; // Do not use setLayout({...}, true), because it is needed to clear last layout.\n\n    viewChildren[i].setLayout({\n      area: area\n    });\n  }\n  if (overLeafDepth) {\n    viewChildren.length && node.setLayout({\n      isLeafRoot: true\n    }, true);\n    viewChildren.length = 0;\n  }\n  node.viewChildren = viewChildren;\n  node.setLayout({\n    dataExtent: info.dataExtent\n  }, true);\n  return viewChildren;\n}\n/**\n * Consider 'visibleMin'. Modify viewChildren and get new sum.\n */\n\nfunction filterByThreshold(nodeModel, totalArea, sum, orderBy, orderedChildren) {\n  // visibleMin is not supported yet when no option.sort.\n  if (!orderBy) {\n    return sum;\n  }\n  var visibleMin = nodeModel.get('visibleMin');\n  var len = orderedChildren.length;\n  var deletePoint = len; // Always travel from little value to big value.\n\n  for (var i = len - 1; i >= 0; i--) {\n    var value = orderedChildren[orderBy === 'asc' ? len - i - 1 : i].getValue();\n    if (value / sum * totalArea < visibleMin) {\n      deletePoint = i;\n      sum -= value;\n    }\n  }\n  orderBy === 'asc' ? orderedChildren.splice(0, len - deletePoint) : orderedChildren.splice(deletePoint, len - deletePoint);\n  return sum;\n}\n/**\n * Sort\n */\n\nfunction sort(viewChildren, orderBy) {\n  if (orderBy) {\n    viewChildren.sort(function (a, b) {\n      var diff = orderBy === 'asc' ? a.getValue() - b.getValue() : b.getValue() - a.getValue();\n      return diff === 0 ? orderBy === 'asc' ? a.dataIndex - b.dataIndex : b.dataIndex - a.dataIndex : diff;\n    });\n  }\n  return viewChildren;\n}\n/**\n * Statistic\n */\n\nfunction statistic(nodeModel, children, orderBy) {\n  // Calculate sum.\n  var sum = 0;\n  for (var i = 0, len = children.length; i < len; i++) {\n    sum += children[i].getValue();\n  } // Statistic data extent for latter visual coding.\n  // Notice: data extent should be calculate based on raw children\n  // but not filtered view children, otherwise visual mapping will not\n  // be stable when zoom (where children is filtered by visibleMin).\n\n  var dimension = nodeModel.get('visualDimension');\n  var dataExtent; // The same as area dimension.\n\n  if (!children || !children.length) {\n    dataExtent = [NaN, NaN];\n  } else if (dimension === 'value' && orderBy) {\n    dataExtent = [children[children.length - 1].getValue(), children[0].getValue()];\n    orderBy === 'asc' && dataExtent.reverse();\n  } // Other dimension.\n  else {\n    dataExtent = [Infinity, -Infinity];\n    each(children, function (child) {\n      var value = child.getValue(dimension);\n      value < dataExtent[0] && (dataExtent[0] = value);\n      value > dataExtent[1] && (dataExtent[1] = value);\n    });\n  }\n  return {\n    sum: sum,\n    dataExtent: dataExtent\n  };\n}\n/**\n * Computes the score for the specified row,\n * as the worst aspect ratio.\n */\n\nfunction worst(row, rowFixedLength, ratio) {\n  var areaMax = 0;\n  var areaMin = Infinity;\n  for (var i = 0, area = void 0, len = row.length; i < len; i++) {\n    area = row[i].getLayout().area;\n    if (area) {\n      area < areaMin && (areaMin = area);\n      area > areaMax && (areaMax = area);\n    }\n  }\n  var squareArea = row.area * row.area;\n  var f = rowFixedLength * rowFixedLength * ratio;\n  return squareArea ? mathMax(f * areaMax / squareArea, squareArea / (f * areaMin)) : Infinity;\n}\n/**\n * Positions the specified row of nodes. Modifies `rect`.\n */\n\nfunction position(row, rowFixedLength, rect, halfGapWidth, flush) {\n  // When rowFixedLength === rect.width,\n  // it is horizontal subdivision,\n  // rowFixedLength is the width of the subdivision,\n  // rowOtherLength is the height of the subdivision,\n  // and nodes will be positioned from left to right.\n  // wh[idx0WhenH] means: when horizontal,\n  //      wh[idx0WhenH] => wh[0] => 'width'.\n  //      xy[idx1WhenH] => xy[1] => 'y'.\n  var idx0WhenH = rowFixedLength === rect.width ? 0 : 1;\n  var idx1WhenH = 1 - idx0WhenH;\n  var xy = ['x', 'y'];\n  var wh = ['width', 'height'];\n  var last = rect[xy[idx0WhenH]];\n  var rowOtherLength = rowFixedLength ? row.area / rowFixedLength : 0;\n  if (flush || rowOtherLength > rect[wh[idx1WhenH]]) {\n    rowOtherLength = rect[wh[idx1WhenH]]; // over+underflow\n  }\n\n  for (var i = 0, rowLen = row.length; i < rowLen; i++) {\n    var node = row[i];\n    var nodeLayout = {};\n    var step = rowOtherLength ? node.getLayout().area / rowOtherLength : 0;\n    var wh1 = nodeLayout[wh[idx1WhenH]] = mathMax(rowOtherLength - 2 * halfGapWidth, 0); // We use Math.max/min to avoid negative width/height when considering gap width.\n\n    var remain = rect[xy[idx0WhenH]] + rect[wh[idx0WhenH]] - last;\n    var modWH = i === rowLen - 1 || remain < step ? remain : step;\n    var wh0 = nodeLayout[wh[idx0WhenH]] = mathMax(modWH - 2 * halfGapWidth, 0);\n    nodeLayout[xy[idx1WhenH]] = rect[xy[idx1WhenH]] + mathMin(halfGapWidth, wh1 / 2);\n    nodeLayout[xy[idx0WhenH]] = last + mathMin(halfGapWidth, wh0 / 2);\n    last += modWH;\n    node.setLayout(nodeLayout, true);\n  }\n  rect[xy[idx1WhenH]] += rowOtherLength;\n  rect[wh[idx1WhenH]] -= rowOtherLength;\n} // Return [containerWidth, containerHeight] as default.\n\nfunction estimateRootSize(seriesModel, targetInfo, viewRoot, containerWidth, containerHeight) {\n  // If targetInfo.node exists, we zoom to the node,\n  // so estimate whole width and height by target node.\n  var currNode = (targetInfo || {}).node;\n  var defaultSize = [containerWidth, containerHeight];\n  if (!currNode || currNode === viewRoot) {\n    return defaultSize;\n  }\n  var parent;\n  var viewArea = containerWidth * containerHeight;\n  var area = viewArea * seriesModel.option.zoomToNodeRatio;\n  while (parent = currNode.parentNode) {\n    // jshint ignore:line\n    var sum = 0;\n    var siblings = parent.children;\n    for (var i = 0, len = siblings.length; i < len; i++) {\n      sum += siblings[i].getValue();\n    }\n    var currNodeValue = currNode.getValue();\n    if (currNodeValue === 0) {\n      return defaultSize;\n    }\n    area *= sum / currNodeValue; // Considering border, suppose aspect ratio is 1.\n\n    var parentModel = parent.getModel();\n    var borderWidth = parentModel.get(PATH_BORDER_WIDTH);\n    var upperHeight = Math.max(borderWidth, getUpperLabelHeight(parentModel));\n    area += 4 * borderWidth * borderWidth + (3 * borderWidth + upperHeight) * Math.pow(area, 0.5);\n    area > MAX_SAFE_INTEGER && (area = MAX_SAFE_INTEGER);\n    currNode = parent;\n  }\n  area < viewArea && (area = viewArea);\n  var scale = Math.pow(area / viewArea, 0.5);\n  return [containerWidth * scale, containerHeight * scale];\n} // Root position based on coord of containerGroup\n\nfunction calculateRootPosition(layoutInfo, rootRect, targetInfo) {\n  if (rootRect) {\n    return {\n      x: rootRect.x,\n      y: rootRect.y\n    };\n  }\n  var defaultPosition = {\n    x: 0,\n    y: 0\n  };\n  if (!targetInfo) {\n    return defaultPosition;\n  } // If targetInfo is fetched by 'retrieveTargetInfo',\n  // old tree and new tree are the same tree,\n  // so the node still exists and we can visit it.\n\n  var targetNode = targetInfo.node;\n  var layout = targetNode.getLayout();\n  if (!layout) {\n    return defaultPosition;\n  } // Transform coord from local to container.\n\n  var targetCenter = [layout.width / 2, layout.height / 2];\n  var node = targetNode;\n  while (node) {\n    var nodeLayout = node.getLayout();\n    targetCenter[0] += nodeLayout.x;\n    targetCenter[1] += nodeLayout.y;\n    node = node.parentNode;\n  }\n  return {\n    x: layoutInfo.width / 2 - targetCenter[0],\n    y: layoutInfo.height / 2 - targetCenter[1]\n  };\n} // Mark nodes visible for prunning when visual coding and rendering.\n// Prunning depends on layout and root position, so we have to do it after layout.\n\nfunction prunning(node, clipRect, viewAbovePath, viewRoot, depth) {\n  var nodeLayout = node.getLayout();\n  var nodeInViewAbovePath = viewAbovePath[depth];\n  var isAboveViewRoot = nodeInViewAbovePath && nodeInViewAbovePath === node;\n  if (nodeInViewAbovePath && !isAboveViewRoot || depth === viewAbovePath.length && node !== viewRoot) {\n    return;\n  }\n  node.setLayout({\n    // isInView means: viewRoot sub tree + viewAbovePath\n    isInView: true,\n    // invisible only means: outside view clip so that the node can not\n    // see but still layout for animation preparation but not render.\n    invisible: !isAboveViewRoot && !clipRect.intersect(nodeLayout),\n    isAboveViewRoot: isAboveViewRoot\n  }, true); // Transform to child coordinate.\n\n  var childClipRect = new BoundingRect(clipRect.x - nodeLayout.x, clipRect.y - nodeLayout.y, clipRect.width, clipRect.height);\n  each(node.viewChildren || [], function (child) {\n    prunning(child, childClipRect, viewAbovePath, viewRoot, depth + 1);\n  });\n}\nfunction getUpperLabelHeight(model) {\n  return model.get(PATH_UPPER_LABEL_SHOW) ? model.get(PATH_UPPER_LABEL_HEIGHT) : 0;\n}","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { installTreemapAction } from './treemapAction.js';\nimport TreemapSeriesModel from './TreemapSeries.js';\nimport TreemapView from './TreemapView.js';\nimport treemapVisual from './treemapVisual.js';\nimport treemapLayout from './treemapLayout.js';\nexport function install(registers) {\n  registers.registerSeriesModel(TreemapSeriesModel);\n  registers.registerChartView(TreemapView);\n  registers.registerVisual(treemapVisual);\n  registers.registerLayout(treemapLayout);\n  installTreemapAction(registers);\n}"],"names":["eachAfter","root","callback","separation","node","nodes","next","pop","push","isExpand","children","length","i","eachBefore","treeLayout","ecModel","api","eachSeriesByType","seriesModel","commonLayout","layoutInfo","layout","get","width","height","Math","PI","min","node1","node2","parentNode","depth","virtualRoot","getData","tree","realRoot","hierNode","modifier","prelim","left_1","right_1","bottom_1","x","getLayout","delta","tx_1","kx_1","ky_1","coorX_1","coorY_1","finalCoor","setLayout","y","rawX","rawY","orient_1","getOrient","treeVisual","data","eachNode","model","getModel","style","getItemStyle","existsStyle","ensureUniqueItemVisual","dataIndex","extend","installTreeAction","registers","registerAction","type","event","update","payload","eachComponent","mainType","subType","query","getNodeByDataIndex","coordSys","coordinateSystem","res","undefined","setCenter","center","setZoom","zoom","install","registerChartView","TreeView","registerSeriesModel","TreeSeries","registerLayout","registerVisual","init","inRoot","defaultAncestor","ancestor","change","shift","thread","n","child","firstWalk","siblings","subtreeW","executeShifts","midPoint","apportion","secondWalk","nodeX","cb","arguments","defaultSeparation","radialCoordinate","rad","r","cos","sin","getViewRect","getBoxLayoutParams","getWidth","getHeight","subtreeV","nodeOutRight","nodeInRight","nodeOutLeft","nodeInLeft","sumOutRight","sumInRight","sumOutLeft","sumInLeft","nextRight","nextLeft","moveSubtree","nextAncestor","wl","wr","actionTypes","installTreemapAction","noop","handleRootToNode","index","types","targetInfo","originViewRoot","getViewRoot","direction","resetViewRoot","TreemapSeriesModel","_super","_this","apply","this","preventUsingHoverLayer","prototype","getInitialData","option","name","completeTreeValue","levels","designatedVisualItemStyle","designatedVisualModel","Model","itemStyle","setDefault","levelModels","levelDefine","Tree","beforeLink","nodeData","wrapMethod","idx","levelModel","parentModel","optionUpdated","formatTooltip","multipleSeries","dataType","value","getRawValue","getName","getDataParams","params","treeAncestors","treePathInfo","setLayoutInfo","mapIdToIndex","id","idIndexMap","_idIndexMap","_idIndexMapCount","set","_viewRoot","viewRoot","getRawData","contains","enableAriaDecal","enableAriaDecalForTree","layoutMode","defaultOption","progressive","left","top","sort","clipWindow","squareRatio","sqrt","leafDepth","drillDownIcon","zoomToNodeRatio","roam","nodeClick","animation","animationDurationUpdate","animationEasing","breadcrumb","show","emptyItemWidth","color","textStyle","emphasis","label","distance","padding","position","overflow","upperLabel","verticalAlign","colorAlpha","colorSaturation","borderWidth","gapWidth","borderColor","borderColorSaturation","visualDimension","visualMin","visualMax","colorMappingBy","visibleMin","childrenVisibleMin","Series","dataNode","sum","childValue","thisValue","isNaN","globalColorList","globalDecalList","hasColorDefine","hasDecalDefine","modelColor","modelDecal","level0","slice","decal","TEXT_PADDING","ITEM_GAP","ARRAY_LENGTH","Breadcrumb","containerGroup","group","graphic","add","render","targetNode","onSelect","thisGroup","removeAll","normalStyleModel","emphasisModel","textStyleModel","emphasisTextStyleModel","layoutParam","pos","right","bottom","box","totalWidth","renderList","_prepare","_renderContent","text","convertOptionIdName","textRect","getTextRect","itemWidth","max","lastX","availableSize","emphasisItemStyle","item","itemNode","el","shape","points","makeItemPoints","defaults","lineJoin","textContent","createTextStyle","textConfig","z2","Z2_EMPHASIS_LIFT","onclick","curry","disableLabelAnimation","getTextContent","ensureState","toggleHoverEmphasis","packEventData","remove","itemHeight","head","tail","splice","getECData","eventData","componentType","componentSubType","componentIndex","seriesIndex","seriesName","seriesType","selfType","wrapTreePathInfo","DRAG_THRESHOLD","PATH_LABEL_NOAMAL","PATH_UPPERLABEL_NORMAL","Z2_BASE","Z2_BG","Z2_CONTENT","getStateItemStyle","makeStyleMapper","getItemStyleNormal","stroke","fill","lineWidth","inner","TreemapView","_state","_storage","createStorage","models","findComponents","indexOf","payloadType","isInit","_oldTree","thisStorage","reRoot","rootNodeGroup","nodeGroup","getRawIndex","_giveContainerGroup","hasAnimation","renderResult","_doRender","renderFinally","_doAnimation","_resetController","_renderBreadcrumb","_containerGroup","_initEvents","thisTree","oldTree","lastsForAnimation","oldStorage","willInvisibleEls","doRenderNode","thisNode","oldNode","parentGroup","renderNode","dualTravel","willDeleteEls","clearStorage","thisViewChildren","oldViewChildren","sameTree","getKey","getId","processNode","newIndex","oldIndex","viewChildren","each","isRemoved","DataDiffer","execute","storage","store","storageName","delEls","willDelete","els","parent","invisible","dirty","durationOption","easingOption","duration","isFunction","easing","animationWrap","rawIndex","target","innerStore","nodeWidth","nodeHeight","opacity","targetX","targetY","last","oldX","oldY","oldShape","setShape","fadein","setStyle","finished","bind","start","controller","_controller","RoamController","getZr","enable","on","_onPan","_onZoom","rect","BoundingRect","setPointerChecker","e","contain","_clearController","dispose","abs","dx","dy","rootLayout","dispatchAction","from","uid","seriesId","rootRect","mouseX","originX","mouseY","originY","m","matrix","create","translate","scale","applyTransform","findTarget","offsetX","offsetY","isLeafRoot","_rootToNode","_zoomToNode","itemModel","hostTree","getItemModel","link","linkTarget","_breadcrumb","attr","order","bgEl","background","point","transformCoordToLocal","Chart","content","thisLayout","nodeModel","setItemGraphicEl","isInView","thisWidth","thisHeight","thisInvisible","thisRawIndex","oldRawIndex","upperHeight","isParent","itemStyleNormalModel","itemStyleEmphasisModel","itemStyleBlurModel","itemStyleSelectModel","borderRadius","giveGraphic","markRedraw","isAboveViewRoot","bg","renderBackground","upperLabelHeight","focus","blurScope","isDisabled","focusOrIndices","getAncestorsIndices","getDescendantIndices","renderContent","disableMorphing","useUpperLabel","ecData","processInvisible","getVisual","visualBorderColor","normalStyle","emphasisStyle","blurStyle","selectStyle","upperLabelWidth","prepareText","removeTextContent","contentWidth","contentHeight","culling","nodeStyle","visualColor","element","rectEl","visualOpacity","upperLabelRect","normalLabelModel","defaultText","isShow","getShallow","inheritColor","defaultOpacity","labelFetcher","labelDataIndex","textEl","textPadding","normalizeCssArray","setTextConfig","layoutRect","disableLabelLayout","beforeUpdate","truncateMinChar","lineOverflow","addDrillDownIcon","textEmphasisState","getState","iconChar","Ctor","z","lasts","prepareAnimationWhenHasOld","Displayable","calculateZ2","prepareAnimationWhenNoOld","lastCfg","isGroup","parentOldX","parentOldY","parentOldBg","z2InLevel","ITEM_STYLE_NORMAL","reset","travelTree","getAncestors","designatedVisual","viewRootAncestors","nodeLayout","thisNodeColor","nodeItemStyleModel","visuals","buildVisuals","calculateColor","calculateBorderColor","mapping_1","buildVisualMapping","childVisual","mapVisual","visualName","val","getValueVisualDefine","modifyHSL","modifyAlpha","rangeVisual","getRangeVisual","dataExtent","opt","visual","range","mappingMethod","loop","mapping","VisualMapping","drColorMappingBy","isArray","childVisuals","mappingType","getValue","mapValueToVisual","mathMax","mathMin","retrieveValue","PATH_BORDER_WIDTH","PATH_GAP_WIDTH","PATH_UPPER_LABEL_SHOW","PATH_UPPER_LABEL_HEIGHT","ecWidth","ecHeight","seriesOption","size","containerWidth","containerHeight","viewAbovePath","rootSize","estimateRootSize","sort_1","options","clearLayouts","viewRootLayout_1","area","squarify","treeRoot","calculateRootPosition","prunning","hideChildren","halfGapWidth","getUpperLabelHeight","layoutOffset","layoutOffsetUpper","totalArea","initChildren","rowFixedLength","best","Infinity","row","len","score","worst","orderBy","overLeafDepth","info","statistic","filterByThreshold","orderedChildren","deletePoint","a","b","diff","dimension","reverse","NaN","ratio","areaMax","areaMin","squareArea","f","flush","idx0WhenH","idx1WhenH","xy","wh","rowOtherLength","rowLen","step","wh1","remain","modWH","wh0","currNode","defaultSize","viewArea","currNodeValue","pow","defaultPosition","targetCenter","clipRect","nodeInViewAbovePath","intersect","childClipRect","TreemapSeries","treemapVisual","treemapLayout"],"sourceRoot":""}