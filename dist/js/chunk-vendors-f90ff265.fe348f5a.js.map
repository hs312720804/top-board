{"version":3,"file":"js/chunk-vendors-f90ff265.fe348f5a.js","mappings":"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","sources":["webpack://databoard/./node_modules/echarts/lib/core/ExtensionAPI.js","webpack://databoard/./node_modules/echarts/lib/core/Scheduler.js","webpack://databoard/./node_modules/echarts/lib/core/lifecycle.js","webpack://databoard/./node_modules/echarts/lib/core/echarts.js","webpack://databoard/./node_modules/echarts/lib/core/impl.js","webpack://databoard/./node_modules/echarts/lib/core/locale.js","webpack://databoard/./node_modules/echarts/lib/core/task.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as zrUtil from 'zrender/lib/core/util.js';\nvar availableMethods = ['getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isSSR', 'isDisposed', 'on', 'off', 'getDataURL', 'getConnectedDataURL', // 'getModel',\n'getOption', // 'getViewOfComponentModel',\n// 'getViewOfSeriesModel',\n'getId', 'updateLabelLayout'];\n\nvar ExtensionAPI =\n/** @class */\nfunction () {\n  function ExtensionAPI(ecInstance) {\n    zrUtil.each(availableMethods, function (methodName) {\n      this[methodName] = zrUtil.bind(ecInstance[methodName], ecInstance);\n    }, this);\n  }\n\n  return ExtensionAPI;\n}();\n\nexport default ExtensionAPI;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { each, map, isFunction, createHashMap, noop, assert } from 'zrender/lib/core/util.js';\nimport { createTask } from './task.js';\nimport { getUID } from '../util/component.js';\nimport GlobalModel from '../model/Global.js';\nimport ExtensionAPI from './ExtensionAPI.js';\nimport { normalizeToArray } from '../util/model.js';\n;\n\nvar Scheduler =\n/** @class */\nfunction () {\n  function Scheduler(ecInstance, api, dataProcessorHandlers, visualHandlers) {\n    // key: handlerUID\n    this._stageTaskMap = createHashMap();\n    this.ecInstance = ecInstance;\n    this.api = api; // Fix current processors in case that in some rear cases that\n    // processors might be registered after echarts instance created.\n    // Register processors incrementally for a echarts instance is\n    // not supported by this stream architecture.\n\n    dataProcessorHandlers = this._dataProcessorHandlers = dataProcessorHandlers.slice();\n    visualHandlers = this._visualHandlers = visualHandlers.slice();\n    this._allHandlers = dataProcessorHandlers.concat(visualHandlers);\n  }\n\n  Scheduler.prototype.restoreData = function (ecModel, payload) {\n    // TODO: Only restore needed series and components, but not all components.\n    // Currently `restoreData` of all of the series and component will be called.\n    // But some independent components like `title`, `legend`, `graphic`, `toolbox`,\n    // `tooltip`, `axisPointer`, etc, do not need series refresh when `setOption`,\n    // and some components like coordinate system, axes, dataZoom, visualMap only\n    // need their target series refresh.\n    // (1) If we are implementing this feature some day, we should consider these cases:\n    // if a data processor depends on a component (e.g., dataZoomProcessor depends\n    // on the settings of `dataZoom`), it should be re-performed if the component\n    // is modified by `setOption`.\n    // (2) If a processor depends on sevral series, speicified by its `getTargetSeries`,\n    // it should be re-performed when the result array of `getTargetSeries` changed.\n    // We use `dependencies` to cover these issues.\n    // (3) How to update target series when coordinate system related components modified.\n    // TODO: simply the dirty mechanism? Check whether only the case here can set tasks dirty,\n    // and this case all of the tasks will be set as dirty.\n    ecModel.restoreData(payload); // Theoretically an overall task not only depends on each of its target series, but also\n    // depends on all of the series.\n    // The overall task is not in pipeline, and `ecModel.restoreData` only set pipeline tasks\n    // dirty. If `getTargetSeries` of an overall task returns nothing, we should also ensure\n    // that the overall task is set as dirty and to be performed, otherwise it probably cause\n    // state chaos. So we have to set dirty of all of the overall tasks manually, otherwise it\n    // probably cause state chaos (consider `dataZoomProcessor`).\n\n    this._stageTaskMap.each(function (taskRecord) {\n      var overallTask = taskRecord.overallTask;\n      overallTask && overallTask.dirty();\n    });\n  }; // If seriesModel provided, incremental threshold is check by series data.\n\n\n  Scheduler.prototype.getPerformArgs = function (task, isBlock) {\n    // For overall task\n    if (!task.__pipeline) {\n      return;\n    }\n\n    var pipeline = this._pipelineMap.get(task.__pipeline.id);\n\n    var pCtx = pipeline.context;\n    var incremental = !isBlock && pipeline.progressiveEnabled && (!pCtx || pCtx.progressiveRender) && task.__idxInPipeline > pipeline.blockIndex;\n    var step = incremental ? pipeline.step : null;\n    var modDataCount = pCtx && pCtx.modDataCount;\n    var modBy = modDataCount != null ? Math.ceil(modDataCount / step) : null;\n    return {\n      step: step,\n      modBy: modBy,\n      modDataCount: modDataCount\n    };\n  };\n\n  Scheduler.prototype.getPipeline = function (pipelineId) {\n    return this._pipelineMap.get(pipelineId);\n  };\n  /**\n   * Current, progressive rendering starts from visual and layout.\n   * Always detect render mode in the same stage, avoiding that incorrect\n   * detection caused by data filtering.\n   * Caution:\n   * `updateStreamModes` use `seriesModel.getData()`.\n   */\n\n\n  Scheduler.prototype.updateStreamModes = function (seriesModel, view) {\n    var pipeline = this._pipelineMap.get(seriesModel.uid);\n\n    var data = seriesModel.getData();\n    var dataLen = data.count(); // `progressiveRender` means that can render progressively in each\n    // animation frame. Note that some types of series do not provide\n    // `view.incrementalPrepareRender` but support `chart.appendData`. We\n    // use the term `incremental` but not `progressive` to describe the\n    // case that `chart.appendData`.\n\n    var progressiveRender = pipeline.progressiveEnabled && view.incrementalPrepareRender && dataLen >= pipeline.threshold;\n    var large = seriesModel.get('large') && dataLen >= seriesModel.get('largeThreshold'); // TODO: modDataCount should not updated if `appendData`, otherwise cause whole repaint.\n    // see `test/candlestick-large3.html`\n\n    var modDataCount = seriesModel.get('progressiveChunkMode') === 'mod' ? dataLen : null;\n    seriesModel.pipelineContext = pipeline.context = {\n      progressiveRender: progressiveRender,\n      modDataCount: modDataCount,\n      large: large\n    };\n  };\n\n  Scheduler.prototype.restorePipelines = function (ecModel) {\n    var scheduler = this;\n    var pipelineMap = scheduler._pipelineMap = createHashMap();\n    ecModel.eachSeries(function (seriesModel) {\n      var progressive = seriesModel.getProgressive();\n      var pipelineId = seriesModel.uid;\n      pipelineMap.set(pipelineId, {\n        id: pipelineId,\n        head: null,\n        tail: null,\n        threshold: seriesModel.getProgressiveThreshold(),\n        progressiveEnabled: progressive && !(seriesModel.preventIncremental && seriesModel.preventIncremental()),\n        blockIndex: -1,\n        step: Math.round(progressive || 700),\n        count: 0\n      });\n\n      scheduler._pipe(seriesModel, seriesModel.dataTask);\n    });\n  };\n\n  Scheduler.prototype.prepareStageTasks = function () {\n    var stageTaskMap = this._stageTaskMap;\n    var ecModel = this.api.getModel();\n    var api = this.api;\n    each(this._allHandlers, function (handler) {\n      var record = stageTaskMap.get(handler.uid) || stageTaskMap.set(handler.uid, {});\n      var errMsg = '';\n\n      if (process.env.NODE_ENV !== 'production') {\n        // Currently do not need to support to sepecify them both.\n        errMsg = '\"reset\" and \"overallReset\" must not be both specified.';\n      }\n\n      assert(!(handler.reset && handler.overallReset), errMsg);\n      handler.reset && this._createSeriesStageTask(handler, record, ecModel, api);\n      handler.overallReset && this._createOverallStageTask(handler, record, ecModel, api);\n    }, this);\n  };\n\n  Scheduler.prototype.prepareView = function (view, model, ecModel, api) {\n    var renderTask = view.renderTask;\n    var context = renderTask.context;\n    context.model = model;\n    context.ecModel = ecModel;\n    context.api = api;\n    renderTask.__block = !view.incrementalPrepareRender;\n\n    this._pipe(model, renderTask);\n  };\n\n  Scheduler.prototype.performDataProcessorTasks = function (ecModel, payload) {\n    // If we do not use `block` here, it should be considered when to update modes.\n    this._performStageTasks(this._dataProcessorHandlers, ecModel, payload, {\n      block: true\n    });\n  };\n\n  Scheduler.prototype.performVisualTasks = function (ecModel, payload, opt) {\n    this._performStageTasks(this._visualHandlers, ecModel, payload, opt);\n  };\n\n  Scheduler.prototype._performStageTasks = function (stageHandlers, ecModel, payload, opt) {\n    opt = opt || {};\n    var unfinished = false;\n    var scheduler = this;\n    each(stageHandlers, function (stageHandler, idx) {\n      if (opt.visualType && opt.visualType !== stageHandler.visualType) {\n        return;\n      }\n\n      var stageHandlerRecord = scheduler._stageTaskMap.get(stageHandler.uid);\n\n      var seriesTaskMap = stageHandlerRecord.seriesTaskMap;\n      var overallTask = stageHandlerRecord.overallTask;\n\n      if (overallTask) {\n        var overallNeedDirty_1;\n        var agentStubMap = overallTask.agentStubMap;\n        agentStubMap.each(function (stub) {\n          if (needSetDirty(opt, stub)) {\n            stub.dirty();\n            overallNeedDirty_1 = true;\n          }\n        });\n        overallNeedDirty_1 && overallTask.dirty();\n        scheduler.updatePayload(overallTask, payload);\n        var performArgs_1 = scheduler.getPerformArgs(overallTask, opt.block); // Execute stubs firstly, which may set the overall task dirty,\n        // then execute the overall task. And stub will call seriesModel.setData,\n        // which ensures that in the overallTask seriesModel.getData() will not\n        // return incorrect data.\n\n        agentStubMap.each(function (stub) {\n          stub.perform(performArgs_1);\n        });\n\n        if (overallTask.perform(performArgs_1)) {\n          unfinished = true;\n        }\n      } else if (seriesTaskMap) {\n        seriesTaskMap.each(function (task, pipelineId) {\n          if (needSetDirty(opt, task)) {\n            task.dirty();\n          }\n\n          var performArgs = scheduler.getPerformArgs(task, opt.block); // FIXME\n          // if intending to declare `performRawSeries` in handlers, only\n          // stream-independent (specifically, data item independent) operations can be\n          // performed. Because if a series is filtered, most of the tasks will not\n          // be performed. A stream-dependent operation probably cause wrong biz logic.\n          // Perhaps we should not provide a separate callback for this case instead\n          // of providing the config `performRawSeries`. The stream-dependent operations\n          // and stream-independent operations should better not be mixed.\n\n          performArgs.skip = !stageHandler.performRawSeries && ecModel.isSeriesFiltered(task.context.model);\n          scheduler.updatePayload(task, payload);\n\n          if (task.perform(performArgs)) {\n            unfinished = true;\n          }\n        });\n      }\n    });\n\n    function needSetDirty(opt, task) {\n      return opt.setDirty && (!opt.dirtyMap || opt.dirtyMap.get(task.__pipeline.id));\n    }\n\n    this.unfinished = unfinished || this.unfinished;\n  };\n\n  Scheduler.prototype.performSeriesTasks = function (ecModel) {\n    var unfinished;\n    ecModel.eachSeries(function (seriesModel) {\n      // Progress to the end for dataInit and dataRestore.\n      unfinished = seriesModel.dataTask.perform() || unfinished;\n    });\n    this.unfinished = unfinished || this.unfinished;\n  };\n\n  Scheduler.prototype.plan = function () {\n    // Travel pipelines, check block.\n    this._pipelineMap.each(function (pipeline) {\n      var task = pipeline.tail;\n\n      do {\n        if (task.__block) {\n          pipeline.blockIndex = task.__idxInPipeline;\n          break;\n        }\n\n        task = task.getUpstream();\n      } while (task);\n    });\n  };\n\n  Scheduler.prototype.updatePayload = function (task, payload) {\n    payload !== 'remain' && (task.context.payload = payload);\n  };\n\n  Scheduler.prototype._createSeriesStageTask = function (stageHandler, stageHandlerRecord, ecModel, api) {\n    var scheduler = this;\n    var oldSeriesTaskMap = stageHandlerRecord.seriesTaskMap; // The count of stages are totally about only several dozen, so\n    // do not need to reuse the map.\n\n    var newSeriesTaskMap = stageHandlerRecord.seriesTaskMap = createHashMap();\n    var seriesType = stageHandler.seriesType;\n    var getTargetSeries = stageHandler.getTargetSeries; // If a stageHandler should cover all series, `createOnAllSeries` should be declared mandatorily,\n    // to avoid some typo or abuse. Otherwise if an extension do not specify a `seriesType`,\n    // it works but it may cause other irrelevant charts blocked.\n\n    if (stageHandler.createOnAllSeries) {\n      ecModel.eachRawSeries(create);\n    } else if (seriesType) {\n      ecModel.eachRawSeriesByType(seriesType, create);\n    } else if (getTargetSeries) {\n      getTargetSeries(ecModel, api).each(create);\n    }\n\n    function create(seriesModel) {\n      var pipelineId = seriesModel.uid; // Init tasks for each seriesModel only once.\n      // Reuse original task instance.\n\n      var task = newSeriesTaskMap.set(pipelineId, oldSeriesTaskMap && oldSeriesTaskMap.get(pipelineId) || createTask({\n        plan: seriesTaskPlan,\n        reset: seriesTaskReset,\n        count: seriesTaskCount\n      }));\n      task.context = {\n        model: seriesModel,\n        ecModel: ecModel,\n        api: api,\n        // PENDING: `useClearVisual` not used?\n        useClearVisual: stageHandler.isVisual && !stageHandler.isLayout,\n        plan: stageHandler.plan,\n        reset: stageHandler.reset,\n        scheduler: scheduler\n      };\n\n      scheduler._pipe(seriesModel, task);\n    }\n  };\n\n  Scheduler.prototype._createOverallStageTask = function (stageHandler, stageHandlerRecord, ecModel, api) {\n    var scheduler = this;\n    var overallTask = stageHandlerRecord.overallTask = stageHandlerRecord.overallTask // For overall task, the function only be called on reset stage.\n    || createTask({\n      reset: overallTaskReset\n    });\n    overallTask.context = {\n      ecModel: ecModel,\n      api: api,\n      overallReset: stageHandler.overallReset,\n      scheduler: scheduler\n    };\n    var oldAgentStubMap = overallTask.agentStubMap; // The count of stages are totally about only several dozen, so\n    // do not need to reuse the map.\n\n    var newAgentStubMap = overallTask.agentStubMap = createHashMap();\n    var seriesType = stageHandler.seriesType;\n    var getTargetSeries = stageHandler.getTargetSeries;\n    var overallProgress = true;\n    var shouldOverallTaskDirty = false; // FIXME:TS never used, so comment it\n    // let modifyOutputEnd = stageHandler.modifyOutputEnd;\n    // An overall task with seriesType detected or has `getTargetSeries`, we add\n    // stub in each pipelines, it will set the overall task dirty when the pipeline\n    // progress. Moreover, to avoid call the overall task each frame (too frequent),\n    // we set the pipeline block.\n\n    var errMsg = '';\n\n    if (process.env.NODE_ENV !== 'production') {\n      errMsg = '\"createOnAllSeries\" is not supported for \"overallReset\", ' + 'because it will block all streams.';\n    }\n\n    assert(!stageHandler.createOnAllSeries, errMsg);\n\n    if (seriesType) {\n      ecModel.eachRawSeriesByType(seriesType, createStub);\n    } else if (getTargetSeries) {\n      getTargetSeries(ecModel, api).each(createStub);\n    } // Otherwise, (usually it is legacy case), the overall task will only be\n    // executed when upstream is dirty. Otherwise the progressive rendering of all\n    // pipelines will be disabled unexpectedly. But it still needs stubs to receive\n    // dirty info from upstream.\n    else {\n        overallProgress = false;\n        each(ecModel.getSeries(), createStub);\n      }\n\n    function createStub(seriesModel) {\n      var pipelineId = seriesModel.uid;\n      var stub = newAgentStubMap.set(pipelineId, oldAgentStubMap && oldAgentStubMap.get(pipelineId) || ( // When the result of `getTargetSeries` changed, the overallTask\n      // should be set as dirty and re-performed.\n      shouldOverallTaskDirty = true, createTask({\n        reset: stubReset,\n        onDirty: stubOnDirty\n      })));\n      stub.context = {\n        model: seriesModel,\n        overallProgress: overallProgress // FIXME:TS never used, so comment it\n        // modifyOutputEnd: modifyOutputEnd\n\n      };\n      stub.agent = overallTask;\n      stub.__block = overallProgress;\n\n      scheduler._pipe(seriesModel, stub);\n    }\n\n    if (shouldOverallTaskDirty) {\n      overallTask.dirty();\n    }\n  };\n\n  Scheduler.prototype._pipe = function (seriesModel, task) {\n    var pipelineId = seriesModel.uid;\n\n    var pipeline = this._pipelineMap.get(pipelineId);\n\n    !pipeline.head && (pipeline.head = task);\n    pipeline.tail && pipeline.tail.pipe(task);\n    pipeline.tail = task;\n    task.__idxInPipeline = pipeline.count++;\n    task.__pipeline = pipeline;\n  };\n\n  Scheduler.wrapStageHandler = function (stageHandler, visualType) {\n    if (isFunction(stageHandler)) {\n      stageHandler = {\n        overallReset: stageHandler,\n        seriesType: detectSeriseType(stageHandler)\n      };\n    }\n\n    stageHandler.uid = getUID('stageHandler');\n    visualType && (stageHandler.visualType = visualType);\n    return stageHandler;\n  };\n\n  ;\n  return Scheduler;\n}();\n\nfunction overallTaskReset(context) {\n  context.overallReset(context.ecModel, context.api, context.payload);\n}\n\nfunction stubReset(context) {\n  return context.overallProgress && stubProgress;\n}\n\nfunction stubProgress() {\n  this.agent.dirty();\n  this.getDownstream().dirty();\n}\n\nfunction stubOnDirty() {\n  this.agent && this.agent.dirty();\n}\n\nfunction seriesTaskPlan(context) {\n  return context.plan ? context.plan(context.model, context.ecModel, context.api, context.payload) : null;\n}\n\nfunction seriesTaskReset(context) {\n  if (context.useClearVisual) {\n    context.data.clearAllVisual();\n  }\n\n  var resetDefines = context.resetDefines = normalizeToArray(context.reset(context.model, context.ecModel, context.api, context.payload));\n  return resetDefines.length > 1 ? map(resetDefines, function (v, idx) {\n    return makeSeriesTaskProgress(idx);\n  }) : singleSeriesTaskProgress;\n}\n\nvar singleSeriesTaskProgress = makeSeriesTaskProgress(0);\n\nfunction makeSeriesTaskProgress(resetDefineIdx) {\n  return function (params, context) {\n    var data = context.data;\n    var resetDefine = context.resetDefines[resetDefineIdx];\n\n    if (resetDefine && resetDefine.dataEach) {\n      for (var i = params.start; i < params.end; i++) {\n        resetDefine.dataEach(data, i);\n      }\n    } else if (resetDefine && resetDefine.progress) {\n      resetDefine.progress(params, data);\n    }\n  };\n}\n\nfunction seriesTaskCount(context) {\n  return context.data.count();\n}\n/**\n * Only some legacy stage handlers (usually in echarts extensions) are pure function.\n * To ensure that they can work normally, they should work in block mode, that is,\n * they should not be started util the previous tasks finished. So they cause the\n * progressive rendering disabled. We try to detect the series type, to narrow down\n * the block range to only the series type they concern, but not all series.\n */\n\n\nfunction detectSeriseType(legacyFunc) {\n  seriesType = null;\n\n  try {\n    // Assume there is no async when calling `eachSeriesByType`.\n    legacyFunc(ecModelMock, apiMock);\n  } catch (e) {}\n\n  return seriesType;\n}\n\nvar ecModelMock = {};\nvar apiMock = {};\nvar seriesType;\nmockMethods(ecModelMock, GlobalModel);\nmockMethods(apiMock, ExtensionAPI);\n\necModelMock.eachSeriesByType = ecModelMock.eachRawSeriesByType = function (type) {\n  seriesType = type;\n};\n\necModelMock.eachComponent = function (cond) {\n  if (cond.mainType === 'series' && cond.subType) {\n    seriesType = cond.subType;\n  }\n};\n\nfunction mockMethods(target, Clz) {\n  /* eslint-disable */\n  for (var name_1 in Clz.prototype) {\n    // Do not use hasOwnProperty\n    target[name_1] = noop;\n  }\n  /* eslint-enable */\n\n}\n\nexport default Scheduler;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport Eventful from 'zrender/lib/core/Eventful.js';\n;\nvar lifecycle = new Eventful();\nexport default lifecycle;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\nimport { __extends } from \"tslib\";\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nimport * as zrender from 'zrender/lib/zrender.js';\nimport { assert, each, isFunction, isObject, indexOf, bind, clone, setAsPrimitive, extend, createHashMap, map, defaults, isDom, isArray, noop, isString, retrieve2 } from 'zrender/lib/core/util.js';\nimport env from 'zrender/lib/core/env.js';\nimport timsort from 'zrender/lib/core/timsort.js';\nimport Eventful from 'zrender/lib/core/Eventful.js';\nimport GlobalModel from '../model/Global.js';\nimport ExtensionAPI from './ExtensionAPI.js';\nimport CoordinateSystemManager from './CoordinateSystem.js';\nimport OptionManager from '../model/OptionManager.js';\nimport backwardCompat from '../preprocessor/backwardCompat.js';\nimport dataStack from '../processor/dataStack.js';\nimport SeriesModel from '../model/Series.js';\nimport ComponentView from '../view/Component.js';\nimport ChartView from '../view/Chart.js';\nimport * as graphic from '../util/graphic.js';\nimport { getECData } from '../util/innerStore.js';\nimport { isHighDownDispatcher, HOVER_STATE_EMPHASIS, HOVER_STATE_BLUR, blurSeriesFromHighlightPayload, toggleSelectionFromPayload, updateSeriesElementSelection, getAllSelectedIndices, isSelectChangePayload, isHighDownPayload, HIGHLIGHT_ACTION_TYPE, DOWNPLAY_ACTION_TYPE, SELECT_ACTION_TYPE, UNSELECT_ACTION_TYPE, TOGGLE_SELECT_ACTION_TYPE, savePathStates, enterEmphasis, leaveEmphasis, leaveBlur, enterSelect, leaveSelect, enterBlur, allLeaveBlur, findComponentHighDownDispatchers, blurComponent, handleGlobalMouseOverForHighDown, handleGlobalMouseOutForHighDown } from '../util/states.js';\nimport * as modelUtil from '../util/model.js';\nimport { throttle } from '../util/throttle.js';\nimport { seriesStyleTask, dataStyleTask, dataColorPaletteTask } from '../visual/style.js';\nimport loadingDefault from '../loading/default.js';\nimport Scheduler from './Scheduler.js';\nimport lightTheme from '../theme/light.js';\nimport darkTheme from '../theme/dark.js';\nimport { parseClassType } from '../util/clazz.js';\nimport { ECEventProcessor } from '../util/ECEventProcessor.js';\nimport { seriesSymbolTask, dataSymbolTask } from '../visual/symbol.js';\nimport { getVisualFromData, getItemVisualFromData } from '../visual/helper.js';\nimport { deprecateLog, deprecateReplaceLog, error, warn } from '../util/log.js';\nimport { handleLegacySelectEvents } from '../legacy/dataSelectAction.js';\nimport { registerExternalTransform } from '../data/helper/transform.js';\nimport { createLocaleObject, SYSTEM_LANG } from './locale.js';\nimport { findEventDispatcher } from '../util/event.js';\nimport decal from '../visual/decal.js';\nimport lifecycle from './lifecycle.js';\nimport { platformApi, setPlatformAPI } from 'zrender/lib/core/platform.js';\nimport { getImpl } from './impl.js';\nexport var version = '5.4.2';\nexport var dependencies = {\n  zrender: '5.4.3'\n};\nvar TEST_FRAME_REMAIN_TIME = 1;\nvar PRIORITY_PROCESSOR_SERIES_FILTER = 800; // Some data processors depends on the stack result dimension (to calculate data extent).\n// So data stack stage should be in front of data processing stage.\n\nvar PRIORITY_PROCESSOR_DATASTACK = 900; // \"Data filter\" will block the stream, so it should be\n// put at the beginning of data processing.\n\nvar PRIORITY_PROCESSOR_FILTER = 1000;\nvar PRIORITY_PROCESSOR_DEFAULT = 2000;\nvar PRIORITY_PROCESSOR_STATISTIC = 5000;\nvar PRIORITY_VISUAL_LAYOUT = 1000;\nvar PRIORITY_VISUAL_PROGRESSIVE_LAYOUT = 1100;\nvar PRIORITY_VISUAL_GLOBAL = 2000;\nvar PRIORITY_VISUAL_CHART = 3000;\nvar PRIORITY_VISUAL_COMPONENT = 4000; // Visual property in data. Greater than `PRIORITY_VISUAL_COMPONENT` to enable to\n// overwrite the viusal result of component (like `visualMap`)\n// using data item specific setting (like itemStyle.xxx on data item)\n\nvar PRIORITY_VISUAL_CHART_DATA_CUSTOM = 4500; // Greater than `PRIORITY_VISUAL_CHART_DATA_CUSTOM` to enable to layout based on\n// visual result like `symbolSize`.\n\nvar PRIORITY_VISUAL_POST_CHART_LAYOUT = 4600;\nvar PRIORITY_VISUAL_BRUSH = 5000;\nvar PRIORITY_VISUAL_ARIA = 6000;\nvar PRIORITY_VISUAL_DECAL = 7000;\nexport var PRIORITY = {\n  PROCESSOR: {\n    FILTER: PRIORITY_PROCESSOR_FILTER,\n    SERIES_FILTER: PRIORITY_PROCESSOR_SERIES_FILTER,\n    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n  },\n  VISUAL: {\n    LAYOUT: PRIORITY_VISUAL_LAYOUT,\n    PROGRESSIVE_LAYOUT: PRIORITY_VISUAL_PROGRESSIVE_LAYOUT,\n    GLOBAL: PRIORITY_VISUAL_GLOBAL,\n    CHART: PRIORITY_VISUAL_CHART,\n    POST_CHART_LAYOUT: PRIORITY_VISUAL_POST_CHART_LAYOUT,\n    COMPONENT: PRIORITY_VISUAL_COMPONENT,\n    BRUSH: PRIORITY_VISUAL_BRUSH,\n    CHART_ITEM: PRIORITY_VISUAL_CHART_DATA_CUSTOM,\n    ARIA: PRIORITY_VISUAL_ARIA,\n    DECAL: PRIORITY_VISUAL_DECAL\n  }\n}; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n// where they must not be invoked nestedly, except the only case: invoke\n// dispatchAction with updateMethod \"none\" in main process.\n// This flag is used to carry out this rule.\n// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n\nvar IN_MAIN_PROCESS_KEY = '__flagInMainProcess';\nvar PENDING_UPDATE = '__pendingUpdate';\nvar STATUS_NEEDS_UPDATE_KEY = '__needsUpdateStatus';\nvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\nvar CONNECT_STATUS_KEY = '__connectUpdateStatus';\nvar CONNECT_STATUS_PENDING = 0;\nvar CONNECT_STATUS_UPDATING = 1;\nvar CONNECT_STATUS_UPDATED = 2;\n;\n;\n\nfunction createRegisterEventWithLowercaseECharts(method) {\n  return function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    if (this.isDisposed()) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    return toLowercaseNameAndCallEventful(this, method, args);\n  };\n}\n\nfunction createRegisterEventWithLowercaseMessageCenter(method) {\n  return function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    return toLowercaseNameAndCallEventful(this, method, args);\n  };\n}\n\nfunction toLowercaseNameAndCallEventful(host, method, args) {\n  // `args[0]` is event name. Event name is all lowercase.\n  args[0] = args[0] && args[0].toLowerCase();\n  return Eventful.prototype[method].apply(host, args);\n}\n\nvar MessageCenter =\n/** @class */\nfunction (_super) {\n  __extends(MessageCenter, _super);\n\n  function MessageCenter() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  return MessageCenter;\n}(Eventful);\n\nvar messageCenterProto = MessageCenter.prototype;\nmessageCenterProto.on = createRegisterEventWithLowercaseMessageCenter('on');\nmessageCenterProto.off = createRegisterEventWithLowercaseMessageCenter('off'); // ---------------------------------------\n// Internal method names for class ECharts\n// ---------------------------------------\n\nvar prepare;\nvar prepareView;\nvar updateDirectly;\nvar updateMethods;\nvar doConvertPixel;\nvar updateStreamModes;\nvar doDispatchAction;\nvar flushPendingActions;\nvar triggerUpdatedEvent;\nvar bindRenderedEvent;\nvar bindMouseEvent;\nvar render;\nvar renderComponents;\nvar renderSeries;\nvar createExtensionAPI;\nvar enableConnect;\nvar markStatusToUpdate;\nvar applyChangedStates;\n\nvar ECharts =\n/** @class */\nfunction (_super) {\n  __extends(ECharts, _super);\n\n  function ECharts(dom, // Theme name or themeOption.\n  theme, opts) {\n    var _this = _super.call(this, new ECEventProcessor()) || this;\n\n    _this._chartsViews = [];\n    _this._chartsMap = {};\n    _this._componentsViews = [];\n    _this._componentsMap = {}; // Can't dispatch action during rendering procedure\n\n    _this._pendingActions = [];\n    opts = opts || {}; // Get theme by name\n\n    if (isString(theme)) {\n      theme = themeStorage[theme];\n    }\n\n    _this._dom = dom;\n    var defaultRenderer = 'canvas';\n    var defaultCoarsePointer = 'auto';\n    var defaultUseDirtyRect = false;\n\n    if (process.env.NODE_ENV !== 'production') {\n      var root =\n      /* eslint-disable-next-line */\n      env.hasGlobalWindow ? window : global;\n      defaultRenderer = root.__ECHARTS__DEFAULT__RENDERER__ || defaultRenderer;\n      defaultCoarsePointer = retrieve2(root.__ECHARTS__DEFAULT__COARSE_POINTER, defaultCoarsePointer);\n      var devUseDirtyRect = root.__ECHARTS__DEFAULT__USE_DIRTY_RECT__;\n      defaultUseDirtyRect = devUseDirtyRect == null ? defaultUseDirtyRect : devUseDirtyRect;\n    }\n\n    var zr = _this._zr = zrender.init(dom, {\n      renderer: opts.renderer || defaultRenderer,\n      devicePixelRatio: opts.devicePixelRatio,\n      width: opts.width,\n      height: opts.height,\n      ssr: opts.ssr,\n      useDirtyRect: retrieve2(opts.useDirtyRect, defaultUseDirtyRect),\n      useCoarsePointer: retrieve2(opts.useCoarsePointer, defaultCoarsePointer),\n      pointerSize: opts.pointerSize\n    });\n    _this._ssr = opts.ssr; // Expect 60 fps.\n\n    _this._throttledZrFlush = throttle(bind(zr.flush, zr), 17);\n    theme = clone(theme);\n    theme && backwardCompat(theme, true);\n    _this._theme = theme;\n    _this._locale = createLocaleObject(opts.locale || SYSTEM_LANG);\n    _this._coordSysMgr = new CoordinateSystemManager();\n    var api = _this._api = createExtensionAPI(_this); // Sort on demand\n\n    function prioritySortFunc(a, b) {\n      return a.__prio - b.__prio;\n    }\n\n    timsort(visualFuncs, prioritySortFunc);\n    timsort(dataProcessorFuncs, prioritySortFunc);\n    _this._scheduler = new Scheduler(_this, api, dataProcessorFuncs, visualFuncs);\n    _this._messageCenter = new MessageCenter(); // Init mouse events\n\n    _this._initEvents(); // In case some people write `window.onresize = chart.resize`\n\n\n    _this.resize = bind(_this.resize, _this);\n    zr.animation.on('frame', _this._onframe, _this);\n    bindRenderedEvent(zr, _this);\n    bindMouseEvent(zr, _this); // ECharts instance can be used as value.\n\n    setAsPrimitive(_this);\n    return _this;\n  }\n\n  ECharts.prototype._onframe = function () {\n    if (this._disposed) {\n      return;\n    }\n\n    applyChangedStates(this);\n    var scheduler = this._scheduler; // Lazy update\n\n    if (this[PENDING_UPDATE]) {\n      var silent = this[PENDING_UPDATE].silent;\n      this[IN_MAIN_PROCESS_KEY] = true;\n\n      try {\n        prepare(this);\n        updateMethods.update.call(this, null, this[PENDING_UPDATE].updateParams);\n      } catch (e) {\n        this[IN_MAIN_PROCESS_KEY] = false;\n        this[PENDING_UPDATE] = null;\n        throw e;\n      } // At present, in each frame, zrender performs:\n      //   (1) animation step forward.\n      //   (2) trigger('frame') (where this `_onframe` is called)\n      //   (3) zrender flush (render).\n      // If we do nothing here, since we use `setToFinal: true`, the step (3) above\n      // will render the final state of the elements before the real animation started.\n\n\n      this._zr.flush();\n\n      this[IN_MAIN_PROCESS_KEY] = false;\n      this[PENDING_UPDATE] = null;\n      flushPendingActions.call(this, silent);\n      triggerUpdatedEvent.call(this, silent);\n    } // Avoid do both lazy update and progress in one frame.\n    else if (scheduler.unfinished) {\n        // Stream progress.\n        var remainTime = TEST_FRAME_REMAIN_TIME;\n        var ecModel = this._model;\n        var api = this._api;\n        scheduler.unfinished = false;\n\n        do {\n          var startTime = +new Date();\n          scheduler.performSeriesTasks(ecModel); // Currently dataProcessorFuncs do not check threshold.\n\n          scheduler.performDataProcessorTasks(ecModel);\n          updateStreamModes(this, ecModel); // Do not update coordinate system here. Because that coord system update in\n          // each frame is not a good user experience. So we follow the rule that\n          // the extent of the coordinate system is determined in the first frame (the\n          // frame is executed immediately after task reset.\n          // this._coordSysMgr.update(ecModel, api);\n          // console.log('--- ec frame visual ---', remainTime);\n\n          scheduler.performVisualTasks(ecModel);\n          renderSeries(this, this._model, api, 'remain', {});\n          remainTime -= +new Date() - startTime;\n        } while (remainTime > 0 && scheduler.unfinished); // Call flush explicitly for trigger finished event.\n\n\n        if (!scheduler.unfinished) {\n          this._zr.flush();\n        } // Else, zr flushing be ensue within the same frame,\n        // because zr flushing is after onframe event.\n\n      }\n  };\n\n  ECharts.prototype.getDom = function () {\n    return this._dom;\n  };\n\n  ECharts.prototype.getId = function () {\n    return this.id;\n  };\n\n  ECharts.prototype.getZr = function () {\n    return this._zr;\n  };\n\n  ECharts.prototype.isSSR = function () {\n    return this._ssr;\n  };\n  /* eslint-disable-next-line */\n\n\n  ECharts.prototype.setOption = function (option, notMerge, lazyUpdate) {\n    if (this[IN_MAIN_PROCESS_KEY]) {\n      if (process.env.NODE_ENV !== 'production') {\n        error('`setOption` should not be called during main process.');\n      }\n\n      return;\n    }\n\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    var silent;\n    var replaceMerge;\n    var transitionOpt;\n\n    if (isObject(notMerge)) {\n      lazyUpdate = notMerge.lazyUpdate;\n      silent = notMerge.silent;\n      replaceMerge = notMerge.replaceMerge;\n      transitionOpt = notMerge.transition;\n      notMerge = notMerge.notMerge;\n    }\n\n    this[IN_MAIN_PROCESS_KEY] = true;\n\n    if (!this._model || notMerge) {\n      var optionManager = new OptionManager(this._api);\n      var theme = this._theme;\n      var ecModel = this._model = new GlobalModel();\n      ecModel.scheduler = this._scheduler;\n      ecModel.ssr = this._ssr;\n      ecModel.init(null, null, null, theme, this._locale, optionManager);\n    }\n\n    this._model.setOption(option, {\n      replaceMerge: replaceMerge\n    }, optionPreprocessorFuncs);\n\n    var updateParams = {\n      seriesTransition: transitionOpt,\n      optionChanged: true\n    };\n\n    if (lazyUpdate) {\n      this[PENDING_UPDATE] = {\n        silent: silent,\n        updateParams: updateParams\n      };\n      this[IN_MAIN_PROCESS_KEY] = false; // `setOption(option, {lazyMode: true})` may be called when zrender has been slept.\n      // It should wake it up to make sure zrender start to render at the next frame.\n\n      this.getZr().wakeUp();\n    } else {\n      try {\n        prepare(this);\n        updateMethods.update.call(this, null, updateParams);\n      } catch (e) {\n        this[PENDING_UPDATE] = null;\n        this[IN_MAIN_PROCESS_KEY] = false;\n        throw e;\n      } // Ensure zr refresh sychronously, and then pixel in canvas can be\n      // fetched after `setOption`.\n\n\n      if (!this._ssr) {\n        // not use flush when using ssr mode.\n        this._zr.flush();\n      }\n\n      this[PENDING_UPDATE] = null;\n      this[IN_MAIN_PROCESS_KEY] = false;\n      flushPendingActions.call(this, silent);\n      triggerUpdatedEvent.call(this, silent);\n    }\n  };\n  /**\n   * @deprecated\n   */\n\n\n  ECharts.prototype.setTheme = function () {\n    deprecateLog('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n  }; // We don't want developers to use getModel directly.\n\n\n  ECharts.prototype.getModel = function () {\n    return this._model;\n  };\n\n  ECharts.prototype.getOption = function () {\n    return this._model && this._model.getOption();\n  };\n\n  ECharts.prototype.getWidth = function () {\n    return this._zr.getWidth();\n  };\n\n  ECharts.prototype.getHeight = function () {\n    return this._zr.getHeight();\n  };\n\n  ECharts.prototype.getDevicePixelRatio = function () {\n    return this._zr.painter.dpr\n    /* eslint-disable-next-line */\n    || env.hasGlobalWindow && window.devicePixelRatio || 1;\n  };\n  /**\n   * Get canvas which has all thing rendered\n   * @deprecated Use renderToCanvas instead.\n   */\n\n\n  ECharts.prototype.getRenderedCanvas = function (opts) {\n    if (process.env.NODE_ENV !== 'production') {\n      deprecateReplaceLog('getRenderedCanvas', 'renderToCanvas');\n    }\n\n    return this.renderToCanvas(opts);\n  };\n\n  ECharts.prototype.renderToCanvas = function (opts) {\n    opts = opts || {};\n    var painter = this._zr.painter;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (painter.type !== 'canvas') {\n        throw new Error('renderToCanvas can only be used in the canvas renderer.');\n      }\n    }\n\n    return painter.getRenderedCanvas({\n      backgroundColor: opts.backgroundColor || this._model.get('backgroundColor'),\n      pixelRatio: opts.pixelRatio || this.getDevicePixelRatio()\n    });\n  };\n\n  ECharts.prototype.renderToSVGString = function (opts) {\n    opts = opts || {};\n    var painter = this._zr.painter;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (painter.type !== 'svg') {\n        throw new Error('renderToSVGString can only be used in the svg renderer.');\n      }\n    }\n\n    return painter.renderToString({\n      useViewBox: opts.useViewBox\n    });\n  };\n  /**\n   * Get svg data url\n   */\n\n\n  ECharts.prototype.getSvgDataURL = function () {\n    if (!env.svgSupported) {\n      return;\n    }\n\n    var zr = this._zr;\n    var list = zr.storage.getDisplayList(); // Stop animations\n\n    each(list, function (el) {\n      el.stopAnimation(null, true);\n    });\n    return zr.painter.toDataURL();\n  };\n\n  ECharts.prototype.getDataURL = function (opts) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    opts = opts || {};\n    var excludeComponents = opts.excludeComponents;\n    var ecModel = this._model;\n    var excludesComponentViews = [];\n    var self = this;\n    each(excludeComponents, function (componentType) {\n      ecModel.eachComponent({\n        mainType: componentType\n      }, function (component) {\n        var view = self._componentsMap[component.__viewId];\n\n        if (!view.group.ignore) {\n          excludesComponentViews.push(view);\n          view.group.ignore = true;\n        }\n      });\n    });\n    var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataURL() : this.renderToCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\n    each(excludesComponentViews, function (view) {\n      view.group.ignore = false;\n    });\n    return url;\n  };\n\n  ECharts.prototype.getConnectedDataURL = function (opts) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    var isSvg = opts.type === 'svg';\n    var groupId = this.group;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var MAX_NUMBER = Infinity;\n\n    if (connectedGroups[groupId]) {\n      var left_1 = MAX_NUMBER;\n      var top_1 = MAX_NUMBER;\n      var right_1 = -MAX_NUMBER;\n      var bottom_1 = -MAX_NUMBER;\n      var canvasList_1 = [];\n      var dpr_1 = opts && opts.pixelRatio || this.getDevicePixelRatio();\n      each(instances, function (chart, id) {\n        if (chart.group === groupId) {\n          var canvas = isSvg ? chart.getZr().painter.getSvgDom().innerHTML : chart.renderToCanvas(clone(opts));\n          var boundingRect = chart.getDom().getBoundingClientRect();\n          left_1 = mathMin(boundingRect.left, left_1);\n          top_1 = mathMin(boundingRect.top, top_1);\n          right_1 = mathMax(boundingRect.right, right_1);\n          bottom_1 = mathMax(boundingRect.bottom, bottom_1);\n          canvasList_1.push({\n            dom: canvas,\n            left: boundingRect.left,\n            top: boundingRect.top\n          });\n        }\n      });\n      left_1 *= dpr_1;\n      top_1 *= dpr_1;\n      right_1 *= dpr_1;\n      bottom_1 *= dpr_1;\n      var width = right_1 - left_1;\n      var height = bottom_1 - top_1;\n      var targetCanvas = platformApi.createCanvas();\n      var zr_1 = zrender.init(targetCanvas, {\n        renderer: isSvg ? 'svg' : 'canvas'\n      });\n      zr_1.resize({\n        width: width,\n        height: height\n      });\n\n      if (isSvg) {\n        var content_1 = '';\n        each(canvasList_1, function (item) {\n          var x = item.left - left_1;\n          var y = item.top - top_1;\n          content_1 += '<g transform=\"translate(' + x + ',' + y + ')\">' + item.dom + '</g>';\n        });\n        zr_1.painter.getSvgRoot().innerHTML = content_1;\n\n        if (opts.connectedBackgroundColor) {\n          zr_1.painter.setBackgroundColor(opts.connectedBackgroundColor);\n        }\n\n        zr_1.refreshImmediately();\n        return zr_1.painter.toDataURL();\n      } else {\n        // Background between the charts\n        if (opts.connectedBackgroundColor) {\n          zr_1.add(new graphic.Rect({\n            shape: {\n              x: 0,\n              y: 0,\n              width: width,\n              height: height\n            },\n            style: {\n              fill: opts.connectedBackgroundColor\n            }\n          }));\n        }\n\n        each(canvasList_1, function (item) {\n          var img = new graphic.Image({\n            style: {\n              x: item.left * dpr_1 - left_1,\n              y: item.top * dpr_1 - top_1,\n              image: item.dom\n            }\n          });\n          zr_1.add(img);\n        });\n        zr_1.refreshImmediately();\n        return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n      }\n    } else {\n      return this.getDataURL(opts);\n    }\n  };\n\n  ECharts.prototype.convertToPixel = function (finder, value) {\n    return doConvertPixel(this, 'convertToPixel', finder, value);\n  };\n\n  ECharts.prototype.convertFromPixel = function (finder, value) {\n    return doConvertPixel(this, 'convertFromPixel', finder, value);\n  };\n  /**\n   * Is the specified coordinate systems or components contain the given pixel point.\n   * @param {Array|number} value\n   * @return {boolean} result\n   */\n\n\n  ECharts.prototype.containPixel = function (finder, value) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    var ecModel = this._model;\n    var result;\n    var findResult = modelUtil.parseFinder(ecModel, finder);\n    each(findResult, function (models, key) {\n      key.indexOf('Models') >= 0 && each(models, function (model) {\n        var coordSys = model.coordinateSystem;\n\n        if (coordSys && coordSys.containPoint) {\n          result = result || !!coordSys.containPoint(value);\n        } else if (key === 'seriesModels') {\n          var view = this._chartsMap[model.__viewId];\n\n          if (view && view.containPoint) {\n            result = result || view.containPoint(value, model);\n          } else {\n            if (process.env.NODE_ENV !== 'production') {\n              warn(key + ': ' + (view ? 'The found component do not support containPoint.' : 'No view mapping to the found component.'));\n            }\n          }\n        } else {\n          if (process.env.NODE_ENV !== 'production') {\n            warn(key + ': containPoint is not supported');\n          }\n        }\n      }, this);\n    }, this);\n    return !!result;\n  };\n  /**\n   * Get visual from series or data.\n   * @param finder\n   *        If string, e.g., 'series', means {seriesIndex: 0}.\n   *        If Object, could contain some of these properties below:\n   *        {\n   *            seriesIndex / seriesId / seriesName,\n   *            dataIndex / dataIndexInside\n   *        }\n   *        If dataIndex is not specified, series visual will be fetched,\n   *        but not data item visual.\n   *        If all of seriesIndex, seriesId, seriesName are not specified,\n   *        visual will be fetched from first series.\n   * @param visualType 'color', 'symbol', 'symbolSize'\n   */\n\n\n  ECharts.prototype.getVisual = function (finder, visualType) {\n    var ecModel = this._model;\n    var parsedFinder = modelUtil.parseFinder(ecModel, finder, {\n      defaultMainType: 'series'\n    });\n    var seriesModel = parsedFinder.seriesModel;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!seriesModel) {\n        warn('There is no specified series model');\n      }\n    }\n\n    var data = seriesModel.getData();\n    var dataIndexInside = parsedFinder.hasOwnProperty('dataIndexInside') ? parsedFinder.dataIndexInside : parsedFinder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(parsedFinder.dataIndex) : null;\n    return dataIndexInside != null ? getItemVisualFromData(data, dataIndexInside, visualType) : getVisualFromData(data, visualType);\n  };\n  /**\n   * Get view of corresponding component model\n   */\n\n\n  ECharts.prototype.getViewOfComponentModel = function (componentModel) {\n    return this._componentsMap[componentModel.__viewId];\n  };\n  /**\n   * Get view of corresponding series model\n   */\n\n\n  ECharts.prototype.getViewOfSeriesModel = function (seriesModel) {\n    return this._chartsMap[seriesModel.__viewId];\n  };\n\n  ECharts.prototype._initEvents = function () {\n    var _this = this;\n\n    each(MOUSE_EVENT_NAMES, function (eveName) {\n      var handler = function (e) {\n        var ecModel = _this.getModel();\n\n        var el = e.target;\n        var params;\n        var isGlobalOut = eveName === 'globalout'; // no e.target when 'globalout'.\n\n        if (isGlobalOut) {\n          params = {};\n        } else {\n          el && findEventDispatcher(el, function (parent) {\n            var ecData = getECData(parent);\n\n            if (ecData && ecData.dataIndex != null) {\n              var dataModel = ecData.dataModel || ecModel.getSeriesByIndex(ecData.seriesIndex);\n              params = dataModel && dataModel.getDataParams(ecData.dataIndex, ecData.dataType) || {};\n              return true;\n            } // If element has custom eventData of components\n            else if (ecData.eventData) {\n                params = extend({}, ecData.eventData);\n                return true;\n              }\n          }, true);\n        } // Contract: if params prepared in mouse event,\n        // these properties must be specified:\n        // {\n        //    componentType: string (component main type)\n        //    componentIndex: number\n        // }\n        // Otherwise event query can not work.\n\n\n        if (params) {\n          var componentType = params.componentType;\n          var componentIndex = params.componentIndex; // Special handling for historic reason: when trigger by\n          // markLine/markPoint/markArea, the componentType is\n          // 'markLine'/'markPoint'/'markArea', but we should better\n          // enable them to be queried by seriesIndex, since their\n          // option is set in each series.\n\n          if (componentType === 'markLine' || componentType === 'markPoint' || componentType === 'markArea') {\n            componentType = 'series';\n            componentIndex = params.seriesIndex;\n          }\n\n          var model = componentType && componentIndex != null && ecModel.getComponent(componentType, componentIndex);\n          var view = model && _this[model.mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId];\n\n          if (process.env.NODE_ENV !== 'production') {\n            // `event.componentType` and `event[componentTpype + 'Index']` must not\n            // be missed, otherwise there is no way to distinguish source component.\n            // See `dataFormat.getDataParams`.\n            if (!isGlobalOut && !(model && view)) {\n              warn('model or view can not be found by params');\n            }\n          }\n\n          params.event = e;\n          params.type = eveName;\n          _this._$eventProcessor.eventInfo = {\n            targetEl: el,\n            packedEvent: params,\n            model: model,\n            view: view\n          };\n\n          _this.trigger(eveName, params);\n        }\n      }; // Consider that some component (like tooltip, brush, ...)\n      // register zr event handler, but user event handler might\n      // do anything, such as call `setOption` or `dispatchAction`,\n      // which probably update any of the content and probably\n      // cause problem if it is called previous other inner handlers.\n\n\n      handler.zrEventfulCallAtLast = true;\n\n      _this._zr.on(eveName, handler, _this);\n    });\n    each(eventActionMap, function (actionType, eventType) {\n      _this._messageCenter.on(eventType, function (event) {\n        this.trigger(eventType, event);\n      }, _this);\n    }); // Extra events\n    // TODO register?\n\n    each(['selectchanged'], function (eventType) {\n      _this._messageCenter.on(eventType, function (event) {\n        this.trigger(eventType, event);\n      }, _this);\n    });\n    handleLegacySelectEvents(this._messageCenter, this, this._api);\n  };\n\n  ECharts.prototype.isDisposed = function () {\n    return this._disposed;\n  };\n\n  ECharts.prototype.clear = function () {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    this.setOption({\n      series: []\n    }, true);\n  };\n\n  ECharts.prototype.dispose = function () {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    this._disposed = true;\n    var dom = this.getDom();\n\n    if (dom) {\n      modelUtil.setAttribute(this.getDom(), DOM_ATTRIBUTE_KEY, '');\n    }\n\n    var chart = this;\n    var api = chart._api;\n    var ecModel = chart._model;\n    each(chart._componentsViews, function (component) {\n      component.dispose(ecModel, api);\n    });\n    each(chart._chartsViews, function (chart) {\n      chart.dispose(ecModel, api);\n    }); // Dispose after all views disposed\n\n    chart._zr.dispose(); // Set properties to null.\n    // To reduce the memory cost in case the top code still holds this instance unexpectedly.\n\n\n    chart._dom = chart._model = chart._chartsMap = chart._componentsMap = chart._chartsViews = chart._componentsViews = chart._scheduler = chart._api = chart._zr = chart._throttledZrFlush = chart._theme = chart._coordSysMgr = chart._messageCenter = null;\n    delete instances[chart.id];\n  };\n  /**\n   * Resize the chart\n   */\n\n\n  ECharts.prototype.resize = function (opts) {\n    if (this[IN_MAIN_PROCESS_KEY]) {\n      if (process.env.NODE_ENV !== 'production') {\n        error('`resize` should not be called during main process.');\n      }\n\n      return;\n    }\n\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    this._zr.resize(opts);\n\n    var ecModel = this._model; // Resize loading effect\n\n    this._loadingFX && this._loadingFX.resize();\n\n    if (!ecModel) {\n      return;\n    }\n\n    var needPrepare = ecModel.resetOption('media');\n    var silent = opts && opts.silent; // There is some real cases that:\n    // chart.setOption(option, { lazyUpdate: true });\n    // chart.resize();\n\n    if (this[PENDING_UPDATE]) {\n      if (silent == null) {\n        silent = this[PENDING_UPDATE].silent;\n      }\n\n      needPrepare = true;\n      this[PENDING_UPDATE] = null;\n    }\n\n    this[IN_MAIN_PROCESS_KEY] = true;\n\n    try {\n      needPrepare && prepare(this);\n      updateMethods.update.call(this, {\n        type: 'resize',\n        animation: extend({\n          // Disable animation\n          duration: 0\n        }, opts && opts.animation)\n      });\n    } catch (e) {\n      this[IN_MAIN_PROCESS_KEY] = false;\n      throw e;\n    }\n\n    this[IN_MAIN_PROCESS_KEY] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  };\n\n  ECharts.prototype.showLoading = function (name, cfg) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    if (isObject(name)) {\n      cfg = name;\n      name = '';\n    }\n\n    name = name || 'default';\n    this.hideLoading();\n\n    if (!loadingEffects[name]) {\n      if (process.env.NODE_ENV !== 'production') {\n        warn('Loading effects ' + name + ' not exists.');\n      }\n\n      return;\n    }\n\n    var el = loadingEffects[name](this._api, cfg);\n    var zr = this._zr;\n    this._loadingFX = el;\n    zr.add(el);\n  };\n  /**\n   * Hide loading effect\n   */\n\n\n  ECharts.prototype.hideLoading = function () {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    this._loadingFX && this._zr.remove(this._loadingFX);\n    this._loadingFX = null;\n  };\n\n  ECharts.prototype.makeActionFromEvent = function (eventObj) {\n    var payload = extend({}, eventObj);\n    payload.type = eventActionMap[eventObj.type];\n    return payload;\n  };\n  /**\n   * @param opt If pass boolean, means opt.silent\n   * @param opt.silent Default `false`. Whether trigger events.\n   * @param opt.flush Default `undefined`.\n   *        true: Flush immediately, and then pixel in canvas can be fetched\n   *            immediately. Caution: it might affect performance.\n   *        false: Not flush.\n   *        undefined: Auto decide whether perform flush.\n   */\n\n\n  ECharts.prototype.dispatchAction = function (payload, opt) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    if (!isObject(opt)) {\n      opt = {\n        silent: !!opt\n      };\n    }\n\n    if (!actions[payload.type]) {\n      return;\n    } // Avoid dispatch action before setOption. Especially in `connect`.\n\n\n    if (!this._model) {\n      return;\n    } // May dispatchAction in rendering procedure\n\n\n    if (this[IN_MAIN_PROCESS_KEY]) {\n      this._pendingActions.push(payload);\n\n      return;\n    }\n\n    var silent = opt.silent;\n    doDispatchAction.call(this, payload, silent);\n    var flush = opt.flush;\n\n    if (flush) {\n      this._zr.flush();\n    } else if (flush !== false && env.browser.weChat) {\n      // In WeChat embedded browser, `requestAnimationFrame` and `setInterval`\n      // hang when sliding page (on touch event), which cause that zr does not\n      // refresh until user interaction finished, which is not expected.\n      // But `dispatchAction` may be called too frequently when pan on touch\n      // screen, which impacts performance if do not throttle them.\n      this._throttledZrFlush();\n    }\n\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  };\n\n  ECharts.prototype.updateLabelLayout = function () {\n    lifecycle.trigger('series:layoutlabels', this._model, this._api, {\n      // Not adding series labels.\n      // TODO\n      updatedSeries: []\n    });\n  };\n\n  ECharts.prototype.appendData = function (params) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    var seriesIndex = params.seriesIndex;\n    var ecModel = this.getModel();\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (process.env.NODE_ENV !== 'production') {\n      assert(params.data && seriesModel);\n    }\n\n    seriesModel.appendData(params); // Note: `appendData` does not support that update extent of coordinate\n    // system, util some scenario require that. In the expected usage of\n    // `appendData`, the initial extent of coordinate system should better\n    // be fixed by axis `min`/`max` setting or initial data, otherwise if\n    // the extent changed while `appendData`, the location of the painted\n    // graphic elements have to be changed, which make the usage of\n    // `appendData` meaningless.\n\n    this._scheduler.unfinished = true;\n    this.getZr().wakeUp();\n  }; // A work around for no `internal` modifier in ts yet but\n  // need to strictly hide private methods to JS users.\n\n\n  ECharts.internalField = function () {\n    prepare = function (ecIns) {\n      var scheduler = ecIns._scheduler;\n      scheduler.restorePipelines(ecIns._model);\n      scheduler.prepareStageTasks();\n      prepareView(ecIns, true);\n      prepareView(ecIns, false);\n      scheduler.plan();\n    };\n    /**\n     * Prepare view instances of charts and components\n     */\n\n\n    prepareView = function (ecIns, isComponent) {\n      var ecModel = ecIns._model;\n      var scheduler = ecIns._scheduler;\n      var viewList = isComponent ? ecIns._componentsViews : ecIns._chartsViews;\n      var viewMap = isComponent ? ecIns._componentsMap : ecIns._chartsMap;\n      var zr = ecIns._zr;\n      var api = ecIns._api;\n\n      for (var i = 0; i < viewList.length; i++) {\n        viewList[i].__alive = false;\n      }\n\n      isComponent ? ecModel.eachComponent(function (componentType, model) {\n        componentType !== 'series' && doPrepare(model);\n      }) : ecModel.eachSeries(doPrepare);\n\n      function doPrepare(model) {\n        // By default view will be reused if possible for the case that `setOption` with \"notMerge\"\n        // mode and need to enable transition animation. (Usually, when they have the same id, or\n        // especially no id but have the same type & name & index. See the `model.id` generation\n        // rule in `makeIdAndName` and `viewId` generation rule here).\n        // But in `replaceMerge` mode, this feature should be able to disabled when it is clear that\n        // the new model has nothing to do with the old model.\n        var requireNewView = model.__requireNewView; // This command should not work twice.\n\n        model.__requireNewView = false; // Consider: id same and type changed.\n\n        var viewId = '_ec_' + model.id + '_' + model.type;\n        var view = !requireNewView && viewMap[viewId];\n\n        if (!view) {\n          var classType = parseClassType(model.type);\n          var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) : // FIXME:TS\n          // (ChartView as ChartViewConstructor).getClass('series', classType.sub)\n          // For backward compat, still support a chart type declared as only subType\n          // like \"liquidfill\", but recommend \"series.liquidfill\"\n          // But need a base class to make a type series.\n          ChartView.getClass(classType.sub);\n\n          if (process.env.NODE_ENV !== 'production') {\n            assert(Clazz, classType.sub + ' does not exist.');\n          }\n\n          view = new Clazz();\n          view.init(ecModel, api);\n          viewMap[viewId] = view;\n          viewList.push(view);\n          zr.add(view.group);\n        }\n\n        model.__viewId = view.__id = viewId;\n        view.__alive = true;\n        view.__model = model;\n        view.group.__ecComponentInfo = {\n          mainType: model.mainType,\n          index: model.componentIndex\n        };\n        !isComponent && scheduler.prepareView(view, model, ecModel, api);\n      }\n\n      for (var i = 0; i < viewList.length;) {\n        var view = viewList[i];\n\n        if (!view.__alive) {\n          !isComponent && view.renderTask.dispose();\n          zr.remove(view.group);\n          view.dispose(ecModel, api);\n          viewList.splice(i, 1);\n\n          if (viewMap[view.__id] === view) {\n            delete viewMap[view.__id];\n          }\n\n          view.__id = view.group.__ecComponentInfo = null;\n        } else {\n          i++;\n        }\n      }\n    };\n\n    updateDirectly = function (ecIns, method, payload, mainType, subType) {\n      var ecModel = ecIns._model;\n      ecModel.setUpdatePayload(payload); // broadcast\n\n      if (!mainType) {\n        // FIXME\n        // Chart will not be update directly here, except set dirty.\n        // But there is no such scenario now.\n        each([].concat(ecIns._componentsViews).concat(ecIns._chartsViews), callView);\n        return;\n      }\n\n      var query = {};\n      query[mainType + 'Id'] = payload[mainType + 'Id'];\n      query[mainType + 'Index'] = payload[mainType + 'Index'];\n      query[mainType + 'Name'] = payload[mainType + 'Name'];\n      var condition = {\n        mainType: mainType,\n        query: query\n      };\n      subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n      var excludeSeriesId = payload.excludeSeriesId;\n      var excludeSeriesIdMap;\n\n      if (excludeSeriesId != null) {\n        excludeSeriesIdMap = createHashMap();\n        each(modelUtil.normalizeToArray(excludeSeriesId), function (id) {\n          var modelId = modelUtil.convertOptionIdName(id, null);\n\n          if (modelId != null) {\n            excludeSeriesIdMap.set(modelId, true);\n          }\n        });\n      } // If dispatchAction before setOption, do nothing.\n\n\n      ecModel && ecModel.eachComponent(condition, function (model) {\n        var isExcluded = excludeSeriesIdMap && excludeSeriesIdMap.get(model.id) != null;\n\n        if (isExcluded) {\n          return;\n        }\n\n        ;\n\n        if (isHighDownPayload(payload)) {\n          if (model instanceof SeriesModel) {\n            if (payload.type === HIGHLIGHT_ACTION_TYPE && !payload.notBlur && !model.get(['emphasis', 'disabled'])) {\n              blurSeriesFromHighlightPayload(model, payload, ecIns._api);\n            }\n          } else {\n            var _a = findComponentHighDownDispatchers(model.mainType, model.componentIndex, payload.name, ecIns._api),\n                focusSelf = _a.focusSelf,\n                dispatchers = _a.dispatchers;\n\n            if (payload.type === HIGHLIGHT_ACTION_TYPE && focusSelf && !payload.notBlur) {\n              blurComponent(model.mainType, model.componentIndex, ecIns._api);\n            } // PENDING:\n            // Whether to put this \"enter emphasis\" code in `ComponentView`,\n            // which will be the same as `ChartView` but might be not necessary\n            // and will be far from this logic.\n\n\n            if (dispatchers) {\n              each(dispatchers, function (dispatcher) {\n                payload.type === HIGHLIGHT_ACTION_TYPE ? enterEmphasis(dispatcher) : leaveEmphasis(dispatcher);\n              });\n            }\n          }\n        } else if (isSelectChangePayload(payload)) {\n          // TODO geo\n          if (model instanceof SeriesModel) {\n            toggleSelectionFromPayload(model, payload, ecIns._api);\n            updateSeriesElementSelection(model);\n            markStatusToUpdate(ecIns);\n          }\n        }\n      }, ecIns);\n      ecModel && ecModel.eachComponent(condition, function (model) {\n        var isExcluded = excludeSeriesIdMap && excludeSeriesIdMap.get(model.id) != null;\n\n        if (isExcluded) {\n          return;\n        }\n\n        ;\n        callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\n      }, ecIns);\n\n      function callView(view) {\n        view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\n      }\n    };\n\n    updateMethods = {\n      prepareAndUpdate: function (payload) {\n        prepare(this);\n        updateMethods.update.call(this, payload, {\n          // Needs to mark option changed if newOption is given.\n          // It's from MagicType.\n          // TODO If use a separate flag optionChanged in payload?\n          optionChanged: payload.newOption != null\n        });\n      },\n      update: function (payload, updateParams) {\n        var ecModel = this._model;\n        var api = this._api;\n        var zr = this._zr;\n        var coordSysMgr = this._coordSysMgr;\n        var scheduler = this._scheduler; // update before setOption\n\n        if (!ecModel) {\n          return;\n        }\n\n        ecModel.setUpdatePayload(payload);\n        scheduler.restoreData(ecModel, payload);\n        scheduler.performSeriesTasks(ecModel); // TODO\n        // Save total ecModel here for undo/redo (after restoring data and before processing data).\n        // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n        // Create new coordinate system each update\n        // In LineView may save the old coordinate system and use it to get the original point.\n\n        coordSysMgr.create(ecModel, api);\n        scheduler.performDataProcessorTasks(ecModel, payload); // Current stream render is not supported in data process. So we can update\n        // stream modes after data processing, where the filtered data is used to\n        // determine whether to use progressive rendering.\n\n        updateStreamModes(this, ecModel); // We update stream modes before coordinate system updated, then the modes info\n        // can be fetched when coord sys updating (consider the barGrid extent fix). But\n        // the drawback is the full coord info can not be fetched. Fortunately this full\n        // coord is not required in stream mode updater currently.\n\n        coordSysMgr.update(ecModel, api);\n        clearColorPalette(ecModel);\n        scheduler.performVisualTasks(ecModel, payload);\n        render(this, ecModel, api, payload, updateParams); // Set background\n\n        var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n        var darkMode = ecModel.get('darkMode');\n        zr.setBackgroundColor(backgroundColor); // Force set dark mode.\n\n        if (darkMode != null && darkMode !== 'auto') {\n          zr.setDarkMode(darkMode);\n        }\n\n        lifecycle.trigger('afterupdate', ecModel, api);\n      },\n      updateTransform: function (payload) {\n        var _this = this;\n\n        var ecModel = this._model;\n        var api = this._api; // update before setOption\n\n        if (!ecModel) {\n          return;\n        }\n\n        ecModel.setUpdatePayload(payload); // ChartView.markUpdateMethod(payload, 'updateTransform');\n\n        var componentDirtyList = [];\n        ecModel.eachComponent(function (componentType, componentModel) {\n          if (componentType === 'series') {\n            return;\n          }\n\n          var componentView = _this.getViewOfComponentModel(componentModel);\n\n          if (componentView && componentView.__alive) {\n            if (componentView.updateTransform) {\n              var result = componentView.updateTransform(componentModel, ecModel, api, payload);\n              result && result.update && componentDirtyList.push(componentView);\n            } else {\n              componentDirtyList.push(componentView);\n            }\n          }\n        });\n        var seriesDirtyMap = createHashMap();\n        ecModel.eachSeries(function (seriesModel) {\n          var chartView = _this._chartsMap[seriesModel.__viewId];\n\n          if (chartView.updateTransform) {\n            var result = chartView.updateTransform(seriesModel, ecModel, api, payload);\n            result && result.update && seriesDirtyMap.set(seriesModel.uid, 1);\n          } else {\n            seriesDirtyMap.set(seriesModel.uid, 1);\n          }\n        });\n        clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n        // this._scheduler.performVisualTasks(ecModel, payload, 'layout', true);\n\n        this._scheduler.performVisualTasks(ecModel, payload, {\n          setDirty: true,\n          dirtyMap: seriesDirtyMap\n        }); // Currently, not call render of components. Geo render cost a lot.\n        // renderComponents(ecIns, ecModel, api, payload, componentDirtyList);\n\n\n        renderSeries(this, ecModel, api, payload, {}, seriesDirtyMap);\n        lifecycle.trigger('afterupdate', ecModel, api);\n      },\n      updateView: function (payload) {\n        var ecModel = this._model; // update before setOption\n\n        if (!ecModel) {\n          return;\n        }\n\n        ecModel.setUpdatePayload(payload);\n        ChartView.markUpdateMethod(payload, 'updateView');\n        clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n\n        this._scheduler.performVisualTasks(ecModel, payload, {\n          setDirty: true\n        });\n\n        render(this, ecModel, this._api, payload, {});\n        lifecycle.trigger('afterupdate', ecModel, this._api);\n      },\n      updateVisual: function (payload) {\n        // updateMethods.update.call(this, payload);\n        var _this = this;\n\n        var ecModel = this._model; // update before setOption\n\n        if (!ecModel) {\n          return;\n        }\n\n        ecModel.setUpdatePayload(payload); // clear all visual\n\n        ecModel.eachSeries(function (seriesModel) {\n          seriesModel.getData().clearAllVisual();\n        }); // Perform visual\n\n        ChartView.markUpdateMethod(payload, 'updateVisual');\n        clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n\n        this._scheduler.performVisualTasks(ecModel, payload, {\n          visualType: 'visual',\n          setDirty: true\n        });\n\n        ecModel.eachComponent(function (componentType, componentModel) {\n          if (componentType !== 'series') {\n            var componentView = _this.getViewOfComponentModel(componentModel);\n\n            componentView && componentView.__alive && componentView.updateVisual(componentModel, ecModel, _this._api, payload);\n          }\n        });\n        ecModel.eachSeries(function (seriesModel) {\n          var chartView = _this._chartsMap[seriesModel.__viewId];\n          chartView.updateVisual(seriesModel, ecModel, _this._api, payload);\n        });\n        lifecycle.trigger('afterupdate', ecModel, this._api);\n      },\n      updateLayout: function (payload) {\n        updateMethods.update.call(this, payload);\n      }\n    };\n\n    doConvertPixel = function (ecIns, methodName, finder, value) {\n      if (ecIns._disposed) {\n        disposedWarning(ecIns.id);\n        return;\n      }\n\n      var ecModel = ecIns._model;\n\n      var coordSysList = ecIns._coordSysMgr.getCoordinateSystems();\n\n      var result;\n      var parsedFinder = modelUtil.parseFinder(ecModel, finder);\n\n      for (var i = 0; i < coordSysList.length; i++) {\n        var coordSys = coordSysList[i];\n\n        if (coordSys[methodName] && (result = coordSys[methodName](ecModel, parsedFinder, value)) != null) {\n          return result;\n        }\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        warn('No coordinate system that supports ' + methodName + ' found by the given finder.');\n      }\n    };\n\n    updateStreamModes = function (ecIns, ecModel) {\n      var chartsMap = ecIns._chartsMap;\n      var scheduler = ecIns._scheduler;\n      ecModel.eachSeries(function (seriesModel) {\n        scheduler.updateStreamModes(seriesModel, chartsMap[seriesModel.__viewId]);\n      });\n    };\n\n    doDispatchAction = function (payload, silent) {\n      var _this = this;\n\n      var ecModel = this.getModel();\n      var payloadType = payload.type;\n      var escapeConnect = payload.escapeConnect;\n      var actionWrap = actions[payloadType];\n      var actionInfo = actionWrap.actionInfo;\n      var cptTypeTmp = (actionInfo.update || 'update').split(':');\n      var updateMethod = cptTypeTmp.pop();\n      var cptType = cptTypeTmp[0] != null && parseClassType(cptTypeTmp[0]);\n      this[IN_MAIN_PROCESS_KEY] = true;\n      var payloads = [payload];\n      var batched = false; // Batch action\n\n      if (payload.batch) {\n        batched = true;\n        payloads = map(payload.batch, function (item) {\n          item = defaults(extend({}, item), payload);\n          item.batch = null;\n          return item;\n        });\n      }\n\n      var eventObjBatch = [];\n      var eventObj;\n      var isSelectChange = isSelectChangePayload(payload);\n      var isHighDown = isHighDownPayload(payload); // Only leave blur once if there are multiple batches.\n\n      if (isHighDown) {\n        allLeaveBlur(this._api);\n      }\n\n      each(payloads, function (batchItem) {\n        // Action can specify the event by return it.\n        eventObj = actionWrap.action(batchItem, _this._model, _this._api); // Emit event outside\n\n        eventObj = eventObj || extend({}, batchItem); // Convert type to eventType\n\n        eventObj.type = actionInfo.event || eventObj.type;\n        eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.\n\n        if (isHighDown) {\n          var _a = modelUtil.preParseFinder(payload),\n              queryOptionMap = _a.queryOptionMap,\n              mainTypeSpecified = _a.mainTypeSpecified;\n\n          var componentMainType = mainTypeSpecified ? queryOptionMap.keys()[0] : 'series';\n          updateDirectly(_this, updateMethod, batchItem, componentMainType);\n          markStatusToUpdate(_this);\n        } else if (isSelectChange) {\n          // At present `dispatchAction({ type: 'select', ... })` is not supported on components.\n          // geo still use 'geoselect'.\n          updateDirectly(_this, updateMethod, batchItem, 'series');\n          markStatusToUpdate(_this);\n        } else if (cptType) {\n          updateDirectly(_this, updateMethod, batchItem, cptType.main, cptType.sub);\n        }\n      });\n\n      if (updateMethod !== 'none' && !isHighDown && !isSelectChange && !cptType) {\n        try {\n          // Still dirty\n          if (this[PENDING_UPDATE]) {\n            prepare(this);\n            updateMethods.update.call(this, payload);\n            this[PENDING_UPDATE] = null;\n          } else {\n            updateMethods[updateMethod].call(this, payload);\n          }\n        } catch (e) {\n          this[IN_MAIN_PROCESS_KEY] = false;\n          throw e;\n        }\n      } // Follow the rule of action batch\n\n\n      if (batched) {\n        eventObj = {\n          type: actionInfo.event || payloadType,\n          escapeConnect: escapeConnect,\n          batch: eventObjBatch\n        };\n      } else {\n        eventObj = eventObjBatch[0];\n      }\n\n      this[IN_MAIN_PROCESS_KEY] = false;\n\n      if (!silent) {\n        var messageCenter = this._messageCenter;\n        messageCenter.trigger(eventObj.type, eventObj); // Extra triggered 'selectchanged' event\n\n        if (isSelectChange) {\n          var newObj = {\n            type: 'selectchanged',\n            escapeConnect: escapeConnect,\n            selected: getAllSelectedIndices(ecModel),\n            isFromClick: payload.isFromClick || false,\n            fromAction: payload.type,\n            fromActionPayload: payload\n          };\n          messageCenter.trigger(newObj.type, newObj);\n        }\n      }\n    };\n\n    flushPendingActions = function (silent) {\n      var pendingActions = this._pendingActions;\n\n      while (pendingActions.length) {\n        var payload = pendingActions.shift();\n        doDispatchAction.call(this, payload, silent);\n      }\n    };\n\n    triggerUpdatedEvent = function (silent) {\n      !silent && this.trigger('updated');\n    };\n    /**\n     * Event `rendered` is triggered when zr\n     * rendered. It is useful for realtime\n     * snapshot (reflect animation).\n     *\n     * Event `finished` is triggered when:\n     * (1) zrender rendering finished.\n     * (2) initial animation finished.\n     * (3) progressive rendering finished.\n     * (4) no pending action.\n     * (5) no delayed setOption needs to be processed.\n     */\n\n\n    bindRenderedEvent = function (zr, ecIns) {\n      zr.on('rendered', function (params) {\n        ecIns.trigger('rendered', params); // The `finished` event should not be triggered repeatedly,\n        // so it should only be triggered when rendering indeed happens\n        // in zrender. (Consider the case that dipatchAction is keep\n        // triggering when mouse move).\n\n        if ( // Although zr is dirty if initial animation is not finished\n        // and this checking is called on frame, we also check\n        // animation finished for robustness.\n        zr.animation.isFinished() && !ecIns[PENDING_UPDATE] && !ecIns._scheduler.unfinished && !ecIns._pendingActions.length) {\n          ecIns.trigger('finished');\n        }\n      });\n    };\n\n    bindMouseEvent = function (zr, ecIns) {\n      zr.on('mouseover', function (e) {\n        var el = e.target;\n        var dispatcher = findEventDispatcher(el, isHighDownDispatcher);\n\n        if (dispatcher) {\n          handleGlobalMouseOverForHighDown(dispatcher, e, ecIns._api);\n          markStatusToUpdate(ecIns);\n        }\n      }).on('mouseout', function (e) {\n        var el = e.target;\n        var dispatcher = findEventDispatcher(el, isHighDownDispatcher);\n\n        if (dispatcher) {\n          handleGlobalMouseOutForHighDown(dispatcher, e, ecIns._api);\n          markStatusToUpdate(ecIns);\n        }\n      }).on('click', function (e) {\n        var el = e.target;\n        var dispatcher = findEventDispatcher(el, function (target) {\n          return getECData(target).dataIndex != null;\n        }, true);\n\n        if (dispatcher) {\n          var actionType = dispatcher.selected ? 'unselect' : 'select';\n          var ecData = getECData(dispatcher);\n\n          ecIns._api.dispatchAction({\n            type: actionType,\n            dataType: ecData.dataType,\n            dataIndexInside: ecData.dataIndex,\n            seriesIndex: ecData.seriesIndex,\n            isFromClick: true\n          });\n        }\n      });\n    };\n\n    function clearColorPalette(ecModel) {\n      ecModel.clearColorPalette();\n      ecModel.eachSeries(function (seriesModel) {\n        seriesModel.clearColorPalette();\n      });\n    }\n\n    ; // Allocate zlevels for series and components\n\n    function allocateZlevels(ecModel) {\n      ;\n      var componentZLevels = [];\n      var seriesZLevels = [];\n      var hasSeperateZLevel = false;\n      ecModel.eachComponent(function (componentType, componentModel) {\n        var zlevel = componentModel.get('zlevel') || 0;\n        var z = componentModel.get('z') || 0;\n        var zlevelKey = componentModel.getZLevelKey();\n        hasSeperateZLevel = hasSeperateZLevel || !!zlevelKey;\n        (componentType === 'series' ? seriesZLevels : componentZLevels).push({\n          zlevel: zlevel,\n          z: z,\n          idx: componentModel.componentIndex,\n          type: componentType,\n          key: zlevelKey\n        });\n      });\n\n      if (hasSeperateZLevel) {\n        // Series after component\n        var zLevels = componentZLevels.concat(seriesZLevels);\n        var lastSeriesZLevel_1;\n        var lastSeriesKey_1;\n        timsort(zLevels, function (a, b) {\n          if (a.zlevel === b.zlevel) {\n            return a.z - b.z;\n          }\n\n          return a.zlevel - b.zlevel;\n        });\n        each(zLevels, function (item) {\n          var componentModel = ecModel.getComponent(item.type, item.idx);\n          var zlevel = item.zlevel;\n          var key = item.key;\n\n          if (lastSeriesZLevel_1 != null) {\n            zlevel = Math.max(lastSeriesZLevel_1, zlevel);\n          }\n\n          if (key) {\n            if (zlevel === lastSeriesZLevel_1 && key !== lastSeriesKey_1) {\n              zlevel++;\n            }\n\n            lastSeriesKey_1 = key;\n          } else if (lastSeriesKey_1) {\n            if (zlevel === lastSeriesZLevel_1) {\n              zlevel++;\n            }\n\n            lastSeriesKey_1 = '';\n          }\n\n          lastSeriesZLevel_1 = zlevel;\n          componentModel.setZLevel(zlevel);\n        });\n      }\n    }\n\n    render = function (ecIns, ecModel, api, payload, updateParams) {\n      allocateZlevels(ecModel);\n      renderComponents(ecIns, ecModel, api, payload, updateParams);\n      each(ecIns._chartsViews, function (chart) {\n        chart.__alive = false;\n      });\n      renderSeries(ecIns, ecModel, api, payload, updateParams); // Remove groups of unrendered charts\n\n      each(ecIns._chartsViews, function (chart) {\n        if (!chart.__alive) {\n          chart.remove(ecModel, api);\n        }\n      });\n    };\n\n    renderComponents = function (ecIns, ecModel, api, payload, updateParams, dirtyList) {\n      each(dirtyList || ecIns._componentsViews, function (componentView) {\n        var componentModel = componentView.__model;\n        clearStates(componentModel, componentView);\n        componentView.render(componentModel, ecModel, api, payload);\n        updateZ(componentModel, componentView);\n        updateStates(componentModel, componentView);\n      });\n    };\n    /**\n     * Render each chart and component\n     */\n\n\n    renderSeries = function (ecIns, ecModel, api, payload, updateParams, dirtyMap) {\n      // Render all charts\n      var scheduler = ecIns._scheduler;\n      updateParams = extend(updateParams || {}, {\n        updatedSeries: ecModel.getSeries()\n      }); // TODO progressive?\n\n      lifecycle.trigger('series:beforeupdate', ecModel, api, updateParams);\n      var unfinished = false;\n      ecModel.eachSeries(function (seriesModel) {\n        var chartView = ecIns._chartsMap[seriesModel.__viewId];\n        chartView.__alive = true;\n        var renderTask = chartView.renderTask;\n        scheduler.updatePayload(renderTask, payload); // TODO states on marker.\n\n        clearStates(seriesModel, chartView);\n\n        if (dirtyMap && dirtyMap.get(seriesModel.uid)) {\n          renderTask.dirty();\n        }\n\n        if (renderTask.perform(scheduler.getPerformArgs(renderTask))) {\n          unfinished = true;\n        }\n\n        chartView.group.silent = !!seriesModel.get('silent'); // Should not call markRedraw on group, because it will disable zrender\n        // incremental render (always render from the __startIndex each frame)\n        // chartView.group.markRedraw();\n\n        updateBlend(seriesModel, chartView);\n        updateSeriesElementSelection(seriesModel);\n      });\n      scheduler.unfinished = unfinished || scheduler.unfinished;\n      lifecycle.trigger('series:layoutlabels', ecModel, api, updateParams); // transition after label is layouted.\n\n      lifecycle.trigger('series:transition', ecModel, api, updateParams);\n      ecModel.eachSeries(function (seriesModel) {\n        var chartView = ecIns._chartsMap[seriesModel.__viewId]; // Update Z after labels updated. Before applying states.\n\n        updateZ(seriesModel, chartView); // NOTE: Update states after label is updated.\n        // label should be in normal status when layouting.\n\n        updateStates(seriesModel, chartView);\n      }); // If use hover layer\n\n      updateHoverLayerStatus(ecIns, ecModel);\n      lifecycle.trigger('series:afterupdate', ecModel, api, updateParams);\n    };\n\n    markStatusToUpdate = function (ecIns) {\n      ecIns[STATUS_NEEDS_UPDATE_KEY] = true; // Wake up zrender if it's sleep. Let it update states in the next frame.\n\n      ecIns.getZr().wakeUp();\n    };\n\n    applyChangedStates = function (ecIns) {\n      if (!ecIns[STATUS_NEEDS_UPDATE_KEY]) {\n        return;\n      }\n\n      ecIns.getZr().storage.traverse(function (el) {\n        // Not applied on removed elements, it may still in fading.\n        if (graphic.isElementRemoved(el)) {\n          return;\n        }\n\n        applyElementStates(el);\n      });\n      ecIns[STATUS_NEEDS_UPDATE_KEY] = false;\n    };\n\n    function applyElementStates(el) {\n      var newStates = [];\n      var oldStates = el.currentStates; // Keep other states.\n\n      for (var i = 0; i < oldStates.length; i++) {\n        var stateName = oldStates[i];\n\n        if (!(stateName === 'emphasis' || stateName === 'blur' || stateName === 'select')) {\n          newStates.push(stateName);\n        }\n      } // Only use states when it's exists.\n\n\n      if (el.selected && el.states.select) {\n        newStates.push('select');\n      }\n\n      if (el.hoverState === HOVER_STATE_EMPHASIS && el.states.emphasis) {\n        newStates.push('emphasis');\n      } else if (el.hoverState === HOVER_STATE_BLUR && el.states.blur) {\n        newStates.push('blur');\n      }\n\n      el.useStates(newStates);\n    }\n\n    function updateHoverLayerStatus(ecIns, ecModel) {\n      var zr = ecIns._zr;\n      var storage = zr.storage;\n      var elCount = 0;\n      storage.traverse(function (el) {\n        if (!el.isGroup) {\n          elCount++;\n        }\n      });\n\n      if (elCount > ecModel.get('hoverLayerThreshold') && !env.node && !env.worker) {\n        ecModel.eachSeries(function (seriesModel) {\n          if (seriesModel.preventUsingHoverLayer) {\n            return;\n          }\n\n          var chartView = ecIns._chartsMap[seriesModel.__viewId];\n\n          if (chartView.__alive) {\n            chartView.eachRendered(function (el) {\n              if (el.states.emphasis) {\n                el.states.emphasis.hoverLayer = true;\n              }\n            });\n          }\n        });\n      }\n    }\n\n    ;\n    /**\n     * Update chart and blend.\n     */\n\n    function updateBlend(seriesModel, chartView) {\n      var blendMode = seriesModel.get('blendMode') || null;\n      chartView.eachRendered(function (el) {\n        // FIXME marker and other components\n        if (!el.isGroup) {\n          // DON'T mark the element dirty. In case element is incremental and don't want to rerender.\n          el.style.blend = blendMode;\n        }\n      });\n    }\n\n    ;\n\n    function updateZ(model, view) {\n      if (model.preventAutoZ) {\n        return;\n      }\n\n      var z = model.get('z') || 0;\n      var zlevel = model.get('zlevel') || 0; // Set z and zlevel\n\n      view.eachRendered(function (el) {\n        doUpdateZ(el, z, zlevel, -Infinity); // Don't traverse the children because it has been traversed in _updateZ.\n\n        return true;\n      });\n    }\n\n    ;\n\n    function doUpdateZ(el, z, zlevel, maxZ2) {\n      // Group may also have textContent\n      var label = el.getTextContent();\n      var labelLine = el.getTextGuideLine();\n      var isGroup = el.isGroup;\n\n      if (isGroup) {\n        // set z & zlevel of children elements of Group\n        var children = el.childrenRef();\n\n        for (var i = 0; i < children.length; i++) {\n          maxZ2 = Math.max(doUpdateZ(children[i], z, zlevel, maxZ2), maxZ2);\n        }\n      } else {\n        // not Group\n        el.z = z;\n        el.zlevel = zlevel;\n        maxZ2 = Math.max(el.z2, maxZ2);\n      } // always set z and zlevel if label/labelLine exists\n\n\n      if (label) {\n        label.z = z;\n        label.zlevel = zlevel; // lift z2 of text content\n        // TODO if el.emphasis.z2 is spcefied, what about textContent.\n\n        isFinite(maxZ2) && (label.z2 = maxZ2 + 2);\n      }\n\n      if (labelLine) {\n        var textGuideLineConfig = el.textGuideLineConfig;\n        labelLine.z = z;\n        labelLine.zlevel = zlevel;\n        isFinite(maxZ2) && (labelLine.z2 = maxZ2 + (textGuideLineConfig && textGuideLineConfig.showAbove ? 1 : -1));\n      }\n\n      return maxZ2;\n    } // Clear states without animation.\n    // TODO States on component.\n\n\n    function clearStates(model, view) {\n      view.eachRendered(function (el) {\n        // Not applied on removed elements, it may still in fading.\n        if (graphic.isElementRemoved(el)) {\n          return;\n        }\n\n        var textContent = el.getTextContent();\n        var textGuide = el.getTextGuideLine();\n\n        if (el.stateTransition) {\n          el.stateTransition = null;\n        }\n\n        if (textContent && textContent.stateTransition) {\n          textContent.stateTransition = null;\n        }\n\n        if (textGuide && textGuide.stateTransition) {\n          textGuide.stateTransition = null;\n        } // TODO If el is incremental.\n\n\n        if (el.hasState()) {\n          el.prevStates = el.currentStates;\n          el.clearStates();\n        } else if (el.prevStates) {\n          el.prevStates = null;\n        }\n      });\n    }\n\n    function updateStates(model, view) {\n      var stateAnimationModel = model.getModel('stateAnimation');\n      var enableAnimation = model.isAnimationEnabled();\n      var duration = stateAnimationModel.get('duration');\n      var stateTransition = duration > 0 ? {\n        duration: duration,\n        delay: stateAnimationModel.get('delay'),\n        easing: stateAnimationModel.get('easing') // additive: stateAnimationModel.get('additive')\n\n      } : null;\n      view.eachRendered(function (el) {\n        if (el.states && el.states.emphasis) {\n          // Not applied on removed elements, it may still in fading.\n          if (graphic.isElementRemoved(el)) {\n            return;\n          }\n\n          if (el instanceof graphic.Path) {\n            savePathStates(el);\n          } // Only updated on changed element. In case element is incremental and don't want to rerender.\n          // TODO, a more proper way?\n\n\n          if (el.__dirty) {\n            var prevStates = el.prevStates; // Restore states without animation\n\n            if (prevStates) {\n              el.useStates(prevStates);\n            }\n          } // Update state transition and enable animation again.\n\n\n          if (enableAnimation) {\n            el.stateTransition = stateTransition;\n            var textContent = el.getTextContent();\n            var textGuide = el.getTextGuideLine(); // TODO Is it necessary to animate label?\n\n            if (textContent) {\n              textContent.stateTransition = stateTransition;\n            }\n\n            if (textGuide) {\n              textGuide.stateTransition = stateTransition;\n            }\n          } // Use highlighted and selected flag to toggle states.\n\n\n          if (el.__dirty) {\n            applyElementStates(el);\n          }\n        }\n      });\n    }\n\n    ;\n\n    createExtensionAPI = function (ecIns) {\n      return new (\n      /** @class */\n      function (_super) {\n        __extends(class_1, _super);\n\n        function class_1() {\n          return _super !== null && _super.apply(this, arguments) || this;\n        }\n\n        class_1.prototype.getCoordinateSystems = function () {\n          return ecIns._coordSysMgr.getCoordinateSystems();\n        };\n\n        class_1.prototype.getComponentByElement = function (el) {\n          while (el) {\n            var modelInfo = el.__ecComponentInfo;\n\n            if (modelInfo != null) {\n              return ecIns._model.getComponent(modelInfo.mainType, modelInfo.index);\n            }\n\n            el = el.parent;\n          }\n        };\n\n        class_1.prototype.enterEmphasis = function (el, highlightDigit) {\n          enterEmphasis(el, highlightDigit);\n          markStatusToUpdate(ecIns);\n        };\n\n        class_1.prototype.leaveEmphasis = function (el, highlightDigit) {\n          leaveEmphasis(el, highlightDigit);\n          markStatusToUpdate(ecIns);\n        };\n\n        class_1.prototype.enterBlur = function (el) {\n          enterBlur(el);\n          markStatusToUpdate(ecIns);\n        };\n\n        class_1.prototype.leaveBlur = function (el) {\n          leaveBlur(el);\n          markStatusToUpdate(ecIns);\n        };\n\n        class_1.prototype.enterSelect = function (el) {\n          enterSelect(el);\n          markStatusToUpdate(ecIns);\n        };\n\n        class_1.prototype.leaveSelect = function (el) {\n          leaveSelect(el);\n          markStatusToUpdate(ecIns);\n        };\n\n        class_1.prototype.getModel = function () {\n          return ecIns.getModel();\n        };\n\n        class_1.prototype.getViewOfComponentModel = function (componentModel) {\n          return ecIns.getViewOfComponentModel(componentModel);\n        };\n\n        class_1.prototype.getViewOfSeriesModel = function (seriesModel) {\n          return ecIns.getViewOfSeriesModel(seriesModel);\n        };\n\n        return class_1;\n      }(ExtensionAPI))(ecIns);\n    };\n\n    enableConnect = function (chart) {\n      function updateConnectedChartsStatus(charts, status) {\n        for (var i = 0; i < charts.length; i++) {\n          var otherChart = charts[i];\n          otherChart[CONNECT_STATUS_KEY] = status;\n        }\n      }\n\n      each(eventActionMap, function (actionType, eventType) {\n        chart._messageCenter.on(eventType, function (event) {\n          if (connectedGroups[chart.group] && chart[CONNECT_STATUS_KEY] !== CONNECT_STATUS_PENDING) {\n            if (event && event.escapeConnect) {\n              return;\n            }\n\n            var action_1 = chart.makeActionFromEvent(event);\n            var otherCharts_1 = [];\n            each(instances, function (otherChart) {\n              if (otherChart !== chart && otherChart.group === chart.group) {\n                otherCharts_1.push(otherChart);\n              }\n            });\n            updateConnectedChartsStatus(otherCharts_1, CONNECT_STATUS_PENDING);\n            each(otherCharts_1, function (otherChart) {\n              if (otherChart[CONNECT_STATUS_KEY] !== CONNECT_STATUS_UPDATING) {\n                otherChart.dispatchAction(action_1);\n              }\n            });\n            updateConnectedChartsStatus(otherCharts_1, CONNECT_STATUS_UPDATED);\n          }\n        });\n      });\n    };\n  }();\n\n  return ECharts;\n}(Eventful);\n\nvar echartsProto = ECharts.prototype;\nechartsProto.on = createRegisterEventWithLowercaseECharts('on');\nechartsProto.off = createRegisterEventWithLowercaseECharts('off');\n/**\n * @deprecated\n */\n// @ts-ignore\n\nechartsProto.one = function (eventName, cb, ctx) {\n  var self = this;\n  deprecateLog('ECharts#one is deprecated.');\n\n  function wrapped() {\n    var args2 = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args2[_i] = arguments[_i];\n    }\n\n    cb && cb.apply && cb.apply(this, args2); // @ts-ignore\n\n    self.off(eventName, wrapped);\n  }\n\n  ; // @ts-ignore\n\n  this.on.call(this, eventName, wrapped, ctx);\n};\n\nvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\n\nfunction disposedWarning(id) {\n  if (process.env.NODE_ENV !== 'production') {\n    warn('Instance ' + id + ' has been disposed');\n  }\n}\n\nvar actions = {};\n/**\n * Map eventType to actionType\n */\n\nvar eventActionMap = {};\nvar dataProcessorFuncs = [];\nvar optionPreprocessorFuncs = [];\nvar visualFuncs = [];\nvar themeStorage = {};\nvar loadingEffects = {};\nvar instances = {};\nvar connectedGroups = {};\nvar idBase = +new Date() - 0;\nvar groupIdBase = +new Date() - 0;\nvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n/**\n * @param opts.devicePixelRatio Use window.devicePixelRatio by default\n * @param opts.renderer Can choose 'canvas' or 'svg' to render the chart.\n * @param opts.width Use clientWidth of the input `dom` by default.\n *        Can be 'auto' (the same as null/undefined)\n * @param opts.height Use clientHeight of the input `dom` by default.\n *        Can be 'auto' (the same as null/undefined)\n * @param opts.locale Specify the locale.\n * @param opts.useDirtyRect Enable dirty rectangle rendering or not.\n */\n\nexport function init(dom, theme, opts) {\n  var isClient = !(opts && opts.ssr);\n\n  if (isClient) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!dom) {\n        throw new Error('Initialize failed: invalid dom.');\n      }\n    }\n\n    var existInstance = getInstanceByDom(dom);\n\n    if (existInstance) {\n      if (process.env.NODE_ENV !== 'production') {\n        warn('There is a chart instance already initialized on the dom.');\n      }\n\n      return existInstance;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isDom(dom) && dom.nodeName.toUpperCase() !== 'CANVAS' && (!dom.clientWidth && (!opts || opts.width == null) || !dom.clientHeight && (!opts || opts.height == null))) {\n        warn('Can\\'t get DOM width or height. Please check ' + 'dom.clientWidth and dom.clientHeight. They should not be 0.' + 'For example, you may need to call this in the callback ' + 'of window.onload.');\n      }\n    }\n  }\n\n  var chart = new ECharts(dom, theme, opts);\n  chart.id = 'ec_' + idBase++;\n  instances[chart.id] = chart;\n  isClient && modelUtil.setAttribute(dom, DOM_ATTRIBUTE_KEY, chart.id);\n  enableConnect(chart);\n  lifecycle.trigger('afterinit', chart);\n  return chart;\n}\n/**\n * @usage\n * (A)\n * ```js\n * let chart1 = echarts.init(dom1);\n * let chart2 = echarts.init(dom2);\n * chart1.group = 'xxx';\n * chart2.group = 'xxx';\n * echarts.connect('xxx');\n * ```\n * (B)\n * ```js\n * let chart1 = echarts.init(dom1);\n * let chart2 = echarts.init(dom2);\n * echarts.connect('xxx', [chart1, chart2]);\n * ```\n */\n\nexport function connect(groupId) {\n  // Is array of charts\n  if (isArray(groupId)) {\n    var charts = groupId;\n    groupId = null; // If any chart has group\n\n    each(charts, function (chart) {\n      if (chart.group != null) {\n        groupId = chart.group;\n      }\n    });\n    groupId = groupId || 'g_' + groupIdBase++;\n    each(charts, function (chart) {\n      chart.group = groupId;\n    });\n  }\n\n  connectedGroups[groupId] = true;\n  return groupId;\n}\n/**\n * @deprecated\n */\n\nexport function disConnect(groupId) {\n  connectedGroups[groupId] = false;\n}\n/**\n * Alias and backward compatibility\n */\n\nexport var disconnect = disConnect;\n/**\n * Dispose a chart instance\n */\n\nexport function dispose(chart) {\n  if (isString(chart)) {\n    chart = instances[chart];\n  } else if (!(chart instanceof ECharts)) {\n    // Try to treat as dom\n    chart = getInstanceByDom(chart);\n  }\n\n  if (chart instanceof ECharts && !chart.isDisposed()) {\n    chart.dispose();\n  }\n}\nexport function getInstanceByDom(dom) {\n  return instances[modelUtil.getAttribute(dom, DOM_ATTRIBUTE_KEY)];\n}\nexport function getInstanceById(key) {\n  return instances[key];\n}\n/**\n * Register theme\n */\n\nexport function registerTheme(name, theme) {\n  themeStorage[name] = theme;\n}\n/**\n * Register option preprocessor\n */\n\nexport function registerPreprocessor(preprocessorFunc) {\n  if (indexOf(optionPreprocessorFuncs, preprocessorFunc) < 0) {\n    optionPreprocessorFuncs.push(preprocessorFunc);\n  }\n}\nexport function registerProcessor(priority, processor) {\n  normalizeRegister(dataProcessorFuncs, priority, processor, PRIORITY_PROCESSOR_DEFAULT);\n}\n/**\n * Register postIniter\n * @param {Function} postInitFunc\n */\n\nexport function registerPostInit(postInitFunc) {\n  registerUpdateLifecycle('afterinit', postInitFunc);\n}\n/**\n * Register postUpdater\n * @param {Function} postUpdateFunc\n */\n\nexport function registerPostUpdate(postUpdateFunc) {\n  registerUpdateLifecycle('afterupdate', postUpdateFunc);\n}\nexport function registerUpdateLifecycle(name, cb) {\n  lifecycle.on(name, cb);\n}\nexport function registerAction(actionInfo, eventName, action) {\n  if (isFunction(eventName)) {\n    action = eventName;\n    eventName = '';\n  }\n\n  var actionType = isObject(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {\n    event: eventName\n  }][0]; // Event name is all lowercase\n\n  actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n  eventName = actionInfo.event;\n\n  if (eventActionMap[eventName]) {\n    // Already registered.\n    return;\n  } // Validate action type and event name.\n\n\n  assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n  if (!actions[actionType]) {\n    actions[actionType] = {\n      action: action,\n      actionInfo: actionInfo\n    };\n  }\n\n  eventActionMap[eventName] = actionType;\n}\nexport function registerCoordinateSystem(type, coordSysCreator) {\n  CoordinateSystemManager.register(type, coordSysCreator);\n}\n/**\n * Get dimensions of specified coordinate system.\n * @param {string} type\n * @return {Array.<string|Object>}\n */\n\nexport function getCoordinateSystemDimensions(type) {\n  var coordSysCreator = CoordinateSystemManager.get(type);\n\n  if (coordSysCreator) {\n    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\n  }\n}\nexport { registerLocale } from './locale.js';\n\nfunction registerLayout(priority, layoutTask) {\n  normalizeRegister(visualFuncs, priority, layoutTask, PRIORITY_VISUAL_LAYOUT, 'layout');\n}\n\nfunction registerVisual(priority, visualTask) {\n  normalizeRegister(visualFuncs, priority, visualTask, PRIORITY_VISUAL_CHART, 'visual');\n}\n\nexport { registerLayout, registerVisual };\nvar registeredTasks = [];\n\nfunction normalizeRegister(targetList, priority, fn, defaultPriority, visualType) {\n  if (isFunction(priority) || isObject(priority)) {\n    fn = priority;\n    priority = defaultPriority;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (isNaN(priority) || priority == null) {\n      throw new Error('Illegal priority');\n    } // Check duplicate\n\n\n    each(targetList, function (wrap) {\n      assert(wrap.__raw !== fn);\n    });\n  } // Already registered\n\n\n  if (indexOf(registeredTasks, fn) >= 0) {\n    return;\n  }\n\n  registeredTasks.push(fn);\n  var stageHandler = Scheduler.wrapStageHandler(fn, visualType);\n  stageHandler.__prio = priority;\n  stageHandler.__raw = fn;\n  targetList.push(stageHandler);\n}\n\nexport function registerLoading(name, loadingFx) {\n  loadingEffects[name] = loadingFx;\n}\n/**\n * ZRender need a canvas context to do measureText.\n * But in node environment canvas may be created by node-canvas.\n * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n *\n *\n * @deprecated use setPlatformAPI({ createCanvas }) instead.\n *\n * @example\n *     let Canvas = require('canvas');\n *     let echarts = require('echarts');\n *     echarts.setCanvasCreator(function () {\n *         // Small size is enough.\n *         return new Canvas(32, 32);\n *     });\n */\n\nexport function setCanvasCreator(creator) {\n  if (process.env.NODE_ENV !== 'production') {\n    deprecateLog('setCanvasCreator is deprecated. Use setPlatformAPI({ createCanvas }) instead.');\n  }\n\n  setPlatformAPI({\n    createCanvas: creator\n  });\n}\n/**\n * The parameters and usage: see `geoSourceManager.registerMap`.\n * Compatible with previous `echarts.registerMap`.\n */\n\nexport function registerMap(mapName, geoJson, specialAreas) {\n  var registerMap = getImpl('registerMap');\n  registerMap && registerMap(mapName, geoJson, specialAreas);\n}\nexport function getMap(mapName) {\n  var getMap = getImpl('getMap');\n  return getMap && getMap(mapName);\n}\nexport var registerTransform = registerExternalTransform;\n/**\n * Globa dispatchAction to a specified chart instance.\n */\n// export function dispatchAction(payload: { chartId: string } & Payload, opt?: Parameters<ECharts['dispatchAction']>[1]) {\n//     if (!payload || !payload.chartId) {\n//         // Must have chartId to find chart\n//         return;\n//     }\n//     const chart = instances[payload.chartId];\n//     if (chart) {\n//         chart.dispatchAction(payload, opt);\n//     }\n// }\n// Builtin global visual\n\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesStyleTask);\nregisterVisual(PRIORITY_VISUAL_CHART_DATA_CUSTOM, dataStyleTask);\nregisterVisual(PRIORITY_VISUAL_CHART_DATA_CUSTOM, dataColorPaletteTask);\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesSymbolTask);\nregisterVisual(PRIORITY_VISUAL_CHART_DATA_CUSTOM, dataSymbolTask);\nregisterVisual(PRIORITY_VISUAL_DECAL, decal);\nregisterPreprocessor(backwardCompat);\nregisterProcessor(PRIORITY_PROCESSOR_DATASTACK, dataStack);\nregisterLoading('default', loadingDefault); // Default actions\n\nregisterAction({\n  type: HIGHLIGHT_ACTION_TYPE,\n  event: HIGHLIGHT_ACTION_TYPE,\n  update: HIGHLIGHT_ACTION_TYPE\n}, noop);\nregisterAction({\n  type: DOWNPLAY_ACTION_TYPE,\n  event: DOWNPLAY_ACTION_TYPE,\n  update: DOWNPLAY_ACTION_TYPE\n}, noop);\nregisterAction({\n  type: SELECT_ACTION_TYPE,\n  event: SELECT_ACTION_TYPE,\n  update: SELECT_ACTION_TYPE\n}, noop);\nregisterAction({\n  type: UNSELECT_ACTION_TYPE,\n  event: UNSELECT_ACTION_TYPE,\n  update: UNSELECT_ACTION_TYPE\n}, noop);\nregisterAction({\n  type: TOGGLE_SELECT_ACTION_TYPE,\n  event: TOGGLE_SELECT_ACTION_TYPE,\n  update: TOGGLE_SELECT_ACTION_TYPE\n}, noop); // Default theme\n\nregisterTheme('light', lightTheme);\nregisterTheme('dark', darkTheme); // For backward compatibility, where the namespace `dataTool` will\n// be mounted on `echarts` is the extension `dataTool` is imported.\n\nexport var dataTool = {};","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { error } from '../util/log.js'; // Implementation of exported APIs. For example registerMap, getMap.\n// The implementations will be registered when installing the component.\n// Avoid these code being bundled to the core module.\n\nvar implsStore = {}; // TODO Type\n\nexport function registerImpl(name, impl) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (implsStore[name]) {\n      error(\"Already has an implementation of \" + name + \".\");\n    }\n  }\n\n  implsStore[name] = impl;\n}\nexport function getImpl(name) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!implsStore[name]) {\n      error(\"Implementation of \" + name + \" doesn't exists.\");\n    }\n  }\n\n  return implsStore[name];\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport Model from '../model/Model.js';\nimport env from 'zrender/lib/core/env.js'; // default import ZH and EN lang\n\nimport langEN from '../i18n/langEN.js';\nimport langZH from '../i18n/langZH.js';\nimport { isString, clone, merge } from 'zrender/lib/core/util.js';\nvar LOCALE_ZH = 'ZH';\nvar LOCALE_EN = 'EN';\nvar DEFAULT_LOCALE = LOCALE_EN;\nvar localeStorage = {};\nvar localeModels = {};\nexport var SYSTEM_LANG = !env.domSupported ? DEFAULT_LOCALE : function () {\n  var langStr = (\n  /* eslint-disable-next-line */\n  document.documentElement.lang || navigator.language || navigator.browserLanguage).toUpperCase();\n  return langStr.indexOf(LOCALE_ZH) > -1 ? LOCALE_ZH : DEFAULT_LOCALE;\n}();\nexport function registerLocale(locale, localeObj) {\n  locale = locale.toUpperCase();\n  localeModels[locale] = new Model(localeObj);\n  localeStorage[locale] = localeObj;\n} // export function getLocale(locale: string) {\n//     return localeStorage[locale];\n// }\n\nexport function createLocaleObject(locale) {\n  if (isString(locale)) {\n    var localeObj = localeStorage[locale.toUpperCase()] || {};\n\n    if (locale === LOCALE_ZH || locale === LOCALE_EN) {\n      return clone(localeObj);\n    } else {\n      return merge(clone(localeObj), clone(localeStorage[DEFAULT_LOCALE]), false);\n    }\n  } else {\n    return merge(clone(locale), clone(localeStorage[DEFAULT_LOCALE]), false);\n  }\n}\nexport function getLocaleModel(lang) {\n  return localeModels[lang];\n}\nexport function getDefaultLocaleModel() {\n  return localeModels[DEFAULT_LOCALE];\n} // Default locale\n\nregisterLocale(LOCALE_EN, langEN);\nregisterLocale(LOCALE_ZH, langZH);","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { assert, isArray } from 'zrender/lib/core/util.js';\n;\n/**\n * @param {Object} define\n * @return See the return of `createTask`.\n */\n\nexport function createTask(define) {\n  return new Task(define);\n}\n\nvar Task =\n/** @class */\nfunction () {\n  function Task(define) {\n    define = define || {};\n    this._reset = define.reset;\n    this._plan = define.plan;\n    this._count = define.count;\n    this._onDirty = define.onDirty;\n    this._dirty = true;\n  }\n  /**\n   * @param step Specified step.\n   * @param skip Skip customer perform call.\n   * @param modBy Sampling window size.\n   * @param modDataCount Sampling count.\n   * @return whether unfinished.\n   */\n\n\n  Task.prototype.perform = function (performArgs) {\n    var upTask = this._upstream;\n    var skip = performArgs && performArgs.skip; // TODO some refactor.\n    // Pull data. Must pull data each time, because context.data\n    // may be updated by Series.setData.\n\n    if (this._dirty && upTask) {\n      var context = this.context;\n      context.data = context.outputData = upTask.context.outputData;\n    }\n\n    if (this.__pipeline) {\n      this.__pipeline.currentTask = this;\n    }\n\n    var planResult;\n\n    if (this._plan && !skip) {\n      planResult = this._plan(this.context);\n    } // Support sharding by mod, which changes the render sequence and makes the rendered graphic\n    // elements uniformed distributed when progress, especially when moving or zooming.\n\n\n    var lastModBy = normalizeModBy(this._modBy);\n    var lastModDataCount = this._modDataCount || 0;\n    var modBy = normalizeModBy(performArgs && performArgs.modBy);\n    var modDataCount = performArgs && performArgs.modDataCount || 0;\n\n    if (lastModBy !== modBy || lastModDataCount !== modDataCount) {\n      planResult = 'reset';\n    }\n\n    function normalizeModBy(val) {\n      !(val >= 1) && (val = 1); // jshint ignore:line\n\n      return val;\n    }\n\n    var forceFirstProgress;\n\n    if (this._dirty || planResult === 'reset') {\n      this._dirty = false;\n      forceFirstProgress = this._doReset(skip);\n    }\n\n    this._modBy = modBy;\n    this._modDataCount = modDataCount;\n    var step = performArgs && performArgs.step;\n\n    if (upTask) {\n      if (process.env.NODE_ENV !== 'production') {\n        assert(upTask._outputDueEnd != null);\n      }\n\n      this._dueEnd = upTask._outputDueEnd;\n    } // DataTask or overallTask\n    else {\n        if (process.env.NODE_ENV !== 'production') {\n          assert(!this._progress || this._count);\n        }\n\n        this._dueEnd = this._count ? this._count(this.context) : Infinity;\n      } // Note: Stubs, that its host overall task let it has progress, has progress.\n    // If no progress, pass index from upstream to downstream each time plan called.\n\n\n    if (this._progress) {\n      var start = this._dueIndex;\n      var end = Math.min(step != null ? this._dueIndex + step : Infinity, this._dueEnd);\n\n      if (!skip && (forceFirstProgress || start < end)) {\n        var progress = this._progress;\n\n        if (isArray(progress)) {\n          for (var i = 0; i < progress.length; i++) {\n            this._doProgress(progress[i], start, end, modBy, modDataCount);\n          }\n        } else {\n          this._doProgress(progress, start, end, modBy, modDataCount);\n        }\n      }\n\n      this._dueIndex = end; // If no `outputDueEnd`, assume that output data and\n      // input data is the same, so use `dueIndex` as `outputDueEnd`.\n\n      var outputDueEnd = this._settedOutputEnd != null ? this._settedOutputEnd : end;\n\n      if (process.env.NODE_ENV !== 'production') {\n        // ??? Can not rollback.\n        assert(outputDueEnd >= this._outputDueEnd);\n      }\n\n      this._outputDueEnd = outputDueEnd;\n    } else {\n      // (1) Some overall task has no progress.\n      // (2) Stubs, that its host overall task do not let it has progress, has no progress.\n      // This should always be performed so it can be passed to downstream.\n      this._dueIndex = this._outputDueEnd = this._settedOutputEnd != null ? this._settedOutputEnd : this._dueEnd;\n    }\n\n    return this.unfinished();\n  };\n\n  Task.prototype.dirty = function () {\n    this._dirty = true;\n    this._onDirty && this._onDirty(this.context);\n  };\n\n  Task.prototype._doProgress = function (progress, start, end, modBy, modDataCount) {\n    iterator.reset(start, end, modBy, modDataCount);\n    this._callingProgress = progress;\n\n    this._callingProgress({\n      start: start,\n      end: end,\n      count: end - start,\n      next: iterator.next\n    }, this.context);\n  };\n\n  Task.prototype._doReset = function (skip) {\n    this._dueIndex = this._outputDueEnd = this._dueEnd = 0;\n    this._settedOutputEnd = null;\n    var progress;\n    var forceFirstProgress;\n\n    if (!skip && this._reset) {\n      progress = this._reset(this.context);\n\n      if (progress && progress.progress) {\n        forceFirstProgress = progress.forceFirstProgress;\n        progress = progress.progress;\n      } // To simplify no progress checking, array must has item.\n\n\n      if (isArray(progress) && !progress.length) {\n        progress = null;\n      }\n    }\n\n    this._progress = progress;\n    this._modBy = this._modDataCount = null;\n    var downstream = this._downstream;\n    downstream && downstream.dirty();\n    return forceFirstProgress;\n  };\n\n  Task.prototype.unfinished = function () {\n    return this._progress && this._dueIndex < this._dueEnd;\n  };\n  /**\n   * @param downTask The downstream task.\n   * @return The downstream task.\n   */\n\n\n  Task.prototype.pipe = function (downTask) {\n    if (process.env.NODE_ENV !== 'production') {\n      assert(downTask && !downTask._disposed && downTask !== this);\n    } // If already downstream, do not dirty downTask.\n\n\n    if (this._downstream !== downTask || this._dirty) {\n      this._downstream = downTask;\n      downTask._upstream = this;\n      downTask.dirty();\n    }\n  };\n\n  Task.prototype.dispose = function () {\n    if (this._disposed) {\n      return;\n    }\n\n    this._upstream && (this._upstream._downstream = null);\n    this._downstream && (this._downstream._upstream = null);\n    this._dirty = false;\n    this._disposed = true;\n  };\n\n  Task.prototype.getUpstream = function () {\n    return this._upstream;\n  };\n\n  Task.prototype.getDownstream = function () {\n    return this._downstream;\n  };\n\n  Task.prototype.setOutputEnd = function (end) {\n    // This only happens in dataTask, dataZoom, map, currently.\n    // where dataZoom do not set end each time, but only set\n    // when reset. So we should record the set end, in case\n    // that the stub of dataZoom perform again and earse the\n    // set end by upstream.\n    this._outputDueEnd = this._settedOutputEnd = end;\n  };\n\n  return Task;\n}();\n\nexport { Task };\n\nvar iterator = function () {\n  var end;\n  var current;\n  var modBy;\n  var modDataCount;\n  var winCount;\n  var it = {\n    reset: function (s, e, sStep, sCount) {\n      current = s;\n      end = e;\n      modBy = sStep;\n      modDataCount = sCount;\n      winCount = Math.ceil(modDataCount / modBy);\n      it.next = modBy > 1 && modDataCount > 0 ? modNext : sequentialNext;\n    }\n  };\n  return it;\n\n  function sequentialNext() {\n    return current < end ? current++ : null;\n  }\n\n  function modNext() {\n    var dataIndex = current % winCount * modBy + Math.ceil(current / winCount);\n    var result = current >= end ? null : dataIndex < modDataCount ? dataIndex // If modDataCount is smaller than data.count() (consider `appendData` case),\n    // Use normal linear rendering mode.\n    : current;\n    current++;\n    return result;\n  }\n}(); // -----------------------------------------------------------------------------\n// For stream debug (Should be commented out after used!)\n// @usage: printTask(this, 'begin');\n// @usage: printTask(this, null, {someExtraProp});\n// @usage: Use `__idxInPipeline` as conditional breakpiont.\n//\n// window.printTask = function (task: any, prefix: string, extra: { [key: string]: unknown }): void {\n//     window.ecTaskUID == null && (window.ecTaskUID = 0);\n//     task.uidDebug == null && (task.uidDebug = `task_${window.ecTaskUID++}`);\n//     task.agent && task.agent.uidDebug == null && (task.agent.uidDebug = `task_${window.ecTaskUID++}`);\n//     let props = [];\n//     if (task.__pipeline) {\n//         let val = `${task.__idxInPipeline}/${task.__pipeline.tail.__idxInPipeline} ${task.agent ? '(stub)' : ''}`;\n//         props.push({text: '__idxInPipeline/total', value: val});\n//     } else {\n//         let stubCount = 0;\n//         task.agentStubMap.each(() => stubCount++);\n//         props.push({text: 'idx', value: `overall (stubs: ${stubCount})`});\n//     }\n//     props.push({text: 'uid', value: task.uidDebug});\n//     if (task.__pipeline) {\n//         props.push({text: 'pipelineId', value: task.__pipeline.id});\n//         task.agent && props.push(\n//             {text: 'stubFor', value: task.agent.uidDebug}\n//         );\n//     }\n//     props.push(\n//         {text: 'dirty', value: task._dirty},\n//         {text: 'dueIndex', value: task._dueIndex},\n//         {text: 'dueEnd', value: task._dueEnd},\n//         {text: 'outputDueEnd', value: task._outputDueEnd}\n//     );\n//     if (extra) {\n//         Object.keys(extra).forEach(key => {\n//             props.push({text: key, value: extra[key]});\n//         });\n//     }\n//     let args = ['color: blue'];\n//     let msg = `%c[${prefix || 'T'}] %c` + props.map(item => (\n//         args.push('color: green', 'color: red'),\n//         `${item.text}: %c${item.value}`\n//     )).join('%c, ');\n//     console.log.apply(console, [msg].concat(args));\n//     // console.log(this);\n// };\n// window.printPipeline = function (task: any, prefix: string) {\n//     const pipeline = task.__pipeline;\n//     let currTask = pipeline.head;\n//     while (currTask) {\n//         window.printTask(currTask, prefix);\n//         currTask = currTask._downstream;\n//     }\n// };\n// window.showChain = function (chainHeadTask) {\n//     var chain = [];\n//     var task = chainHeadTask;\n//     while (task) {\n//         chain.push({\n//             task: task,\n//             up: task._upstream,\n//             down: task._downstream,\n//             idxInPipeline: task.__idxInPipeline\n//         });\n//         task = task._downstream;\n//     }\n//     return chain;\n// };\n// window.findTaskInChain = function (task, chainHeadTask) {\n//     let chain = window.showChain(chainHeadTask);\n//     let result = [];\n//     for (let i = 0; i < chain.length; i++) {\n//         let chainItem = chain[i];\n//         if (chainItem.task === task) {\n//             result.push(i);\n//         }\n//     }\n//     return result;\n// };\n// window.printChainAEachInChainB = function (chainHeadTaskA, chainHeadTaskB) {\n//     let chainA = window.showChain(chainHeadTaskA);\n//     for (let i = 0; i < chainA.length; i++) {\n//         console.log('chainAIdx:', i, 'inChainB:', window.findTaskInChain(chainA[i].task, chainHeadTaskB));\n//     }\n// };"],"names":["availableMethods","ExtensionAPI","ecInstance","zrUtil","methodName","this","Scheduler","api","dataProcessorHandlers","visualHandlers","_stageTaskMap","createHashMap","_dataProcessorHandlers","slice","_visualHandlers","_allHandlers","concat","prototype","restoreData","ecModel","payload","each","taskRecord","overallTask","dirty","getPerformArgs","task","isBlock","__pipeline","pipeline","_pipelineMap","get","id","pCtx","context","incremental","progressiveEnabled","progressiveRender","__idxInPipeline","blockIndex","step","modDataCount","modBy","Math","ceil","getPipeline","pipelineId","updateStreamModes","seriesModel","view","uid","data","getData","dataLen","count","incrementalPrepareRender","threshold","large","pipelineContext","restorePipelines","scheduler","pipelineMap","eachSeries","progressive","getProgressive","set","head","tail","getProgressiveThreshold","preventIncremental","round","_pipe","dataTask","prepareStageTasks","stageTaskMap","getModel","handler","record","errMsg","assert","reset","overallReset","_createSeriesStageTask","_createOverallStageTask","prepareView","model","renderTask","__block","performDataProcessorTasks","_performStageTasks","block","performVisualTasks","opt","stageHandlers","unfinished","needSetDirty","setDirty","dirtyMap","stageHandler","idx","visualType","stageHandlerRecord","seriesTaskMap","overallNeedDirty_1","agentStubMap","stub","updatePayload","performArgs_1","perform","performArgs","skip","performRawSeries","isSeriesFiltered","performSeriesTasks","plan","getUpstream","oldSeriesTaskMap","newSeriesTaskMap","seriesType","getTargetSeries","create","createTask","seriesTaskPlan","seriesTaskReset","seriesTaskCount","useClearVisual","isVisual","isLayout","createOnAllSeries","eachRawSeries","eachRawSeriesByType","overallTaskReset","oldAgentStubMap","newAgentStubMap","overallProgress","shouldOverallTaskDirty","createStub","stubReset","onDirty","stubOnDirty","agent","getSeries","pipe","wrapStageHandler","isFunction","detectSeriseType","getUID","stubProgress","getDownstream","clearAllVisual","resetDefines","normalizeToArray","length","map","v","makeSeriesTaskProgress","singleSeriesTaskProgress","resetDefineIdx","params","resetDefine","dataEach","i","start","end","progress","legacyFunc","ecModelMock","apiMock","e","mockMethods","target","Clz","name_1","noop","GlobalModel","eachSeriesByType","type","eachComponent","cond","mainType","subType","lifecycle","Eventful","version","dependencies","zrender","TEST_FRAME_REMAIN_TIME","PRIORITY_PROCESSOR_SERIES_FILTER","PRIORITY_PROCESSOR_DATASTACK","PRIORITY_PROCESSOR_FILTER","PRIORITY_PROCESSOR_DEFAULT","PRIORITY_PROCESSOR_STATISTIC","PRIORITY_VISUAL_LAYOUT","PRIORITY_VISUAL_PROGRESSIVE_LAYOUT","PRIORITY_VISUAL_GLOBAL","PRIORITY_VISUAL_CHART","PRIORITY_VISUAL_COMPONENT","PRIORITY_VISUAL_CHART_DATA_CUSTOM","PRIORITY_VISUAL_POST_CHART_LAYOUT","PRIORITY_VISUAL_BRUSH","PRIORITY_VISUAL_ARIA","PRIORITY_VISUAL_DECAL","PRIORITY","PROCESSOR","FILTER","SERIES_FILTER","STATISTIC","VISUAL","LAYOUT","PROGRESSIVE_LAYOUT","GLOBAL","CHART","POST_CHART_LAYOUT","COMPONENT","BRUSH","CHART_ITEM","ARIA","DECAL","IN_MAIN_PROCESS_KEY","PENDING_UPDATE","STATUS_NEEDS_UPDATE_KEY","ACTION_REG","CONNECT_STATUS_KEY","CONNECT_STATUS_PENDING","CONNECT_STATUS_UPDATING","CONNECT_STATUS_UPDATED","createRegisterEventWithLowercaseECharts","method","args","_i","arguments","isDisposed","toLowercaseNameAndCallEventful","disposedWarning","createRegisterEventWithLowercaseMessageCenter","host","toLowerCase","apply","prepare","updateDirectly","updateMethods","doConvertPixel","doDispatchAction","flushPendingActions","triggerUpdatedEvent","bindRenderedEvent","bindMouseEvent","render","renderComponents","renderSeries","createExtensionAPI","enableConnect","markStatusToUpdate","applyChangedStates","MessageCenter","_super","__extends","messageCenterProto","on","off","ECharts","dom","theme","opts","_this","call","ECEventProcessor","_chartsViews","_chartsMap","_componentsViews","_componentsMap","_pendingActions","isString","themeStorage","_dom","defaultRenderer","defaultCoarsePointer","defaultUseDirtyRect","zr","_zr","init","renderer","devicePixelRatio","width","height","ssr","useDirtyRect","retrieve2","useCoarsePointer","pointerSize","_ssr","_throttledZrFlush","throttle","bind","flush","clone","backwardCompat","_theme","_locale","createLocaleObject","locale","SYSTEM_LANG","_coordSysMgr","CoordinateSystemManager","_api","prioritySortFunc","a","b","__prio","timsort","visualFuncs","dataProcessorFuncs","_scheduler","_messageCenter","_initEvents","resize","animation","_onframe","setAsPrimitive","_disposed","silent","update","updateParams","remainTime","_model","startTime","Date","getDom","getId","getZr","isSSR","setOption","option","notMerge","lazyUpdate","replaceMerge","transitionOpt","isObject","transition","optionManager","OptionManager","optionPreprocessorFuncs","seriesTransition","optionChanged","wakeUp","setTheme","deprecateLog","getOption","getWidth","getHeight","getDevicePixelRatio","painter","dpr","env","window","getRenderedCanvas","renderToCanvas","backgroundColor","pixelRatio","renderToSVGString","renderToString","useViewBox","getSvgDataURL","list","storage","getDisplayList","el","stopAnimation","toDataURL","getDataURL","excludeComponents","excludesComponentViews","self","componentType","component","__viewId","group","ignore","push","url","getType","getConnectedDataURL","isSvg","groupId","mathMin","min","mathMax","max","MAX_NUMBER","Infinity","connectedGroups","left_1","top_1","right_1","bottom_1","canvasList_1","dpr_1","instances","chart","canvas","getSvgDom","innerHTML","boundingRect","getBoundingClientRect","left","top","right","bottom","targetCanvas","platformApi","zr_1","content_1","item","x","y","getSvgRoot","connectedBackgroundColor","setBackgroundColor","refreshImmediately","add","graphic","shape","style","fill","img","image","convertToPixel","finder","value","convertFromPixel","containPixel","result","findResult","modelUtil","models","key","indexOf","coordSys","coordinateSystem","containPoint","process","getVisual","parsedFinder","defaultMainType","dataIndexInside","hasOwnProperty","indexOfRawIndex","dataIndex","getItemVisualFromData","getVisualFromData","getViewOfComponentModel","componentModel","getViewOfSeriesModel","MOUSE_EVENT_NAMES","eveName","isGlobalOut","findEventDispatcher","parent","ecData","getECData","dataModel","getSeriesByIndex","seriesIndex","getDataParams","dataType","eventData","extend","componentIndex","getComponent","event","_$eventProcessor","eventInfo","targetEl","packedEvent","trigger","zrEventfulCallAtLast","eventActionMap","actionType","eventType","handleLegacySelectEvents","clear","series","dispose","DOM_ATTRIBUTE_KEY","_loadingFX","needPrepare","resetOption","duration","showLoading","name","cfg","hideLoading","loadingEffects","remove","makeActionFromEvent","eventObj","dispatchAction","actions","updateLabelLayout","updatedSeries","appendData","internalField","clearColorPalette","allocateZlevels","componentZLevels","seriesZLevels","hasSeperateZLevel","zlevel","z","zlevelKey","getZLevelKey","lastSeriesZLevel_1","lastSeriesKey_1","zLevels","setZLevel","applyElementStates","newStates","oldStates","currentStates","stateName","selected","states","select","hoverState","HOVER_STATE_EMPHASIS","emphasis","HOVER_STATE_BLUR","blur","useStates","updateHoverLayerStatus","ecIns","elCount","traverse","isGroup","preventUsingHoverLayer","chartView","__alive","eachRendered","hoverLayer","updateBlend","blendMode","blend","updateZ","preventAutoZ","doUpdateZ","maxZ2","label","getTextContent","labelLine","getTextGuideLine","children","childrenRef","z2","isFinite","textGuideLineConfig","showAbove","clearStates","textContent","textGuide","stateTransition","hasState","prevStates","updateStates","stateAnimationModel","enableAnimation","isAnimationEnabled","delay","easing","savePathStates","__dirty","isComponent","viewList","viewMap","doPrepare","requireNewView","__requireNewView","viewId","classType","parseClassType","Clazz","ComponentView","main","sub","ChartView","__id","__model","__ecComponentInfo","index","splice","setUpdatePayload","query","condition","excludeSeriesIdMap","excludeSeriesId","modelId","isExcluded","isHighDownPayload","SeriesModel","HIGHLIGHT_ACTION_TYPE","notBlur","blurSeriesFromHighlightPayload","_a","findComponentHighDownDispatchers","focusSelf","dispatchers","blurComponent","dispatcher","enterEmphasis","leaveEmphasis","isSelectChangePayload","toggleSelectionFromPayload","updateSeriesElementSelection","callView","prepareAndUpdate","newOption","coordSysMgr","darkMode","setDarkMode","updateTransform","componentDirtyList","componentView","seriesDirtyMap","updateView","updateVisual","updateLayout","coordSysList","getCoordinateSystems","chartsMap","payloadType","escapeConnect","actionWrap","actionInfo","cptTypeTmp","split","updateMethod","pop","cptType","payloads","batched","batch","defaults","eventObjBatch","isSelectChange","isHighDown","allLeaveBlur","batchItem","action","queryOptionMap","mainTypeSpecified","componentMainType","keys","messageCenter","newObj","getAllSelectedIndices","isFromClick","fromAction","fromActionPayload","pendingActions","shift","isFinished","isHighDownDispatcher","handleGlobalMouseOverForHighDown","handleGlobalMouseOutForHighDown","dirtyList","class_1","getComponentByElement","modelInfo","highlightDigit","enterBlur","leaveBlur","enterSelect","leaveSelect","updateConnectedChartsStatus","charts","status","otherChart","action_1","otherCharts_1","echartsProto","one","eventName","cb","ctx","wrapped","args2","idBase","groupIdBase","isClient","existInstance","getInstanceByDom","connect","isArray","disConnect","disconnect","getInstanceById","registerTheme","registerPreprocessor","preprocessorFunc","registerProcessor","priority","processor","normalizeRegister","registerPostInit","postInitFunc","registerUpdateLifecycle","registerPostUpdate","postUpdateFunc","registerAction","test","registerCoordinateSystem","coordSysCreator","getCoordinateSystemDimensions","getDimensionsInfo","dimensions","registerLayout","layoutTask","registerVisual","visualTask","registeredTasks","targetList","fn","defaultPriority","__raw","registerLoading","loadingFx","setCanvasCreator","creator","setPlatformAPI","createCanvas","registerMap","mapName","geoJson","specialAreas","getImpl","getMap","registerTransform","registerExternalTransform","seriesStyleTask","dataStyleTask","dataColorPaletteTask","seriesSymbolTask","dataSymbolTask","decal","dataStack","loadingDefault","DOWNPLAY_ACTION_TYPE","SELECT_ACTION_TYPE","UNSELECT_ACTION_TYPE","TOGGLE_SELECT_ACTION_TYPE","lightTheme","darkTheme","dataTool","implsStore","registerImpl","impl","LOCALE_ZH","LOCALE_EN","DEFAULT_LOCALE","localeStorage","localeModels","langStr","document","documentElement","lang","navigator","language","browserLanguage","toUpperCase","registerLocale","localeObj","Model","merge","getLocaleModel","getDefaultLocaleModel","langEN","langZH","define","Task","_reset","_plan","_count","_onDirty","_dirty","planResult","upTask","_upstream","outputData","currentTask","forceFirstProgress","lastModBy","normalizeModBy","_modBy","lastModDataCount","_modDataCount","val","_doReset","_dueEnd","_outputDueEnd","_progress","_dueIndex","_doProgress","outputDueEnd","_settedOutputEnd","iterator","_callingProgress","next","downstream","_downstream","downTask","setOutputEnd","current","winCount","it","s","sStep","sCount","modNext","sequentialNext"],"sourceRoot":""}