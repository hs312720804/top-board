{"version":3,"file":"js/chunk-vendors-4e2fb6b0-legacy.a04c547a.js","mappings":"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","sources":["webpack://databoard/./node_modules/echarts/lib/data/helper/SeriesDataSchema.js","webpack://databoard/./node_modules/echarts/lib/data/helper/createDimensions.js","webpack://databoard/./node_modules/echarts/lib/data/helper/dataProvider.js","webpack://databoard/./node_modules/echarts/lib/data/helper/dataStackHelper.js","webpack://databoard/./node_modules/echarts/lib/data/helper/dataValueHelper.js","webpack://databoard/./node_modules/echarts/lib/data/helper/dimensionHelper.js","webpack://databoard/./node_modules/echarts/lib/data/helper/linkSeriesData.js","webpack://databoard/./node_modules/echarts/lib/data/helper/sourceHelper.js","webpack://databoard/./node_modules/echarts/lib/data/helper/sourceManager.js","webpack://databoard/./node_modules/echarts/lib/data/helper/transform.js","webpack://databoard/./node_modules/echarts/lib/export/api/helper.js","webpack://databoard/./node_modules/echarts/lib/export/api.js","webpack://databoard/./node_modules/echarts/lib/export/core.js","webpack://databoard/./node_modules/echarts/lib/extension.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { createHashMap, isObject, retrieve2 } from 'zrender/lib/core/util.js';\nimport { makeInner } from '../../util/model.js';\nimport { shouldRetrieveDataByName } from '../Source.js';\nvar inner = makeInner();\nvar dimTypeShort = {\n  float: 'f',\n  int: 'i',\n  ordinal: 'o',\n  number: 'n',\n  time: 't'\n};\n/**\n * Represents the dimension requirement of a series.\n *\n * NOTICE:\n * When there are too many dimensions in dataset and many series, only the used dimensions\n * (i.e., used by coord sys and declared in `series.encode`) are add to `dimensionDefineList`.\n * But users may query data by other unused dimension names.\n * In this case, users can only query data if and only if they have defined dimension names\n * via ec option, so we provide `getDimensionIndexFromSource`, which only query them from\n * `source` dimensions.\n */\n\nvar SeriesDataSchema =\n/** @class */\nfunction () {\n  function SeriesDataSchema(opt) {\n    this.dimensions = opt.dimensions;\n    this._dimOmitted = opt.dimensionOmitted;\n    this.source = opt.source;\n    this._fullDimCount = opt.fullDimensionCount;\n\n    this._updateDimOmitted(opt.dimensionOmitted);\n  }\n\n  SeriesDataSchema.prototype.isDimensionOmitted = function () {\n    return this._dimOmitted;\n  };\n\n  SeriesDataSchema.prototype._updateDimOmitted = function (dimensionOmitted) {\n    this._dimOmitted = dimensionOmitted;\n\n    if (!dimensionOmitted) {\n      return;\n    }\n\n    if (!this._dimNameMap) {\n      this._dimNameMap = ensureSourceDimNameMap(this.source);\n    }\n  };\n  /**\n   * @caution Can only be used when `dimensionOmitted: true`.\n   *\n   * Get index by user defined dimension name (i.e., not internal generate name).\n   * That is, get index from `dimensionsDefine`.\n   * If no `dimensionsDefine`, or no name get, return -1.\n   */\n\n\n  SeriesDataSchema.prototype.getSourceDimensionIndex = function (dimName) {\n    return retrieve2(this._dimNameMap.get(dimName), -1);\n  };\n  /**\n   * @caution Can only be used when `dimensionOmitted: true`.\n   *\n   * Notice: may return `null`/`undefined` if user not specify dimension names.\n   */\n\n\n  SeriesDataSchema.prototype.getSourceDimension = function (dimIndex) {\n    var dimensionsDefine = this.source.dimensionsDefine;\n\n    if (dimensionsDefine) {\n      return dimensionsDefine[dimIndex];\n    }\n  };\n\n  SeriesDataSchema.prototype.makeStoreSchema = function () {\n    var dimCount = this._fullDimCount;\n    var willRetrieveDataByName = shouldRetrieveDataByName(this.source);\n    var makeHashStrict = !shouldOmitUnusedDimensions(dimCount); // If source don't have dimensions or series don't omit unsed dimensions.\n    // Generate from seriesDimList directly\n\n    var dimHash = '';\n    var dims = [];\n\n    for (var fullDimIdx = 0, seriesDimIdx = 0; fullDimIdx < dimCount; fullDimIdx++) {\n      var property = void 0;\n      var type = void 0;\n      var ordinalMeta = void 0;\n      var seriesDimDef = this.dimensions[seriesDimIdx]; // The list has been sorted by `storeDimIndex` asc.\n\n      if (seriesDimDef && seriesDimDef.storeDimIndex === fullDimIdx) {\n        property = willRetrieveDataByName ? seriesDimDef.name : null;\n        type = seriesDimDef.type;\n        ordinalMeta = seriesDimDef.ordinalMeta;\n        seriesDimIdx++;\n      } else {\n        var sourceDimDef = this.getSourceDimension(fullDimIdx);\n\n        if (sourceDimDef) {\n          property = willRetrieveDataByName ? sourceDimDef.name : null;\n          type = sourceDimDef.type;\n        }\n      }\n\n      dims.push({\n        property: property,\n        type: type,\n        ordinalMeta: ordinalMeta\n      }); // If retrieving data by index,\n      //   use <index, type, ordinalMeta> to determine whether data can be shared.\n      //   (Because in this case there might be no dimension name defined in dataset, but indices always exists).\n      //   (Indices are always 0, 1, 2, ..., so we can ignore them to shorten the hash).\n      // Otherwise if retrieving data by property name (like `data: [{aa: 123, bb: 765}, ...]`),\n      //   use <property, type, ordinalMeta> in hash.\n\n      if (willRetrieveDataByName && property != null // For data stack, we have make sure each series has its own dim on this store.\n      // So we do not add property to hash to make sure they can share this store.\n      && (!seriesDimDef || !seriesDimDef.isCalculationCoord)) {\n        dimHash += makeHashStrict // Use escape character '`' in case that property name contains '$'.\n        ? property.replace(/\\`/g, '`1').replace(/\\$/g, '`2') // For better performance, when there are large dimensions, tolerant this defects that hardly meet.\n        : property;\n      }\n\n      dimHash += '$';\n      dimHash += dimTypeShort[type] || 'f';\n\n      if (ordinalMeta) {\n        dimHash += ordinalMeta.uid;\n      }\n\n      dimHash += '$';\n    } // Source from endpoint(usually series) will be read differently\n    // when seriesLayoutBy or startIndex(which is affected by sourceHeader) are different.\n    // So we use this three props as key.\n\n\n    var source = this.source;\n    var hash = [source.seriesLayoutBy, source.startIndex, dimHash].join('$$');\n    return {\n      dimensions: dims,\n      hash: hash\n    };\n  };\n\n  SeriesDataSchema.prototype.makeOutputDimensionNames = function () {\n    var result = [];\n\n    for (var fullDimIdx = 0, seriesDimIdx = 0; fullDimIdx < this._fullDimCount; fullDimIdx++) {\n      var name_1 = void 0;\n      var seriesDimDef = this.dimensions[seriesDimIdx]; // The list has been sorted by `storeDimIndex` asc.\n\n      if (seriesDimDef && seriesDimDef.storeDimIndex === fullDimIdx) {\n        if (!seriesDimDef.isCalculationCoord) {\n          name_1 = seriesDimDef.name;\n        }\n\n        seriesDimIdx++;\n      } else {\n        var sourceDimDef = this.getSourceDimension(fullDimIdx);\n\n        if (sourceDimDef) {\n          name_1 = sourceDimDef.name;\n        }\n      }\n\n      result.push(name_1);\n    }\n\n    return result;\n  };\n\n  SeriesDataSchema.prototype.appendCalculationDimension = function (dimDef) {\n    this.dimensions.push(dimDef);\n    dimDef.isCalculationCoord = true;\n    this._fullDimCount++; // If append dimension on a data store, consider the store\n    // might be shared by different series, series dimensions not\n    // really map to store dimensions.\n\n    this._updateDimOmitted(true);\n  };\n\n  return SeriesDataSchema;\n}();\n\nexport { SeriesDataSchema };\nexport function isSeriesDataSchema(schema) {\n  return schema instanceof SeriesDataSchema;\n}\nexport function createDimNameMap(dimsDef) {\n  var dataDimNameMap = createHashMap();\n\n  for (var i = 0; i < (dimsDef || []).length; i++) {\n    var dimDefItemRaw = dimsDef[i];\n    var userDimName = isObject(dimDefItemRaw) ? dimDefItemRaw.name : dimDefItemRaw;\n\n    if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n      dataDimNameMap.set(userDimName, i);\n    }\n  }\n\n  return dataDimNameMap;\n}\nexport function ensureSourceDimNameMap(source) {\n  var innerSource = inner(source);\n  return innerSource.dimNameMap || (innerSource.dimNameMap = createDimNameMap(source.dimensionsDefine));\n}\nexport function shouldOmitUnusedDimensions(dimCount) {\n  return dimCount > 30;\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { VISUAL_DIMENSIONS } from '../../util/types.js';\nimport SeriesDimensionDefine from '../SeriesDimensionDefine.js';\nimport { createHashMap, defaults, each, extend, isObject, isString } from 'zrender/lib/core/util.js';\nimport { createSourceFromSeriesDataOption, isSourceInstance } from '../Source.js';\nimport { CtorInt32Array } from '../DataStore.js';\nimport { normalizeToArray } from '../../util/model.js';\nimport { BE_ORDINAL, guessOrdinal } from './sourceHelper.js';\nimport { createDimNameMap, ensureSourceDimNameMap, SeriesDataSchema, shouldOmitUnusedDimensions } from './SeriesDataSchema.js';\n/**\n * For outside usage compat (like echarts-gl are using it).\n */\n\nexport function createDimensions(source, opt) {\n  return prepareSeriesDataSchema(source, opt).dimensions;\n}\n/**\n * This method builds the relationship between:\n * + \"what the coord sys or series requires (see `coordDimensions`)\",\n * + \"what the user defines (in `encode` and `dimensions`, see `opt.dimensionsDefine` and `opt.encodeDefine`)\"\n * + \"what the data source provids (see `source`)\".\n *\n * Some guess strategy will be adapted if user does not define something.\n * If no 'value' dimension specified, the first no-named dimension will be\n * named as 'value'.\n *\n * @return The results are always sorted by `storeDimIndex` asc.\n */\n\nexport default function prepareSeriesDataSchema( // TODO: TYPE completeDimensions type\nsource, opt) {\n  if (!isSourceInstance(source)) {\n    source = createSourceFromSeriesDataOption(source);\n  }\n\n  opt = opt || {};\n  var sysDims = opt.coordDimensions || [];\n  var dimsDef = opt.dimensionsDefine || source.dimensionsDefine || [];\n  var coordDimNameMap = createHashMap();\n  var resultList = [];\n  var dimCount = getDimCount(source, sysDims, dimsDef, opt.dimensionsCount); // Try to ignore unused dimensions if sharing a high dimension datastore\n  // 30 is an experience value.\n\n  var omitUnusedDimensions = opt.canOmitUnusedDimensions && shouldOmitUnusedDimensions(dimCount);\n  var isUsingSourceDimensionsDef = dimsDef === source.dimensionsDefine;\n  var dataDimNameMap = isUsingSourceDimensionsDef ? ensureSourceDimNameMap(source) : createDimNameMap(dimsDef);\n  var encodeDef = opt.encodeDefine;\n\n  if (!encodeDef && opt.encodeDefaulter) {\n    encodeDef = opt.encodeDefaulter(source, dimCount);\n  }\n\n  var encodeDefMap = createHashMap(encodeDef);\n  var indicesMap = new CtorInt32Array(dimCount);\n\n  for (var i = 0; i < indicesMap.length; i++) {\n    indicesMap[i] = -1;\n  }\n\n  function getResultItem(dimIdx) {\n    var idx = indicesMap[dimIdx];\n\n    if (idx < 0) {\n      var dimDefItemRaw = dimsDef[dimIdx];\n      var dimDefItem = isObject(dimDefItemRaw) ? dimDefItemRaw : {\n        name: dimDefItemRaw\n      };\n      var resultItem = new SeriesDimensionDefine();\n      var userDimName = dimDefItem.name;\n\n      if (userDimName != null && dataDimNameMap.get(userDimName) != null) {\n        // Only if `series.dimensions` is defined in option\n        // displayName, will be set, and dimension will be displayed vertically in\n        // tooltip by default.\n        resultItem.name = resultItem.displayName = userDimName;\n      }\n\n      dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n      dimDefItem.displayName != null && (resultItem.displayName = dimDefItem.displayName);\n      var newIdx = resultList.length;\n      indicesMap[dimIdx] = newIdx;\n      resultItem.storeDimIndex = dimIdx;\n      resultList.push(resultItem);\n      return resultItem;\n    }\n\n    return resultList[idx];\n  }\n\n  if (!omitUnusedDimensions) {\n    for (var i = 0; i < dimCount; i++) {\n      getResultItem(i);\n    }\n  } // Set `coordDim` and `coordDimIndex` by `encodeDefMap` and normalize `encodeDefMap`.\n\n\n  encodeDefMap.each(function (dataDimsRaw, coordDim) {\n    var dataDims = normalizeToArray(dataDimsRaw).slice(); // Note: It is allowed that `dataDims.length` is `0`, e.g., options is\n    // `{encode: {x: -1, y: 1}}`. Should not filter anything in\n    // this case.\n\n    if (dataDims.length === 1 && !isString(dataDims[0]) && dataDims[0] < 0) {\n      encodeDefMap.set(coordDim, false);\n      return;\n    }\n\n    var validDataDims = encodeDefMap.set(coordDim, []);\n    each(dataDims, function (resultDimIdxOrName, idx) {\n      // The input resultDimIdx can be dim name or index.\n      var resultDimIdx = isString(resultDimIdxOrName) ? dataDimNameMap.get(resultDimIdxOrName) : resultDimIdxOrName;\n\n      if (resultDimIdx != null && resultDimIdx < dimCount) {\n        validDataDims[idx] = resultDimIdx;\n        applyDim(getResultItem(resultDimIdx), coordDim, idx);\n      }\n    });\n  }); // Apply templates and default order from `sysDims`.\n\n  var availDimIdx = 0;\n  each(sysDims, function (sysDimItemRaw) {\n    var coordDim;\n    var sysDimItemDimsDef;\n    var sysDimItemOtherDims;\n    var sysDimItem;\n\n    if (isString(sysDimItemRaw)) {\n      coordDim = sysDimItemRaw;\n      sysDimItem = {};\n    } else {\n      sysDimItem = sysDimItemRaw;\n      coordDim = sysDimItem.name;\n      var ordinalMeta = sysDimItem.ordinalMeta;\n      sysDimItem.ordinalMeta = null;\n      sysDimItem = extend({}, sysDimItem);\n      sysDimItem.ordinalMeta = ordinalMeta; // `coordDimIndex` should not be set directly.\n\n      sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemOtherDims = sysDimItem.otherDims;\n      sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n    }\n\n    var dataDims = encodeDefMap.get(coordDim); // negative resultDimIdx means no need to mapping.\n\n    if (dataDims === false) {\n      return;\n    }\n\n    dataDims = normalizeToArray(dataDims); // dimensions provides default dim sequences.\n\n    if (!dataDims.length) {\n      for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n        while (availDimIdx < dimCount && getResultItem(availDimIdx).coordDim != null) {\n          availDimIdx++;\n        }\n\n        availDimIdx < dimCount && dataDims.push(availDimIdx++);\n      }\n    } // Apply templates.\n\n\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\n      var resultItem = getResultItem(resultDimIdx); // Coordinate system has a higher priority on dim type than source.\n\n      if (isUsingSourceDimensionsDef && sysDimItem.type != null) {\n        resultItem.type = sysDimItem.type;\n      }\n\n      applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n\n      if (resultItem.name == null && sysDimItemDimsDef) {\n        var sysDimItemDimsDefItem = sysDimItemDimsDef[coordDimIndex];\n        !isObject(sysDimItemDimsDefItem) && (sysDimItemDimsDefItem = {\n          name: sysDimItemDimsDefItem\n        });\n        resultItem.name = resultItem.displayName = sysDimItemDimsDefItem.name;\n        resultItem.defaultTooltip = sysDimItemDimsDefItem.defaultTooltip;\n      } // FIXME refactor, currently only used in case: {otherDims: {tooltip: false}}\n\n\n      sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n    });\n  });\n\n  function applyDim(resultItem, coordDim, coordDimIndex) {\n    if (VISUAL_DIMENSIONS.get(coordDim) != null) {\n      resultItem.otherDims[coordDim] = coordDimIndex;\n    } else {\n      resultItem.coordDim = coordDim;\n      resultItem.coordDimIndex = coordDimIndex;\n      coordDimNameMap.set(coordDim, true);\n    }\n  } // Make sure the first extra dim is 'value'.\n\n\n  var generateCoord = opt.generateCoord;\n  var generateCoordCount = opt.generateCoordCount;\n  var fromZero = generateCoordCount != null;\n  generateCoordCount = generateCoord ? generateCoordCount || 1 : 0;\n  var extra = generateCoord || 'value';\n\n  function ifNoNameFillWithCoordName(resultItem) {\n    if (resultItem.name == null) {\n      // Duplication will be removed in the next step.\n      resultItem.name = resultItem.coordDim;\n    }\n  } // Set dim `name` and other `coordDim` and other props.\n\n\n  if (!omitUnusedDimensions) {\n    for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n      var resultItem = getResultItem(resultDimIdx);\n      var coordDim = resultItem.coordDim;\n\n      if (coordDim == null) {\n        // TODO no need to generate coordDim for isExtraCoord?\n        resultItem.coordDim = genCoordDimName(extra, coordDimNameMap, fromZero);\n        resultItem.coordDimIndex = 0; // Series specified generateCoord is using out.\n\n        if (!generateCoord || generateCoordCount <= 0) {\n          resultItem.isExtraCoord = true;\n        }\n\n        generateCoordCount--;\n      }\n\n      ifNoNameFillWithCoordName(resultItem);\n\n      if (resultItem.type == null && (guessOrdinal(source, resultDimIdx) === BE_ORDINAL.Must // Consider the case:\n      // {\n      //    dataset: {source: [\n      //        ['2001', 123],\n      //        ['2002', 456],\n      //        ...\n      //        ['The others', 987],\n      //    ]},\n      //    series: {type: 'pie'}\n      // }\n      // The first column should better be treated as a \"ordinal\" although it\n      // might not be detected as an \"ordinal\" by `guessOrdinal`.\n      || resultItem.isExtraCoord && (resultItem.otherDims.itemName != null || resultItem.otherDims.seriesName != null))) {\n        resultItem.type = 'ordinal';\n      }\n    }\n  } else {\n    each(resultList, function (resultItem) {\n      // PENDING: guessOrdinal or let user specify type: 'ordinal' manually?\n      ifNoNameFillWithCoordName(resultItem);\n    }); // Sort dimensions: there are some rule that use the last dim as label,\n    // and for some latter travel process easier.\n\n    resultList.sort(function (item0, item1) {\n      return item0.storeDimIndex - item1.storeDimIndex;\n    });\n  }\n\n  removeDuplication(resultList);\n  return new SeriesDataSchema({\n    source: source,\n    dimensions: resultList,\n    fullDimensionCount: dimCount,\n    dimensionOmitted: omitUnusedDimensions\n  });\n}\n\nfunction removeDuplication(result) {\n  var duplicationMap = createHashMap();\n\n  for (var i = 0; i < result.length; i++) {\n    var dim = result[i];\n    var dimOriginalName = dim.name;\n    var count = duplicationMap.get(dimOriginalName) || 0;\n\n    if (count > 0) {\n      // Starts from 0.\n      dim.name = dimOriginalName + (count - 1);\n    }\n\n    count++;\n    duplicationMap.set(dimOriginalName, count);\n  }\n} // ??? TODO\n// Originally detect dimCount by data[0]. Should we\n// optimize it to only by sysDims and dimensions and encode.\n// So only necessary dims will be initialized.\n// But\n// (1) custom series should be considered. where other dims\n// may be visited.\n// (2) sometimes user need to calculate bubble size or use visualMap\n// on other dimensions besides coordSys needed.\n// So, dims that is not used by system, should be shared in data store?\n\n\nfunction getDimCount(source, sysDims, dimsDef, optDimCount) {\n  // Note that the result dimCount should not small than columns count\n  // of data, otherwise `dataDimNameMap` checking will be incorrect.\n  var dimCount = Math.max(source.dimensionsDetectedCount || 1, sysDims.length, dimsDef.length, optDimCount || 0);\n  each(sysDims, function (sysDimItem) {\n    var sysDimItemDimsDef;\n\n    if (isObject(sysDimItem) && (sysDimItemDimsDef = sysDimItem.dimsDef)) {\n      dimCount = Math.max(dimCount, sysDimItemDimsDef.length);\n    }\n  });\n  return dimCount;\n}\n\nfunction genCoordDimName(name, map, fromZero) {\n  if (fromZero || map.hasKey(name)) {\n    var i = 0;\n\n    while (map.hasKey(name + i)) {\n      i++;\n    }\n\n    name += i;\n  }\n\n  map.set(name, true);\n  return name;\n}","import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.function.name.js\";\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _a, _b, _c; // TODO\n// ??? refactor? check the outer usage of data provider.\n// merge with defaultDimValueGetter?\n\nimport { isTypedArray, extend, assert, each, isObject, bind } from 'zrender/lib/core/util.js';\nimport { getDataItemValue } from '../../util/model.js';\nimport { createSourceFromSeriesDataOption, isSourceInstance } from '../Source.js';\nimport { SOURCE_FORMAT_ORIGINAL, SOURCE_FORMAT_OBJECT_ROWS, SOURCE_FORMAT_KEYED_COLUMNS, SOURCE_FORMAT_TYPED_ARRAY, SOURCE_FORMAT_ARRAY_ROWS, SERIES_LAYOUT_BY_COLUMN, SERIES_LAYOUT_BY_ROW } from '../../util/types.js';\nvar providerMethods;\nvar mountMethods;\n/**\n * If normal array used, mutable chunk size is supported.\n * If typed array used, chunk size must be fixed.\n */\n\nvar DefaultDataProvider = /** @class */\nfunction () {\n  function DefaultDataProvider(sourceParam, dimSize) {\n    // let source: Source;\n    var source = !isSourceInstance(sourceParam) ? createSourceFromSeriesDataOption(sourceParam) : sourceParam; // declare source is Source;\n\n    this._source = source;\n    var data = this._data = source.data; // Typed array. TODO IE10+?\n\n    if (source.sourceFormat === SOURCE_FORMAT_TYPED_ARRAY) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (dimSize == null) {\n          throw new Error('Typed array data must specify dimension size');\n        }\n      }\n      this._offset = 0;\n      this._dimSize = dimSize;\n      this._data = data;\n    }\n    mountMethods(this, data, source);\n  }\n  DefaultDataProvider.prototype.getSource = function () {\n    return this._source;\n  };\n  DefaultDataProvider.prototype.count = function () {\n    return 0;\n  };\n  DefaultDataProvider.prototype.getItem = function (idx, out) {\n    return;\n  };\n  DefaultDataProvider.prototype.appendData = function (newData) {};\n  DefaultDataProvider.prototype.clean = function () {};\n  DefaultDataProvider.protoInitialize = function () {\n    // PENDING: To avoid potential incompat (e.g., prototype\n    // is visited somewhere), still init them on prototype.\n    var proto = DefaultDataProvider.prototype;\n    proto.pure = false;\n    proto.persistent = true;\n  }();\n  DefaultDataProvider.internalField = function () {\n    var _a;\n    mountMethods = function mountMethods(provider, data, source) {\n      var sourceFormat = source.sourceFormat;\n      var seriesLayoutBy = source.seriesLayoutBy;\n      var startIndex = source.startIndex;\n      var dimsDef = source.dimensionsDefine;\n      var methods = providerMethods[getMethodMapKey(sourceFormat, seriesLayoutBy)];\n      if (process.env.NODE_ENV !== 'production') {\n        assert(methods, 'Invalide sourceFormat: ' + sourceFormat);\n      }\n      extend(provider, methods);\n      if (sourceFormat === SOURCE_FORMAT_TYPED_ARRAY) {\n        provider.getItem = getItemForTypedArray;\n        provider.count = countForTypedArray;\n        provider.fillStorage = fillStorageForTypedArray;\n      } else {\n        var rawItemGetter = getRawSourceItemGetter(sourceFormat, seriesLayoutBy);\n        provider.getItem = bind(rawItemGetter, null, data, startIndex, dimsDef);\n        var rawCounter = getRawSourceDataCounter(sourceFormat, seriesLayoutBy);\n        provider.count = bind(rawCounter, null, data, startIndex, dimsDef);\n      }\n    };\n    var getItemForTypedArray = function getItemForTypedArray(idx, out) {\n      idx = idx - this._offset;\n      out = out || [];\n      var data = this._data;\n      var dimSize = this._dimSize;\n      var offset = dimSize * idx;\n      for (var i = 0; i < dimSize; i++) {\n        out[i] = data[offset + i];\n      }\n      return out;\n    };\n    var fillStorageForTypedArray = function fillStorageForTypedArray(start, end, storage, extent) {\n      var data = this._data;\n      var dimSize = this._dimSize;\n      for (var dim = 0; dim < dimSize; dim++) {\n        var dimExtent = extent[dim];\n        var min = dimExtent[0] == null ? Infinity : dimExtent[0];\n        var max = dimExtent[1] == null ? -Infinity : dimExtent[1];\n        var count = end - start;\n        var arr = storage[dim];\n        for (var i = 0; i < count; i++) {\n          // appendData with TypedArray will always do replace in provider.\n          var val = data[i * dimSize + dim];\n          arr[start + i] = val;\n          val < min && (min = val);\n          val > max && (max = val);\n        }\n        dimExtent[0] = min;\n        dimExtent[1] = max;\n      }\n    };\n    var countForTypedArray = function countForTypedArray() {\n      return this._data ? this._data.length / this._dimSize : 0;\n    };\n    providerMethods = (_a = {}, _a[SOURCE_FORMAT_ARRAY_ROWS + '_' + SERIES_LAYOUT_BY_COLUMN] = {\n      pure: true,\n      appendData: appendDataSimply\n    }, _a[SOURCE_FORMAT_ARRAY_ROWS + '_' + SERIES_LAYOUT_BY_ROW] = {\n      pure: true,\n      appendData: function appendData() {\n        throw new Error('Do not support appendData when set seriesLayoutBy: \"row\".');\n      }\n    }, _a[SOURCE_FORMAT_OBJECT_ROWS] = {\n      pure: true,\n      appendData: appendDataSimply\n    }, _a[SOURCE_FORMAT_KEYED_COLUMNS] = {\n      pure: true,\n      appendData: function appendData(newData) {\n        var data = this._data;\n        each(newData, function (newCol, key) {\n          var oldCol = data[key] || (data[key] = []);\n          for (var i = 0; i < (newCol || []).length; i++) {\n            oldCol.push(newCol[i]);\n          }\n        });\n      }\n    }, _a[SOURCE_FORMAT_ORIGINAL] = {\n      appendData: appendDataSimply\n    }, _a[SOURCE_FORMAT_TYPED_ARRAY] = {\n      persistent: false,\n      pure: true,\n      appendData: function appendData(newData) {\n        if (process.env.NODE_ENV !== 'production') {\n          assert(isTypedArray(newData), 'Added data must be TypedArray if data in initialization is TypedArray');\n        }\n        this._data = newData;\n      },\n      // Clean self if data is already used.\n      clean: function clean() {\n        // PENDING\n        this._offset += this.count();\n        this._data = null;\n      }\n    }, _a);\n    function appendDataSimply(newData) {\n      for (var i = 0; i < newData.length; i++) {\n        this._data.push(newData[i]);\n      }\n    }\n  }();\n  return DefaultDataProvider;\n}();\nexport { DefaultDataProvider };\nvar getItemSimply = function getItemSimply(rawData, startIndex, dimsDef, idx) {\n  return rawData[idx];\n};\nvar rawSourceItemGetterMap = (_a = {}, _a[SOURCE_FORMAT_ARRAY_ROWS + '_' + SERIES_LAYOUT_BY_COLUMN] = function (rawData, startIndex, dimsDef, idx) {\n  return rawData[idx + startIndex];\n}, _a[SOURCE_FORMAT_ARRAY_ROWS + '_' + SERIES_LAYOUT_BY_ROW] = function (rawData, startIndex, dimsDef, idx, out) {\n  idx += startIndex;\n  var item = out || [];\n  var data = rawData;\n  for (var i = 0; i < data.length; i++) {\n    var row = data[i];\n    item[i] = row ? row[idx] : null;\n  }\n  return item;\n}, _a[SOURCE_FORMAT_OBJECT_ROWS] = getItemSimply, _a[SOURCE_FORMAT_KEYED_COLUMNS] = function (rawData, startIndex, dimsDef, idx, out) {\n  var item = out || [];\n  for (var i = 0; i < dimsDef.length; i++) {\n    var dimName = dimsDef[i].name;\n    if (process.env.NODE_ENV !== 'production') {\n      if (dimName == null) {\n        throw new Error();\n      }\n    }\n    var col = rawData[dimName];\n    item[i] = col ? col[idx] : null;\n  }\n  return item;\n}, _a[SOURCE_FORMAT_ORIGINAL] = getItemSimply, _a);\nexport function getRawSourceItemGetter(sourceFormat, seriesLayoutBy) {\n  var method = rawSourceItemGetterMap[getMethodMapKey(sourceFormat, seriesLayoutBy)];\n  if (process.env.NODE_ENV !== 'production') {\n    assert(method, 'Do not support get item on \"' + sourceFormat + '\", \"' + seriesLayoutBy + '\".');\n  }\n  return method;\n}\nvar countSimply = function countSimply(rawData, startIndex, dimsDef) {\n  return rawData.length;\n};\nvar rawSourceDataCounterMap = (_b = {}, _b[SOURCE_FORMAT_ARRAY_ROWS + '_' + SERIES_LAYOUT_BY_COLUMN] = function (rawData, startIndex, dimsDef) {\n  return Math.max(0, rawData.length - startIndex);\n}, _b[SOURCE_FORMAT_ARRAY_ROWS + '_' + SERIES_LAYOUT_BY_ROW] = function (rawData, startIndex, dimsDef) {\n  var row = rawData[0];\n  return row ? Math.max(0, row.length - startIndex) : 0;\n}, _b[SOURCE_FORMAT_OBJECT_ROWS] = countSimply, _b[SOURCE_FORMAT_KEYED_COLUMNS] = function (rawData, startIndex, dimsDef) {\n  var dimName = dimsDef[0].name;\n  if (process.env.NODE_ENV !== 'production') {\n    if (dimName == null) {\n      throw new Error();\n    }\n  }\n  var col = rawData[dimName];\n  return col ? col.length : 0;\n}, _b[SOURCE_FORMAT_ORIGINAL] = countSimply, _b);\nexport function getRawSourceDataCounter(sourceFormat, seriesLayoutBy) {\n  var method = rawSourceDataCounterMap[getMethodMapKey(sourceFormat, seriesLayoutBy)];\n  if (process.env.NODE_ENV !== 'production') {\n    assert(method, 'Do not support count on \"' + sourceFormat + '\", \"' + seriesLayoutBy + '\".');\n  }\n  return method;\n}\nvar getRawValueSimply = function getRawValueSimply(dataItem, dimIndex, property) {\n  return dataItem[dimIndex];\n};\nvar rawSourceValueGetterMap = (_c = {}, _c[SOURCE_FORMAT_ARRAY_ROWS] = getRawValueSimply, _c[SOURCE_FORMAT_OBJECT_ROWS] = function (dataItem, dimIndex, property) {\n  return dataItem[property];\n}, _c[SOURCE_FORMAT_KEYED_COLUMNS] = getRawValueSimply, _c[SOURCE_FORMAT_ORIGINAL] = function (dataItem, dimIndex, property) {\n  // FIXME: In some case (markpoint in geo (geo-map.html)),\n  // dataItem is {coord: [...]}\n  var value = getDataItemValue(dataItem);\n  return !(value instanceof Array) ? value : value[dimIndex];\n}, _c[SOURCE_FORMAT_TYPED_ARRAY] = getRawValueSimply, _c);\nexport function getRawSourceValueGetter(sourceFormat) {\n  var method = rawSourceValueGetterMap[sourceFormat];\n  if (process.env.NODE_ENV !== 'production') {\n    assert(method, 'Do not support get value on \"' + sourceFormat + '\".');\n  }\n  return method;\n}\nfunction getMethodMapKey(sourceFormat, seriesLayoutBy) {\n  return sourceFormat === SOURCE_FORMAT_ARRAY_ROWS ? sourceFormat + '_' + seriesLayoutBy : sourceFormat;\n} // ??? FIXME can these logic be more neat: getRawValue, getRawDataItem,\n// Consider persistent.\n// Caution: why use raw value to display on label or tooltip?\n// A reason is to avoid format. For example time value we do not know\n// how to format is expected. More over, if stack is used, calculated\n// value may be 0.91000000001, which have brings trouble to display.\n// TODO: consider how to treat null/undefined/NaN when display?\n\nexport function retrieveRawValue(data, dataIndex,\n// If dimIndex is null/undefined, return OptionDataItem.\n// Otherwise, return OptionDataValue.\ndim) {\n  if (!data) {\n    return;\n  } // Consider data may be not persistent.\n\n  var dataItem = data.getRawDataItem(dataIndex);\n  if (dataItem == null) {\n    return;\n  }\n  var store = data.getStore();\n  var sourceFormat = store.getSource().sourceFormat;\n  if (dim != null) {\n    var dimIndex = data.getDimensionIndex(dim);\n    var property = store.getDimensionProperty(dimIndex);\n    return getRawSourceValueGetter(sourceFormat)(dataItem, dimIndex, property);\n  } else {\n    var result = dataItem;\n    if (sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n      result = getDataItemValue(dataItem);\n    }\n    return result;\n  }\n}\n/**\n * Compatible with some cases (in pie, map) like:\n * data: [{name: 'xx', value: 5, selected: true}, ...]\n * where only sourceFormat is 'original' and 'objectRows' supported.\n *\n * // TODO\n * Supported detail options in data item when using 'arrayRows'.\n *\n * @param data\n * @param dataIndex\n * @param attr like 'selected'\n */\n\nexport function retrieveRawAttr(data, dataIndex, attr) {\n  if (!data) {\n    return;\n  }\n  var sourceFormat = data.getStore().getSource().sourceFormat;\n  if (sourceFormat !== SOURCE_FORMAT_ORIGINAL && sourceFormat !== SOURCE_FORMAT_OBJECT_ROWS) {\n    return;\n  }\n  var dataItem = data.getRawDataItem(dataIndex);\n  if (sourceFormat === SOURCE_FORMAT_ORIGINAL && !isObject(dataItem)) {\n    dataItem = null;\n  }\n  if (dataItem) {\n    return dataItem[attr];\n  }\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { each, isString } from 'zrender/lib/core/util.js';\nimport { isSeriesDataSchema } from './SeriesDataSchema.js';\n/**\n * Note that it is too complicated to support 3d stack by value\n * (have to create two-dimension inverted index), so in 3d case\n * we just support that stacked by index.\n *\n * @param seriesModel\n * @param dimensionsInput The same as the input of <module:echarts/data/SeriesData>.\n *        The input will be modified.\n * @param opt\n * @param opt.stackedCoordDimension Specify a coord dimension if needed.\n * @param opt.byIndex=false\n * @return calculationInfo\n * {\n *     stackedDimension: string\n *     stackedByDimension: string\n *     isStackedByIndex: boolean\n *     stackedOverDimension: string\n *     stackResultDimension: string\n * }\n */\n\nexport function enableDataStack(seriesModel, dimensionsInput, opt) {\n  opt = opt || {};\n  var byIndex = opt.byIndex;\n  var stackedCoordDimension = opt.stackedCoordDimension;\n  var dimensionDefineList;\n  var schema;\n  var store;\n\n  if (isLegacyDimensionsInput(dimensionsInput)) {\n    dimensionDefineList = dimensionsInput;\n  } else {\n    schema = dimensionsInput.schema;\n    dimensionDefineList = schema.dimensions;\n    store = dimensionsInput.store;\n  } // Compatibal: when `stack` is set as '', do not stack.\n\n\n  var mayStack = !!(seriesModel && seriesModel.get('stack'));\n  var stackedByDimInfo;\n  var stackedDimInfo;\n  var stackResultDimension;\n  var stackedOverDimension;\n  each(dimensionDefineList, function (dimensionInfo, index) {\n    if (isString(dimensionInfo)) {\n      dimensionDefineList[index] = dimensionInfo = {\n        name: dimensionInfo\n      };\n    }\n\n    if (mayStack && !dimensionInfo.isExtraCoord) {\n      // Find the first ordinal dimension as the stackedByDimInfo.\n      if (!byIndex && !stackedByDimInfo && dimensionInfo.ordinalMeta) {\n        stackedByDimInfo = dimensionInfo;\n      } // Find the first stackable dimension as the stackedDimInfo.\n\n\n      if (!stackedDimInfo && dimensionInfo.type !== 'ordinal' && dimensionInfo.type !== 'time' && (!stackedCoordDimension || stackedCoordDimension === dimensionInfo.coordDim)) {\n        stackedDimInfo = dimensionInfo;\n      }\n    }\n  });\n\n  if (stackedDimInfo && !byIndex && !stackedByDimInfo) {\n    // Compatible with previous design, value axis (time axis) only stack by index.\n    // It may make sense if the user provides elaborately constructed data.\n    byIndex = true;\n  } // Add stack dimension, they can be both calculated by coordinate system in `unionExtent`.\n  // That put stack logic in List is for using conveniently in echarts extensions, but it\n  // might not be a good way.\n\n\n  if (stackedDimInfo) {\n    // Use a weird name that not duplicated with other names.\n    // Also need to use seriesModel.id as postfix because different\n    // series may share same data store. The stack dimension needs to be distinguished.\n    stackResultDimension = '__\\0ecstackresult_' + seriesModel.id;\n    stackedOverDimension = '__\\0ecstackedover_' + seriesModel.id; // Create inverted index to fast query index by value.\n\n    if (stackedByDimInfo) {\n      stackedByDimInfo.createInvertedIndices = true;\n    }\n\n    var stackedDimCoordDim_1 = stackedDimInfo.coordDim;\n    var stackedDimType = stackedDimInfo.type;\n    var stackedDimCoordIndex_1 = 0;\n    each(dimensionDefineList, function (dimensionInfo) {\n      if (dimensionInfo.coordDim === stackedDimCoordDim_1) {\n        stackedDimCoordIndex_1++;\n      }\n    });\n    var stackedOverDimensionDefine = {\n      name: stackResultDimension,\n      coordDim: stackedDimCoordDim_1,\n      coordDimIndex: stackedDimCoordIndex_1,\n      type: stackedDimType,\n      isExtraCoord: true,\n      isCalculationCoord: true,\n      storeDimIndex: dimensionDefineList.length\n    };\n    var stackResultDimensionDefine = {\n      name: stackedOverDimension,\n      // This dimension contains stack base (generally, 0), so do not set it as\n      // `stackedDimCoordDim` to avoid extent calculation, consider log scale.\n      coordDim: stackedOverDimension,\n      coordDimIndex: stackedDimCoordIndex_1 + 1,\n      type: stackedDimType,\n      isExtraCoord: true,\n      isCalculationCoord: true,\n      storeDimIndex: dimensionDefineList.length + 1\n    };\n\n    if (schema) {\n      if (store) {\n        stackedOverDimensionDefine.storeDimIndex = store.ensureCalculationDimension(stackedOverDimension, stackedDimType);\n        stackResultDimensionDefine.storeDimIndex = store.ensureCalculationDimension(stackResultDimension, stackedDimType);\n      }\n\n      schema.appendCalculationDimension(stackedOverDimensionDefine);\n      schema.appendCalculationDimension(stackResultDimensionDefine);\n    } else {\n      dimensionDefineList.push(stackedOverDimensionDefine);\n      dimensionDefineList.push(stackResultDimensionDefine);\n    }\n  }\n\n  return {\n    stackedDimension: stackedDimInfo && stackedDimInfo.name,\n    stackedByDimension: stackedByDimInfo && stackedByDimInfo.name,\n    isStackedByIndex: byIndex,\n    stackedOverDimension: stackedOverDimension,\n    stackResultDimension: stackResultDimension\n  };\n}\n\nfunction isLegacyDimensionsInput(dimensionsInput) {\n  return !isSeriesDataSchema(dimensionsInput.schema);\n}\n\nexport function isDimensionStacked(data, stackedDim) {\n  // Each single series only maps to one pair of axis. So we do not need to\n  // check stackByDim, whatever stacked by a dimension or stacked by index.\n  return !!stackedDim && stackedDim === data.getCalculationInfo('stackedDimension');\n}\nexport function getStackedDimension(data, targetDim) {\n  return isDimensionStacked(data, targetDim) ? data.getCalculationInfo('stackResultDimension') : targetDim;\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { parseDate, numericToNumber } from '../../util/number.js';\nimport { createHashMap, trim, hasOwn, isString, isNumber } from 'zrender/lib/core/util.js';\nimport { throwError } from '../../util/log.js';\n/**\n * Convert raw the value in to inner value in List.\n *\n * [Performance sensitive]\n *\n * [Caution]: this is the key logic of user value parser.\n * For backward compatibility, do not modify it until you have to!\n */\n\nexport function parseDataValue(value, // For high performance, do not omit the second param.\nopt) {\n  // Performance sensitive.\n  var dimType = opt && opt.type;\n\n  if (dimType === 'ordinal') {\n    // If given value is a category string\n    return value;\n  }\n\n  if (dimType === 'time' // spead up when using timestamp\n  && !isNumber(value) && value != null && value !== '-') {\n    value = +parseDate(value);\n  } // dimType defaults 'number'.\n  // If dimType is not ordinal and value is null or undefined or NaN or '-',\n  // parse to NaN.\n  // number-like string (like ' 123 ') can be converted to a number.\n  // where null/undefined or other string will be converted to NaN.\n\n\n  return value == null || value === '' ? NaN // If string (like '-'), using '+' parse to NaN\n  // If object, also parse to NaN\n  : +value;\n}\n;\nvar valueParserMap = createHashMap({\n  'number': function (val) {\n    // Do not use `numericToNumber` here. We have `numericToNumber` by default.\n    // Here the number parser can have loose rule:\n    // enable to cut suffix: \"120px\" => 120, \"14%\" => 14.\n    return parseFloat(val);\n  },\n  'time': function (val) {\n    // return timestamp.\n    return +parseDate(val);\n  },\n  'trim': function (val) {\n    return isString(val) ? trim(val) : val;\n  }\n});\nexport function getRawValueParser(type) {\n  return valueParserMap.get(type);\n}\nvar ORDER_COMPARISON_OP_MAP = {\n  lt: function (lval, rval) {\n    return lval < rval;\n  },\n  lte: function (lval, rval) {\n    return lval <= rval;\n  },\n  gt: function (lval, rval) {\n    return lval > rval;\n  },\n  gte: function (lval, rval) {\n    return lval >= rval;\n  }\n};\n\nvar FilterOrderComparator =\n/** @class */\nfunction () {\n  function FilterOrderComparator(op, rval) {\n    if (!isNumber(rval)) {\n      var errMsg = '';\n\n      if (process.env.NODE_ENV !== 'production') {\n        errMsg = 'rvalue of \"<\", \">\", \"<=\", \">=\" can only be number in filter.';\n      }\n\n      throwError(errMsg);\n    }\n\n    this._opFn = ORDER_COMPARISON_OP_MAP[op];\n    this._rvalFloat = numericToNumber(rval);\n  } // Performance sensitive.\n\n\n  FilterOrderComparator.prototype.evaluate = function (lval) {\n    // Most cases is 'number', and typeof maybe 10 times faseter than parseFloat.\n    return isNumber(lval) ? this._opFn(lval, this._rvalFloat) : this._opFn(numericToNumber(lval), this._rvalFloat);\n  };\n\n  return FilterOrderComparator;\n}();\n\nvar SortOrderComparator =\n/** @class */\nfunction () {\n  /**\n   * @param order by default: 'asc'\n   * @param incomparable by default: Always on the tail.\n   *        That is, if 'asc' => 'max', if 'desc' => 'min'\n   *        See the definition of \"incomparable\" in [SORT_COMPARISON_RULE].\n   */\n  function SortOrderComparator(order, incomparable) {\n    var isDesc = order === 'desc';\n    this._resultLT = isDesc ? 1 : -1;\n\n    if (incomparable == null) {\n      incomparable = isDesc ? 'min' : 'max';\n    }\n\n    this._incomparable = incomparable === 'min' ? -Infinity : Infinity;\n  } // See [SORT_COMPARISON_RULE].\n  // Performance sensitive.\n\n\n  SortOrderComparator.prototype.evaluate = function (lval, rval) {\n    // Most cases is 'number', and typeof maybe 10 times faseter than parseFloat.\n    var lvalFloat = isNumber(lval) ? lval : numericToNumber(lval);\n    var rvalFloat = isNumber(rval) ? rval : numericToNumber(rval);\n    var lvalNotNumeric = isNaN(lvalFloat);\n    var rvalNotNumeric = isNaN(rvalFloat);\n\n    if (lvalNotNumeric) {\n      lvalFloat = this._incomparable;\n    }\n\n    if (rvalNotNumeric) {\n      rvalFloat = this._incomparable;\n    }\n\n    if (lvalNotNumeric && rvalNotNumeric) {\n      var lvalIsStr = isString(lval);\n      var rvalIsStr = isString(rval);\n\n      if (lvalIsStr) {\n        lvalFloat = rvalIsStr ? lval : 0;\n      }\n\n      if (rvalIsStr) {\n        rvalFloat = lvalIsStr ? rval : 0;\n      }\n    }\n\n    return lvalFloat < rvalFloat ? this._resultLT : lvalFloat > rvalFloat ? -this._resultLT : 0;\n  };\n\n  return SortOrderComparator;\n}();\n\nexport { SortOrderComparator };\n\nvar FilterEqualityComparator =\n/** @class */\nfunction () {\n  function FilterEqualityComparator(isEq, rval) {\n    this._rval = rval;\n    this._isEQ = isEq;\n    this._rvalTypeof = typeof rval;\n    this._rvalFloat = numericToNumber(rval);\n  } // Performance sensitive.\n\n\n  FilterEqualityComparator.prototype.evaluate = function (lval) {\n    var eqResult = lval === this._rval;\n\n    if (!eqResult) {\n      var lvalTypeof = typeof lval;\n\n      if (lvalTypeof !== this._rvalTypeof && (lvalTypeof === 'number' || this._rvalTypeof === 'number')) {\n        eqResult = numericToNumber(lval) === this._rvalFloat;\n      }\n    }\n\n    return this._isEQ ? eqResult : !eqResult;\n  };\n\n  return FilterEqualityComparator;\n}();\n/**\n * [FILTER_COMPARISON_RULE]\n * `lt`|`lte`|`gt`|`gte`:\n * + rval must be a number. And lval will be converted to number (`numericToNumber`) to compare.\n * `eq`:\n * + If same type, compare with `===`.\n * + If there is one number, convert to number (`numericToNumber`) to compare.\n * + Else return `false`.\n * `ne`:\n * + Not `eq`.\n *\n *\n * [SORT_COMPARISON_RULE]\n * All the values are grouped into three categories:\n * + \"numeric\" (number and numeric string)\n * + \"non-numeric-string\" (string that excluding numeric string)\n * + \"others\"\n * \"numeric\" vs \"numeric\": values are ordered by number order.\n * \"non-numeric-string\" vs \"non-numeric-string\": values are ordered by ES spec (#sec-abstract-relational-comparison).\n * \"others\" vs \"others\": do not change order (always return 0).\n * \"numeric\" vs \"non-numeric-string\": \"non-numeric-string\" is treated as \"incomparable\".\n * \"number\" vs \"others\": \"others\" is treated as \"incomparable\".\n * \"non-numeric-string\" vs \"others\": \"others\" is treated as \"incomparable\".\n * \"incomparable\" will be seen as -Infinity or Infinity (depends on the settings).\n * MEMO:\n *   Non-numeric string sort makes sense when we need to put the items with the same tag together.\n *   But if we support string sort, we still need to avoid the misleading like `'2' > '12'`,\n *   So we treat \"numeric-string\" sorted by number order rather than string comparison.\n *\n *\n * [CHECK_LIST_OF_THE_RULE_DESIGN]\n * + Do not support string comparison until required. And also need to\n *   avoid the misleading of \"2\" > \"12\".\n * + Should avoid the misleading case:\n *   `\" 22 \" gte \"22\"` is `true` but `\" 22 \" eq \"22\"` is `false`.\n * + JS bad case should be avoided: null <= 0, [] <= 0, ' ' <= 0, ...\n * + Only \"numeric\" can be converted to comparable number, otherwise converted to NaN.\n *   See `util/number.ts#numericToNumber`.\n *\n * @return If `op` is not `RelationalOperator`, return null;\n */\n\n\nexport function createFilterComparator(op, rval) {\n  return op === 'eq' || op === 'ne' ? new FilterEqualityComparator(op === 'eq', rval) : hasOwn(ORDER_COMPARISON_OP_MAP, op) ? new FilterOrderComparator(op, rval) : null;\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { each, createHashMap, assert, map } from 'zrender/lib/core/util.js';\nimport { VISUAL_DIMENSIONS } from '../../util/types.js';\n\nvar DimensionUserOuput =\n/** @class */\nfunction () {\n  function DimensionUserOuput(encode, dimRequest) {\n    this._encode = encode;\n    this._schema = dimRequest;\n  }\n\n  DimensionUserOuput.prototype.get = function () {\n    return {\n      // Do not generate full dimension name until fist used.\n      fullDimensions: this._getFullDimensionNames(),\n      encode: this._encode\n    };\n  };\n  /**\n   * Get all data store dimension names.\n   * Theoretically a series data store is defined both by series and used dataset (if any).\n   * If some dimensions are omitted for performance reason in `this.dimensions`,\n   * the dimension name may not be auto-generated if user does not specify a dimension name.\n   * In this case, the dimension name is `null`/`undefined`.\n   */\n\n\n  DimensionUserOuput.prototype._getFullDimensionNames = function () {\n    if (!this._cachedDimNames) {\n      this._cachedDimNames = this._schema ? this._schema.makeOutputDimensionNames() : [];\n    }\n\n    return this._cachedDimNames;\n  };\n\n  return DimensionUserOuput;\n}();\n\n;\nexport function summarizeDimensions(data, schema) {\n  var summary = {};\n  var encode = summary.encode = {};\n  var notExtraCoordDimMap = createHashMap();\n  var defaultedLabel = [];\n  var defaultedTooltip = [];\n  var userOutputEncode = {};\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n    var coordDim = dimItem.coordDim;\n\n    if (coordDim) {\n      if (process.env.NODE_ENV !== 'production') {\n        assert(VISUAL_DIMENSIONS.get(coordDim) == null);\n      }\n\n      var coordDimIndex = dimItem.coordDimIndex;\n      getOrCreateEncodeArr(encode, coordDim)[coordDimIndex] = dimName;\n\n      if (!dimItem.isExtraCoord) {\n        notExtraCoordDimMap.set(coordDim, 1); // Use the last coord dim (and label friendly) as default label,\n        // because when dataset is used, it is hard to guess which dimension\n        // can be value dimension. If both show x, y on label is not look good,\n        // and conventionally y axis is focused more.\n\n        if (mayLabelDimType(dimItem.type)) {\n          defaultedLabel[0] = dimName;\n        } // User output encode do not contain generated coords.\n        // And it only has index. User can use index to retrieve value from the raw item array.\n\n\n        getOrCreateEncodeArr(userOutputEncode, coordDim)[coordDimIndex] = data.getDimensionIndex(dimItem.name);\n      }\n\n      if (dimItem.defaultTooltip) {\n        defaultedTooltip.push(dimName);\n      }\n    }\n\n    VISUAL_DIMENSIONS.each(function (v, otherDim) {\n      var encodeArr = getOrCreateEncodeArr(encode, otherDim);\n      var dimIndex = dimItem.otherDims[otherDim];\n\n      if (dimIndex != null && dimIndex !== false) {\n        encodeArr[dimIndex] = dimItem.name;\n      }\n    });\n  });\n  var dataDimsOnCoord = [];\n  var encodeFirstDimNotExtra = {};\n  notExtraCoordDimMap.each(function (v, coordDim) {\n    var dimArr = encode[coordDim];\n    encodeFirstDimNotExtra[coordDim] = dimArr[0]; // Not necessary to remove duplicate, because a data\n    // dim canot on more than one coordDim.\n\n    dataDimsOnCoord = dataDimsOnCoord.concat(dimArr);\n  });\n  summary.dataDimsOnCoord = dataDimsOnCoord;\n  summary.dataDimIndicesOnCoord = map(dataDimsOnCoord, function (dimName) {\n    return data.getDimensionInfo(dimName).storeDimIndex;\n  });\n  summary.encodeFirstDimNotExtra = encodeFirstDimNotExtra;\n  var encodeLabel = encode.label; // FIXME `encode.label` is not recommended, because formatter cannot be set\n  // in this way. Use label.formatter instead. Maybe remove this approach someday.\n\n  if (encodeLabel && encodeLabel.length) {\n    defaultedLabel = encodeLabel.slice();\n  }\n\n  var encodeTooltip = encode.tooltip;\n\n  if (encodeTooltip && encodeTooltip.length) {\n    defaultedTooltip = encodeTooltip.slice();\n  } else if (!defaultedTooltip.length) {\n    defaultedTooltip = defaultedLabel.slice();\n  }\n\n  encode.defaultedLabel = defaultedLabel;\n  encode.defaultedTooltip = defaultedTooltip;\n  summary.userOutput = new DimensionUserOuput(userOutputEncode, schema);\n  return summary;\n}\n\nfunction getOrCreateEncodeArr(encode, dim) {\n  if (!encode.hasOwnProperty(dim)) {\n    encode[dim] = [];\n  }\n\n  return encode[dim];\n} // FIXME:TS should be type `AxisType`\n\n\nexport function getDimensionTypeByAxis(axisType) {\n  return axisType === 'category' ? 'ordinal' : axisType === 'time' ? 'time' : 'float';\n}\n\nfunction mayLabelDimType(dimType) {\n  // In most cases, ordinal and time do not suitable for label.\n  // Ordinal info can be displayed on axis. Time is too long.\n  return !(dimType === 'ordinal' || dimType === 'time');\n} // function findTheLastDimMayLabel(data) {\n//     // Get last value dim\n//     let dimensions = data.dimensions.slice();\n//     let valueType;\n//     let valueDim;\n//     while (dimensions.length && (\n//         valueDim = dimensions.pop(),\n//         valueType = data.getDimensionInfo(valueDim).type,\n//         valueType === 'ordinal' || valueType === 'time'\n//     )) {} // jshint ignore:line\n//     return valueDim;\n// }","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Link lists and struct (graph or tree)\n */\nimport { curry, each, assert, extend, map, keys } from 'zrender/lib/core/util.js';\nimport { makeInner } from '../../util/model.js';\nvar inner = makeInner();\n\nfunction linkSeriesData(opt) {\n  var mainData = opt.mainData;\n  var datas = opt.datas;\n\n  if (!datas) {\n    datas = {\n      main: mainData\n    };\n    opt.datasAttr = {\n      main: 'data'\n    };\n  }\n\n  opt.datas = opt.mainData = null;\n  linkAll(mainData, datas, opt); // Porxy data original methods.\n\n  each(datas, function (data) {\n    each(mainData.TRANSFERABLE_METHODS, function (methodName) {\n      data.wrapMethod(methodName, curry(transferInjection, opt));\n    });\n  }); // Beyond transfer, additional features should be added to `cloneShallow`.\n\n  mainData.wrapMethod('cloneShallow', curry(cloneShallowInjection, opt)); // Only mainData trigger change, because struct.update may trigger\n  // another changable methods, which may bring about dead lock.\n\n  each(mainData.CHANGABLE_METHODS, function (methodName) {\n    mainData.wrapMethod(methodName, curry(changeInjection, opt));\n  }); // Make sure datas contains mainData.\n\n  assert(datas[mainData.dataType] === mainData);\n}\n\nfunction transferInjection(opt, res) {\n  if (isMainData(this)) {\n    // Transfer datas to new main data.\n    var datas = extend({}, inner(this).datas);\n    datas[this.dataType] = res;\n    linkAll(res, datas, opt);\n  } else {\n    // Modify the reference in main data to point newData.\n    linkSingle(res, this.dataType, inner(this).mainData, opt);\n  }\n\n  return res;\n}\n\nfunction changeInjection(opt, res) {\n  opt.struct && opt.struct.update();\n  return res;\n}\n\nfunction cloneShallowInjection(opt, res) {\n  // cloneShallow, which brings about some fragilities, may be inappropriate\n  // to be exposed as an API. So for implementation simplicity we can make\n  // the restriction that cloneShallow of not-mainData should not be invoked\n  // outside, but only be invoked here.\n  each(inner(res).datas, function (data, dataType) {\n    data !== res && linkSingle(data.cloneShallow(), dataType, res, opt);\n  });\n  return res;\n}\n/**\n * Supplement method to List.\n *\n * @public\n * @param [dataType] If not specified, return mainData.\n */\n\n\nfunction getLinkedData(dataType) {\n  var mainData = inner(this).mainData;\n  return dataType == null || mainData == null ? mainData : inner(mainData).datas[dataType];\n}\n/**\n * Get list of all linked data\n */\n\n\nfunction getLinkedDataAll() {\n  var mainData = inner(this).mainData;\n  return mainData == null ? [{\n    data: mainData\n  }] : map(keys(inner(mainData).datas), function (type) {\n    return {\n      type: type,\n      data: inner(mainData).datas[type]\n    };\n  });\n}\n\nfunction isMainData(data) {\n  return inner(data).mainData === data;\n}\n\nfunction linkAll(mainData, datas, opt) {\n  inner(mainData).datas = {};\n  each(datas, function (data, dataType) {\n    linkSingle(data, dataType, mainData, opt);\n  });\n}\n\nfunction linkSingle(data, dataType, mainData, opt) {\n  inner(mainData).datas[dataType] = data;\n  inner(data).mainData = mainData;\n  data.dataType = dataType;\n\n  if (opt.struct) {\n    data[opt.structAttr] = opt.struct;\n    opt.struct[opt.datasAttr[dataType]] = data;\n  } // Supplement method.\n\n\n  data.getLinkedData = getLinkedData;\n  data.getLinkedDataAll = getLinkedDataAll;\n}\n\nexport default linkSeriesData;","import \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.push.js\";\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { makeInner, getDataItemValue, queryReferringComponents, SINGLE_REFERRING } from '../../util/model.js';\nimport { createHashMap, each, isArray, isString, isObject, isTypedArray } from 'zrender/lib/core/util.js';\nimport { SOURCE_FORMAT_ORIGINAL, SOURCE_FORMAT_ARRAY_ROWS, SOURCE_FORMAT_OBJECT_ROWS, SERIES_LAYOUT_BY_ROW, SOURCE_FORMAT_KEYED_COLUMNS } from '../../util/types.js'; // The result of `guessOrdinal`.\n\nexport var BE_ORDINAL = {\n  Must: 1,\n  Might: 2,\n  Not: 3 // Other cases\n};\n\nvar innerGlobalModel = makeInner();\n/**\n * MUST be called before mergeOption of all series.\n */\n\nexport function resetSourceDefaulter(ecModel) {\n  // `datasetMap` is used to make default encode.\n  innerGlobalModel(ecModel).datasetMap = createHashMap();\n}\n/**\n * [The strategy of the arrengment of data dimensions for dataset]:\n * \"value way\": all axes are non-category axes. So series one by one take\n *     several (the number is coordSysDims.length) dimensions from dataset.\n *     The result of data arrengment of data dimensions like:\n *     | ser0_x | ser0_y | ser1_x | ser1_y | ser2_x | ser2_y |\n * \"category way\": at least one axis is category axis. So the the first data\n *     dimension is always mapped to the first category axis and shared by\n *     all of the series. The other data dimensions are taken by series like\n *     \"value way\" does.\n *     The result of data arrengment of data dimensions like:\n *     | ser_shared_x | ser0_y | ser1_y | ser2_y |\n *\n * @return encode Never be `null/undefined`.\n */\n\nexport function makeSeriesEncodeForAxisCoordSys(coordDimensions, seriesModel, source) {\n  var encode = {};\n  var datasetModel = querySeriesUpstreamDatasetModel(seriesModel); // Currently only make default when using dataset, util more reqirements occur.\n\n  if (!datasetModel || !coordDimensions) {\n    return encode;\n  }\n  var encodeItemName = [];\n  var encodeSeriesName = [];\n  var ecModel = seriesModel.ecModel;\n  var datasetMap = innerGlobalModel(ecModel).datasetMap;\n  var key = datasetModel.uid + '_' + source.seriesLayoutBy;\n  var baseCategoryDimIndex;\n  var categoryWayValueDimStart;\n  coordDimensions = coordDimensions.slice();\n  each(coordDimensions, function (coordDimInfoLoose, coordDimIdx) {\n    var coordDimInfo = isObject(coordDimInfoLoose) ? coordDimInfoLoose : coordDimensions[coordDimIdx] = {\n      name: coordDimInfoLoose\n    };\n    if (coordDimInfo.type === 'ordinal' && baseCategoryDimIndex == null) {\n      baseCategoryDimIndex = coordDimIdx;\n      categoryWayValueDimStart = getDataDimCountOnCoordDim(coordDimInfo);\n    }\n    encode[coordDimInfo.name] = [];\n  });\n  var datasetRecord = datasetMap.get(key) || datasetMap.set(key, {\n    categoryWayDim: categoryWayValueDimStart,\n    valueWayDim: 0\n  }); // TODO\n  // Auto detect first time axis and do arrangement.\n\n  each(coordDimensions, function (coordDimInfo, coordDimIdx) {\n    var coordDimName = coordDimInfo.name;\n    var count = getDataDimCountOnCoordDim(coordDimInfo); // In value way.\n\n    if (baseCategoryDimIndex == null) {\n      var start = datasetRecord.valueWayDim;\n      pushDim(encode[coordDimName], start, count);\n      pushDim(encodeSeriesName, start, count);\n      datasetRecord.valueWayDim += count; // ??? TODO give a better default series name rule?\n      // especially when encode x y specified.\n      // consider: when multiple series share one dimension\n      // category axis, series name should better use\n      // the other dimension name. On the other hand, use\n      // both dimensions name.\n    } // In category way, the first category axis.\n    else if (baseCategoryDimIndex === coordDimIdx) {\n      pushDim(encode[coordDimName], 0, count);\n      pushDim(encodeItemName, 0, count);\n    } // In category way, the other axis.\n    else {\n      var start = datasetRecord.categoryWayDim;\n      pushDim(encode[coordDimName], start, count);\n      pushDim(encodeSeriesName, start, count);\n      datasetRecord.categoryWayDim += count;\n    }\n  });\n  function pushDim(dimIdxArr, idxFrom, idxCount) {\n    for (var i = 0; i < idxCount; i++) {\n      dimIdxArr.push(idxFrom + i);\n    }\n  }\n  function getDataDimCountOnCoordDim(coordDimInfo) {\n    var dimsDef = coordDimInfo.dimsDef;\n    return dimsDef ? dimsDef.length : 1;\n  }\n  encodeItemName.length && (encode.itemName = encodeItemName);\n  encodeSeriesName.length && (encode.seriesName = encodeSeriesName);\n  return encode;\n}\n/**\n * Work for data like [{name: ..., value: ...}, ...].\n *\n * @return encode Never be `null/undefined`.\n */\n\nexport function makeSeriesEncodeForNameBased(seriesModel, source, dimCount) {\n  var encode = {};\n  var datasetModel = querySeriesUpstreamDatasetModel(seriesModel); // Currently only make default when using dataset, util more reqirements occur.\n\n  if (!datasetModel) {\n    return encode;\n  }\n  var sourceFormat = source.sourceFormat;\n  var dimensionsDefine = source.dimensionsDefine;\n  var potentialNameDimIndex;\n  if (sourceFormat === SOURCE_FORMAT_OBJECT_ROWS || sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS) {\n    each(dimensionsDefine, function (dim, idx) {\n      if ((isObject(dim) ? dim.name : dim) === 'name') {\n        potentialNameDimIndex = idx;\n      }\n    });\n  }\n  var idxResult = function () {\n    var idxRes0 = {};\n    var idxRes1 = {};\n    var guessRecords = []; // 5 is an experience value.\n\n    for (var i = 0, len = Math.min(5, dimCount); i < len; i++) {\n      var guessResult = doGuessOrdinal(source.data, sourceFormat, source.seriesLayoutBy, dimensionsDefine, source.startIndex, i);\n      guessRecords.push(guessResult);\n      var isPureNumber = guessResult === BE_ORDINAL.Not; // [Strategy of idxRes0]: find the first BE_ORDINAL.Not as the value dim,\n      // and then find a name dim with the priority:\n      // \"BE_ORDINAL.Might|BE_ORDINAL.Must\" > \"other dim\" > \"the value dim itself\".\n\n      if (isPureNumber && idxRes0.v == null && i !== potentialNameDimIndex) {\n        idxRes0.v = i;\n      }\n      if (idxRes0.n == null || idxRes0.n === idxRes0.v || !isPureNumber && guessRecords[idxRes0.n] === BE_ORDINAL.Not) {\n        idxRes0.n = i;\n      }\n      if (fulfilled(idxRes0) && guessRecords[idxRes0.n] !== BE_ORDINAL.Not) {\n        return idxRes0;\n      } // [Strategy of idxRes1]: if idxRes0 not satisfied (that is, no BE_ORDINAL.Not),\n      // find the first BE_ORDINAL.Might as the value dim,\n      // and then find a name dim with the priority:\n      // \"other dim\" > \"the value dim itself\".\n      // That is for backward compat: number-like (e.g., `'3'`, `'55'`) can be\n      // treated as number.\n\n      if (!isPureNumber) {\n        if (guessResult === BE_ORDINAL.Might && idxRes1.v == null && i !== potentialNameDimIndex) {\n          idxRes1.v = i;\n        }\n        if (idxRes1.n == null || idxRes1.n === idxRes1.v) {\n          idxRes1.n = i;\n        }\n      }\n    }\n    function fulfilled(idxResult) {\n      return idxResult.v != null && idxResult.n != null;\n    }\n    return fulfilled(idxRes0) ? idxRes0 : fulfilled(idxRes1) ? idxRes1 : null;\n  }();\n  if (idxResult) {\n    encode.value = [idxResult.v]; // `potentialNameDimIndex` has highest priority.\n\n    var nameDimIndex = potentialNameDimIndex != null ? potentialNameDimIndex : idxResult.n; // By default, label uses itemName in charts.\n    // So we don't set encodeLabel here.\n\n    encode.itemName = [nameDimIndex];\n    encode.seriesName = [nameDimIndex];\n  }\n  return encode;\n}\n/**\n * @return If return null/undefined, indicate that should not use datasetModel.\n */\n\nexport function querySeriesUpstreamDatasetModel(seriesModel) {\n  // Caution: consider the scenario:\n  // A dataset is declared and a series is not expected to use the dataset,\n  // and at the beginning `setOption({series: { noData })` (just prepare other\n  // option but no data), then `setOption({series: {data: [...]}); In this case,\n  // the user should set an empty array to avoid that dataset is used by default.\n  var thisData = seriesModel.get('data', true);\n  if (!thisData) {\n    return queryReferringComponents(seriesModel.ecModel, 'dataset', {\n      index: seriesModel.get('datasetIndex', true),\n      id: seriesModel.get('datasetId', true)\n    }, SINGLE_REFERRING).models[0];\n  }\n}\n/**\n * @return Always return an array event empty.\n */\n\nexport function queryDatasetUpstreamDatasetModels(datasetModel) {\n  // Only these attributes declared, we by defualt reference to `datasetIndex: 0`.\n  // Otherwise, no reference.\n  if (!datasetModel.get('transform', true) && !datasetModel.get('fromTransformResult', true)) {\n    return [];\n  }\n  return queryReferringComponents(datasetModel.ecModel, 'dataset', {\n    index: datasetModel.get('fromDatasetIndex', true),\n    id: datasetModel.get('fromDatasetId', true)\n  }, SINGLE_REFERRING).models;\n}\n/**\n * The rule should not be complex, otherwise user might not\n * be able to known where the data is wrong.\n * The code is ugly, but how to make it neat?\n */\n\nexport function guessOrdinal(source, dimIndex) {\n  return doGuessOrdinal(source.data, source.sourceFormat, source.seriesLayoutBy, source.dimensionsDefine, source.startIndex, dimIndex);\n} // dimIndex may be overflow source data.\n// return {BE_ORDINAL}\n\nfunction doGuessOrdinal(data, sourceFormat, seriesLayoutBy, dimensionsDefine, startIndex, dimIndex) {\n  var result; // Experience value.\n\n  var maxLoop = 5;\n  if (isTypedArray(data)) {\n    return BE_ORDINAL.Not;\n  } // When sourceType is 'objectRows' or 'keyedColumns', dimensionsDefine\n  // always exists in source.\n\n  var dimName;\n  var dimType;\n  if (dimensionsDefine) {\n    var dimDefItem = dimensionsDefine[dimIndex];\n    if (isObject(dimDefItem)) {\n      dimName = dimDefItem.name;\n      dimType = dimDefItem.type;\n    } else if (isString(dimDefItem)) {\n      dimName = dimDefItem;\n    }\n  }\n  if (dimType != null) {\n    return dimType === 'ordinal' ? BE_ORDINAL.Must : BE_ORDINAL.Not;\n  }\n  if (sourceFormat === SOURCE_FORMAT_ARRAY_ROWS) {\n    var dataArrayRows = data;\n    if (seriesLayoutBy === SERIES_LAYOUT_BY_ROW) {\n      var sample = dataArrayRows[dimIndex];\n      for (var i = 0; i < (sample || []).length && i < maxLoop; i++) {\n        if ((result = detectValue(sample[startIndex + i])) != null) {\n          return result;\n        }\n      }\n    } else {\n      for (var i = 0; i < dataArrayRows.length && i < maxLoop; i++) {\n        var row = dataArrayRows[startIndex + i];\n        if (row && (result = detectValue(row[dimIndex])) != null) {\n          return result;\n        }\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_OBJECT_ROWS) {\n    var dataObjectRows = data;\n    if (!dimName) {\n      return BE_ORDINAL.Not;\n    }\n    for (var i = 0; i < dataObjectRows.length && i < maxLoop; i++) {\n      var item = dataObjectRows[i];\n      if (item && (result = detectValue(item[dimName])) != null) {\n        return result;\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS) {\n    var dataKeyedColumns = data;\n    if (!dimName) {\n      return BE_ORDINAL.Not;\n    }\n    var sample = dataKeyedColumns[dimName];\n    if (!sample || isTypedArray(sample)) {\n      return BE_ORDINAL.Not;\n    }\n    for (var i = 0; i < sample.length && i < maxLoop; i++) {\n      if ((result = detectValue(sample[i])) != null) {\n        return result;\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    var dataOriginal = data;\n    for (var i = 0; i < dataOriginal.length && i < maxLoop; i++) {\n      var item = dataOriginal[i];\n      var val = getDataItemValue(item);\n      if (!isArray(val)) {\n        return BE_ORDINAL.Not;\n      }\n      if ((result = detectValue(val[dimIndex])) != null) {\n        return result;\n      }\n    }\n  }\n  function detectValue(val) {\n    var beStr = isString(val); // Consider usage convenience, '1', '2' will be treated as \"number\".\n    // `isFinit('')` get `true`.\n\n    if (val != null && isFinite(val) && val !== '') {\n      return beStr ? BE_ORDINAL.Might : BE_ORDINAL.Not;\n    } else if (beStr && val !== '-') {\n      return BE_ORDINAL.Must;\n    }\n  }\n  return BE_ORDINAL.Not;\n}","import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.error.cause.js\";\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { setAsPrimitive, map, isTypedArray, assert, each, retrieve2 } from 'zrender/lib/core/util.js';\nimport { createSource, cloneSourceShallow } from '../Source.js';\nimport { SOURCE_FORMAT_TYPED_ARRAY, SOURCE_FORMAT_ORIGINAL } from '../../util/types.js';\nimport { querySeriesUpstreamDatasetModel, queryDatasetUpstreamDatasetModels } from './sourceHelper.js';\nimport { applyDataTransform } from './transform.js';\nimport DataStore from '../DataStore.js';\nimport { DefaultDataProvider } from './dataProvider.js';\n/**\n * [REQUIREMENT_MEMO]:\n * (0) `metaRawOption` means `dimensions`/`sourceHeader`/`seriesLayoutBy` in raw option.\n * (1) Keep support the feature: `metaRawOption` can be specified both on `series` and\n * `root-dataset`. Them on `series` has higher priority.\n * (2) Do not support to set `metaRawOption` on a `non-root-dataset`, because it might\n * confuse users: whether those props indicate how to visit the upstream source or visit\n * the transform result source, and some transforms has nothing to do with these props,\n * and some transforms might have multiple upstream.\n * (3) Transforms should specify `metaRawOption` in each output, just like they can be\n * declared in `root-dataset`.\n * (4) At present only support visit source in `SERIES_LAYOUT_BY_COLUMN` in transforms.\n * That is for reducing complexity in transforms.\n * PENDING: Whether to provide transposition transform?\n *\n * [IMPLEMENTAION_MEMO]:\n * \"sourceVisitConfig\" are calculated from `metaRawOption` and `data`.\n * They will not be calculated until `source` is about to be visited (to prevent from\n * duplicate calcuation). `source` is visited only in series and input to transforms.\n *\n * [DIMENSION_INHERIT_RULE]:\n * By default the dimensions are inherited from ancestors, unless a transform return\n * a new dimensions definition.\n * Consider the case:\n * ```js\n * dataset: [{\n *     source: [ ['Product', 'Sales', 'Prise'], ['Cookies', 321, 44.21], ...]\n * }, {\n *     transform: { type: 'filter', ... }\n * }]\n * dataset: [{\n *     dimension: ['Product', 'Sales', 'Prise'],\n *     source: [ ['Cookies', 321, 44.21], ...]\n * }, {\n *     transform: { type: 'filter', ... }\n * }]\n * ```\n * The two types of option should have the same behavior after transform.\n *\n *\n * [SCENARIO]:\n * (1) Provide source data directly:\n * ```js\n * series: {\n *     encode: {...},\n *     dimensions: [...]\n *     seriesLayoutBy: 'row',\n *     data: [[...]]\n * }\n * ```\n * (2) Series refer to dataset.\n * ```js\n * series: [{\n *     encode: {...}\n *     // Ignore datasetIndex means `datasetIndex: 0`\n *     // and the dimensions defination in dataset is used\n * }, {\n *     encode: {...},\n *     seriesLayoutBy: 'column',\n *     datasetIndex: 1\n * }]\n * ```\n * (3) dataset transform\n * ```js\n * dataset: [{\n *     source: [...]\n * }, {\n *     source: [...]\n * }, {\n *     // By default from 0.\n *     transform: { type: 'filter', config: {...} }\n * }, {\n *     // Piped.\n *     transform: [\n *         { type: 'filter', config: {...} },\n *         { type: 'sort', config: {...} }\n *     ]\n * }, {\n *     id: 'regressionData',\n *     fromDatasetIndex: 1,\n *     // Third-party transform\n *     transform: { type: 'ecStat:regression', config: {...} }\n * }, {\n *     // retrieve the extra result.\n *     id: 'regressionFormula',\n *     fromDatasetId: 'regressionData',\n *     fromTransformResult: 1\n * }]\n * ```\n */\n\nvar SourceManager = /** @class */\nfunction () {\n  function SourceManager(sourceHost) {\n    // Cached source. Do not repeat calculating if not dirty.\n    this._sourceList = [];\n    this._storeList = []; // version sign of each upstream source manager.\n\n    this._upstreamSignList = [];\n    this._versionSignBase = 0;\n    this._dirty = true;\n    this._sourceHost = sourceHost;\n  }\n  /**\n   * Mark dirty.\n   */\n\n  SourceManager.prototype.dirty = function () {\n    this._setLocalSource([], []);\n    this._storeList = [];\n    this._dirty = true;\n  };\n  SourceManager.prototype._setLocalSource = function (sourceList, upstreamSignList) {\n    this._sourceList = sourceList;\n    this._upstreamSignList = upstreamSignList;\n    this._versionSignBase++;\n    if (this._versionSignBase > 9e10) {\n      this._versionSignBase = 0;\n    }\n  };\n  /**\n   * For detecting whether the upstream source is dirty, so that\n   * the local cached source (in `_sourceList`) should be discarded.\n   */\n\n  SourceManager.prototype._getVersionSign = function () {\n    return this._sourceHost.uid + '_' + this._versionSignBase;\n  };\n  /**\n   * Always return a source instance. Otherwise throw error.\n   */\n\n  SourceManager.prototype.prepareSource = function () {\n    // For the case that call `setOption` multiple time but no data changed,\n    // cache the result source to prevent from repeating transform.\n    if (this._isDirty()) {\n      this._createSource();\n      this._dirty = false;\n    }\n  };\n  SourceManager.prototype._createSource = function () {\n    this._setLocalSource([], []);\n    var sourceHost = this._sourceHost;\n    var upSourceMgrList = this._getUpstreamSourceManagers();\n    var hasUpstream = !!upSourceMgrList.length;\n    var resultSourceList;\n    var upstreamSignList;\n    if (isSeries(sourceHost)) {\n      var seriesModel = sourceHost;\n      var data = void 0;\n      var sourceFormat = void 0;\n      var upSource = void 0; // Has upstream dataset\n\n      if (hasUpstream) {\n        var upSourceMgr = upSourceMgrList[0];\n        upSourceMgr.prepareSource();\n        upSource = upSourceMgr.getSource();\n        data = upSource.data;\n        sourceFormat = upSource.sourceFormat;\n        upstreamSignList = [upSourceMgr._getVersionSign()];\n      } // Series data is from own.\n      else {\n        data = seriesModel.get('data', true);\n        sourceFormat = isTypedArray(data) ? SOURCE_FORMAT_TYPED_ARRAY : SOURCE_FORMAT_ORIGINAL;\n        upstreamSignList = [];\n      } // See [REQUIREMENT_MEMO], merge settings on series and parent dataset if it is root.\n\n      var newMetaRawOption = this._getSourceMetaRawOption() || {};\n      var upMetaRawOption = upSource && upSource.metaRawOption || {};\n      var seriesLayoutBy = retrieve2(newMetaRawOption.seriesLayoutBy, upMetaRawOption.seriesLayoutBy) || null;\n      var sourceHeader = retrieve2(newMetaRawOption.sourceHeader, upMetaRawOption.sourceHeader); // Note here we should not use `upSource.dimensionsDefine`. Consider the case:\n      // `upSource.dimensionsDefine` is detected by `seriesLayoutBy: 'column'`,\n      // but series need `seriesLayoutBy: 'row'`.\n\n      var dimensions = retrieve2(newMetaRawOption.dimensions, upMetaRawOption.dimensions); // We share source with dataset as much as possible\n      // to avoid extra memory cost of high dimensional data.\n\n      var needsCreateSource = seriesLayoutBy !== upMetaRawOption.seriesLayoutBy || !!sourceHeader !== !!upMetaRawOption.sourceHeader || dimensions;\n      resultSourceList = needsCreateSource ? [createSource(data, {\n        seriesLayoutBy: seriesLayoutBy,\n        sourceHeader: sourceHeader,\n        dimensions: dimensions\n      }, sourceFormat)] : [];\n    } else {\n      var datasetModel = sourceHost; // Has upstream dataset.\n\n      if (hasUpstream) {\n        var result = this._applyTransform(upSourceMgrList);\n        resultSourceList = result.sourceList;\n        upstreamSignList = result.upstreamSignList;\n      } // Is root dataset.\n      else {\n        var sourceData = datasetModel.get('source', true);\n        resultSourceList = [createSource(sourceData, this._getSourceMetaRawOption(), null)];\n        upstreamSignList = [];\n      }\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      assert(resultSourceList && upstreamSignList);\n    }\n    this._setLocalSource(resultSourceList, upstreamSignList);\n  };\n  SourceManager.prototype._applyTransform = function (upMgrList) {\n    var datasetModel = this._sourceHost;\n    var transformOption = datasetModel.get('transform', true);\n    var fromTransformResult = datasetModel.get('fromTransformResult', true);\n    if (process.env.NODE_ENV !== 'production') {\n      assert(fromTransformResult != null || transformOption != null);\n    }\n    if (fromTransformResult != null) {\n      var errMsg = '';\n      if (upMgrList.length !== 1) {\n        if (process.env.NODE_ENV !== 'production') {\n          errMsg = 'When using `fromTransformResult`, there should be only one upstream dataset';\n        }\n        doThrow(errMsg);\n      }\n    }\n    var sourceList;\n    var upSourceList = [];\n    var upstreamSignList = [];\n    each(upMgrList, function (upMgr) {\n      upMgr.prepareSource();\n      var upSource = upMgr.getSource(fromTransformResult || 0);\n      var errMsg = '';\n      if (fromTransformResult != null && !upSource) {\n        if (process.env.NODE_ENV !== 'production') {\n          errMsg = 'Can not retrieve result by `fromTransformResult`: ' + fromTransformResult;\n        }\n        doThrow(errMsg);\n      }\n      upSourceList.push(upSource);\n      upstreamSignList.push(upMgr._getVersionSign());\n    });\n    if (transformOption) {\n      sourceList = applyDataTransform(transformOption, upSourceList, {\n        datasetIndex: datasetModel.componentIndex\n      });\n    } else if (fromTransformResult != null) {\n      sourceList = [cloneSourceShallow(upSourceList[0])];\n    }\n    return {\n      sourceList: sourceList,\n      upstreamSignList: upstreamSignList\n    };\n  };\n  SourceManager.prototype._isDirty = function () {\n    if (this._dirty) {\n      return true;\n    } // All sourceList is from the some upstream.\n\n    var upSourceMgrList = this._getUpstreamSourceManagers();\n    for (var i = 0; i < upSourceMgrList.length; i++) {\n      var upSrcMgr = upSourceMgrList[i];\n      if (\n      // Consider the case that there is ancestor diry, call it recursively.\n      // The performance is probably not an issue because usually the chain is not long.\n      upSrcMgr._isDirty() || this._upstreamSignList[i] !== upSrcMgr._getVersionSign()) {\n        return true;\n      }\n    }\n  };\n  /**\n   * @param sourceIndex By default 0, means \"main source\".\n   *                    In most cases there is only one source.\n   */\n\n  SourceManager.prototype.getSource = function (sourceIndex) {\n    sourceIndex = sourceIndex || 0;\n    var source = this._sourceList[sourceIndex];\n    if (!source) {\n      // Series may share source instance with dataset.\n      var upSourceMgrList = this._getUpstreamSourceManagers();\n      return upSourceMgrList[0] && upSourceMgrList[0].getSource(sourceIndex);\n    }\n    return source;\n  };\n  /**\n   *\n   * Get a data store which can be shared across series.\n   * Only available for series.\n   *\n   * @param seriesDimRequest Dimensions that are generated in series.\n   *        Should have been sorted by `storeDimIndex` asc.\n   */\n\n  SourceManager.prototype.getSharedDataStore = function (seriesDimRequest) {\n    if (process.env.NODE_ENV !== 'production') {\n      assert(isSeries(this._sourceHost), 'Can only call getDataStore on series source manager.');\n    }\n    var schema = seriesDimRequest.makeStoreSchema();\n    return this._innerGetDataStore(schema.dimensions, seriesDimRequest.source, schema.hash);\n  };\n  SourceManager.prototype._innerGetDataStore = function (storeDims, seriesSource, sourceReadKey) {\n    // TODO Can use other sourceIndex?\n    var sourceIndex = 0;\n    var storeList = this._storeList;\n    var cachedStoreMap = storeList[sourceIndex];\n    if (!cachedStoreMap) {\n      cachedStoreMap = storeList[sourceIndex] = {};\n    }\n    var cachedStore = cachedStoreMap[sourceReadKey];\n    if (!cachedStore) {\n      var upSourceMgr = this._getUpstreamSourceManagers()[0];\n      if (isSeries(this._sourceHost) && upSourceMgr) {\n        cachedStore = upSourceMgr._innerGetDataStore(storeDims, seriesSource, sourceReadKey);\n      } else {\n        cachedStore = new DataStore(); // Always create store from source of series.\n\n        cachedStore.initData(new DefaultDataProvider(seriesSource, storeDims.length), storeDims);\n      }\n      cachedStoreMap[sourceReadKey] = cachedStore;\n    }\n    return cachedStore;\n  };\n  /**\n   * PENDING: Is it fast enough?\n   * If no upstream, return empty array.\n   */\n\n  SourceManager.prototype._getUpstreamSourceManagers = function () {\n    // Always get the relationship from the raw option.\n    // Do not cache the link of the dependency graph, so that\n    // there is no need to update them when change happens.\n    var sourceHost = this._sourceHost;\n    if (isSeries(sourceHost)) {\n      var datasetModel = querySeriesUpstreamDatasetModel(sourceHost);\n      return !datasetModel ? [] : [datasetModel.getSourceManager()];\n    } else {\n      return map(queryDatasetUpstreamDatasetModels(sourceHost), function (datasetModel) {\n        return datasetModel.getSourceManager();\n      });\n    }\n  };\n  SourceManager.prototype._getSourceMetaRawOption = function () {\n    var sourceHost = this._sourceHost;\n    var seriesLayoutBy;\n    var sourceHeader;\n    var dimensions;\n    if (isSeries(sourceHost)) {\n      seriesLayoutBy = sourceHost.get('seriesLayoutBy', true);\n      sourceHeader = sourceHost.get('sourceHeader', true);\n      dimensions = sourceHost.get('dimensions', true);\n    } // See [REQUIREMENT_MEMO], `non-root-dataset` do not support them.\n    else if (!this._getUpstreamSourceManagers().length) {\n      var model = sourceHost;\n      seriesLayoutBy = model.get('seriesLayoutBy', true);\n      sourceHeader = model.get('sourceHeader', true);\n      dimensions = model.get('dimensions', true);\n    }\n    return {\n      seriesLayoutBy: seriesLayoutBy,\n      sourceHeader: sourceHeader,\n      dimensions: dimensions\n    };\n  };\n  return SourceManager;\n}();\nexport { SourceManager }; // Call this method after `super.init` and `super.mergeOption` to\n// disable the transform merge, but do not disable transform clone from rawOption.\n\nexport function disableTransformOptionMerge(datasetModel) {\n  var transformOption = datasetModel.option.transform;\n  transformOption && setAsPrimitive(datasetModel.option.transform);\n}\nfunction isSeries(sourceHost) {\n  // Avoid circular dependency with Series.ts\n  return sourceHost.mainType === 'series';\n}\nfunction doThrow(errMsg) {\n  throw new Error(errMsg);\n}","import _typeof from \"D:/\\u9879\\u76EE\\u5730\\u5740/\\u770B\\u677F\\u9879\\u76EE/top-board/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.concat.js\";\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { SERIES_LAYOUT_BY_COLUMN, SOURCE_FORMAT_OBJECT_ROWS, SOURCE_FORMAT_ARRAY_ROWS } from '../../util/types.js';\nimport { normalizeToArray } from '../../util/model.js';\nimport { createHashMap, bind, each, hasOwn, map, clone, isObject, extend, isNumber } from 'zrender/lib/core/util.js';\nimport { getRawSourceItemGetter, getRawSourceDataCounter, getRawSourceValueGetter } from './dataProvider.js';\nimport { parseDataValue } from './dataValueHelper.js';\nimport { log, makePrintable, throwError } from '../../util/log.js';\nimport { createSource, detectSourceFormat } from '../Source.js';\n/**\n * TODO: disable writable.\n * This structure will be exposed to users.\n */\n\nvar ExternalSource = /** @class */\nfunction () {\n  function ExternalSource() {}\n  ExternalSource.prototype.getRawData = function () {\n    // Only built-in transform available.\n    throw new Error('not supported');\n  };\n  ExternalSource.prototype.getRawDataItem = function (dataIndex) {\n    // Only built-in transform available.\n    throw new Error('not supported');\n  };\n  ExternalSource.prototype.cloneRawData = function () {\n    return;\n  };\n  /**\n   * @return If dimension not found, return null/undefined.\n   */\n\n  ExternalSource.prototype.getDimensionInfo = function (dim) {\n    return;\n  };\n  /**\n   * dimensions defined if and only if either:\n   * (a) dataset.dimensions are declared.\n   * (b) dataset data include dimensions definitions in data (detected or via specified `sourceHeader`).\n   * If dimensions are defined, `dimensionInfoAll` is corresponding to\n   * the defined dimensions.\n   * Otherwise, `dimensionInfoAll` is determined by data columns.\n   * @return Always return an array (even empty array).\n   */\n\n  ExternalSource.prototype.cloneAllDimensionInfo = function () {\n    return;\n  };\n  ExternalSource.prototype.count = function () {\n    return;\n  };\n  /**\n   * Only support by dimension index.\n   * No need to support by dimension name in transform function,\n   * because transform function is not case-specific, no need to use name literally.\n   */\n\n  ExternalSource.prototype.retrieveValue = function (dataIndex, dimIndex) {\n    return;\n  };\n  ExternalSource.prototype.retrieveValueFromItem = function (dataItem, dimIndex) {\n    return;\n  };\n  ExternalSource.prototype.convertValue = function (rawVal, dimInfo) {\n    return parseDataValue(rawVal, dimInfo);\n  };\n  return ExternalSource;\n}();\nexport { ExternalSource };\nfunction createExternalSource(internalSource, externalTransform) {\n  var extSource = new ExternalSource();\n  var data = internalSource.data;\n  var sourceFormat = extSource.sourceFormat = internalSource.sourceFormat;\n  var sourceHeaderCount = internalSource.startIndex;\n  var errMsg = '';\n  if (internalSource.seriesLayoutBy !== SERIES_LAYOUT_BY_COLUMN) {\n    // For the logic simplicity in transformer, only 'culumn' is\n    // supported in data transform. Otherwise, the `dimensionsDefine`\n    // might be detected by 'row', which probably confuses users.\n    if (process.env.NODE_ENV !== 'production') {\n      errMsg = '`seriesLayoutBy` of upstream dataset can only be \"column\" in data transform.';\n    }\n    throwError(errMsg);\n  } // [MEMO]\n  // Create a new dimensions structure for exposing.\n  // Do not expose all dimension info to users directly.\n  // Because the dimension is probably auto detected from data and not might reliable.\n  // Should not lead the transformers to think that is reliable and return it.\n  // See [DIMENSION_INHERIT_RULE] in `sourceManager.ts`.\n\n  var dimensions = [];\n  var dimsByName = {};\n  var dimsDef = internalSource.dimensionsDefine;\n  if (dimsDef) {\n    each(dimsDef, function (dimDef, idx) {\n      var name = dimDef.name;\n      var dimDefExt = {\n        index: idx,\n        name: name,\n        displayName: dimDef.displayName\n      };\n      dimensions.push(dimDefExt); // Users probably do not specify dimension name. For simplicity, data transform\n      // does not generate dimension name.\n\n      if (name != null) {\n        // Dimension name should not be duplicated.\n        // For simplicity, data transform forbids name duplication, do not generate\n        // new name like module `completeDimensions.ts` did, but just tell users.\n        var errMsg_1 = '';\n        if (hasOwn(dimsByName, name)) {\n          if (process.env.NODE_ENV !== 'production') {\n            errMsg_1 = 'dimension name \"' + name + '\" duplicated.';\n          }\n          throwError(errMsg_1);\n        }\n        dimsByName[name] = dimDefExt;\n      }\n    });\n  } // If dimension definitions are not defined and can not be detected.\n  // e.g., pure data `[[11, 22], ...]`.\n  else {\n    for (var i = 0; i < internalSource.dimensionsDetectedCount || 0; i++) {\n      // Do not generete name or anything others. The consequence process in\n      // `transform` or `series` probably have there own name generation strategry.\n      dimensions.push({\n        index: i\n      });\n    }\n  } // Implement public methods:\n\n  var rawItemGetter = getRawSourceItemGetter(sourceFormat, SERIES_LAYOUT_BY_COLUMN);\n  if (externalTransform.__isBuiltIn) {\n    extSource.getRawDataItem = function (dataIndex) {\n      return rawItemGetter(data, sourceHeaderCount, dimensions, dataIndex);\n    };\n    extSource.getRawData = bind(getRawData, null, internalSource);\n  }\n  extSource.cloneRawData = bind(cloneRawData, null, internalSource);\n  var rawCounter = getRawSourceDataCounter(sourceFormat, SERIES_LAYOUT_BY_COLUMN);\n  extSource.count = bind(rawCounter, null, data, sourceHeaderCount, dimensions);\n  var rawValueGetter = getRawSourceValueGetter(sourceFormat);\n  extSource.retrieveValue = function (dataIndex, dimIndex) {\n    var rawItem = rawItemGetter(data, sourceHeaderCount, dimensions, dataIndex);\n    return retrieveValueFromItem(rawItem, dimIndex);\n  };\n  var retrieveValueFromItem = extSource.retrieveValueFromItem = function (dataItem, dimIndex) {\n    if (dataItem == null) {\n      return;\n    }\n    var dimDef = dimensions[dimIndex]; // When `dimIndex` is `null`, `rawValueGetter` return the whole item.\n\n    if (dimDef) {\n      return rawValueGetter(dataItem, dimIndex, dimDef.name);\n    }\n  };\n  extSource.getDimensionInfo = bind(getDimensionInfo, null, dimensions, dimsByName);\n  extSource.cloneAllDimensionInfo = bind(cloneAllDimensionInfo, null, dimensions);\n  return extSource;\n}\nfunction getRawData(upstream) {\n  var sourceFormat = upstream.sourceFormat;\n  if (!isSupportedSourceFormat(sourceFormat)) {\n    var errMsg = '';\n    if (process.env.NODE_ENV !== 'production') {\n      errMsg = '`getRawData` is not supported in source format ' + sourceFormat;\n    }\n    throwError(errMsg);\n  }\n  return upstream.data;\n}\nfunction cloneRawData(upstream) {\n  var sourceFormat = upstream.sourceFormat;\n  var data = upstream.data;\n  if (!isSupportedSourceFormat(sourceFormat)) {\n    var errMsg = '';\n    if (process.env.NODE_ENV !== 'production') {\n      errMsg = '`cloneRawData` is not supported in source format ' + sourceFormat;\n    }\n    throwError(errMsg);\n  }\n  if (sourceFormat === SOURCE_FORMAT_ARRAY_ROWS) {\n    var result = [];\n    for (var i = 0, len = data.length; i < len; i++) {\n      // Not strictly clone for performance\n      result.push(data[i].slice());\n    }\n    return result;\n  } else if (sourceFormat === SOURCE_FORMAT_OBJECT_ROWS) {\n    var result = [];\n    for (var i = 0, len = data.length; i < len; i++) {\n      // Not strictly clone for performance\n      result.push(extend({}, data[i]));\n    }\n    return result;\n  }\n}\nfunction getDimensionInfo(dimensions, dimsByName, dim) {\n  if (dim == null) {\n    return;\n  } // Keep the same logic as `List::getDimension` did.\n\n  if (isNumber(dim) // If being a number-like string but not being defined a dimension name.\n  || !isNaN(dim) && !hasOwn(dimsByName, dim)) {\n    return dimensions[dim];\n  } else if (hasOwn(dimsByName, dim)) {\n    return dimsByName[dim];\n  }\n}\nfunction cloneAllDimensionInfo(dimensions) {\n  return clone(dimensions);\n}\nvar externalTransformMap = createHashMap();\nexport function registerExternalTransform(externalTransform) {\n  externalTransform = clone(externalTransform);\n  var type = externalTransform.type;\n  var errMsg = '';\n  if (!type) {\n    if (process.env.NODE_ENV !== 'production') {\n      errMsg = 'Must have a `type` when `registerTransform`.';\n    }\n    throwError(errMsg);\n  }\n  var typeParsed = type.split(':');\n  if (typeParsed.length !== 2) {\n    if (process.env.NODE_ENV !== 'production') {\n      errMsg = 'Name must include namespace like \"ns:regression\".';\n    }\n    throwError(errMsg);\n  } // Namespace 'echarts:xxx' is official namespace, where the transforms should\n  // be called directly via 'xxx' rather than 'echarts:xxx'.\n\n  var isBuiltIn = false;\n  if (typeParsed[0] === 'echarts') {\n    type = typeParsed[1];\n    isBuiltIn = true;\n  }\n  externalTransform.__isBuiltIn = isBuiltIn;\n  externalTransformMap.set(type, externalTransform);\n}\nexport function applyDataTransform(rawTransOption, sourceList, infoForPrint) {\n  var pipedTransOption = normalizeToArray(rawTransOption);\n  var pipeLen = pipedTransOption.length;\n  var errMsg = '';\n  if (!pipeLen) {\n    if (process.env.NODE_ENV !== 'production') {\n      errMsg = 'If `transform` declared, it should at least contain one transform.';\n    }\n    throwError(errMsg);\n  }\n  for (var i = 0, len = pipeLen; i < len; i++) {\n    var transOption = pipedTransOption[i];\n    sourceList = applySingleDataTransform(transOption, sourceList, infoForPrint, pipeLen === 1 ? null : i); // piped transform only support single input, except the fist one.\n    // piped transform only support single output, except the last one.\n\n    if (i !== len - 1) {\n      sourceList.length = Math.max(sourceList.length, 1);\n    }\n  }\n  return sourceList;\n}\nfunction applySingleDataTransform(transOption, upSourceList, infoForPrint,\n// If `pipeIndex` is null/undefined, no piped transform.\npipeIndex) {\n  var errMsg = '';\n  if (!upSourceList.length) {\n    if (process.env.NODE_ENV !== 'production') {\n      errMsg = 'Must have at least one upstream dataset.';\n    }\n    throwError(errMsg);\n  }\n  if (!isObject(transOption)) {\n    if (process.env.NODE_ENV !== 'production') {\n      errMsg = 'transform declaration must be an object rather than ' + _typeof(transOption) + '.';\n    }\n    throwError(errMsg);\n  }\n  var transType = transOption.type;\n  var externalTransform = externalTransformMap.get(transType);\n  if (!externalTransform) {\n    if (process.env.NODE_ENV !== 'production') {\n      errMsg = 'Can not find transform on type \"' + transType + '\".';\n    }\n    throwError(errMsg);\n  } // Prepare source\n\n  var extUpSourceList = map(upSourceList, function (upSource) {\n    return createExternalSource(upSource, externalTransform);\n  });\n  var resultList = normalizeToArray(externalTransform.transform({\n    upstream: extUpSourceList[0],\n    upstreamList: extUpSourceList,\n    config: clone(transOption.config)\n  }));\n  if (process.env.NODE_ENV !== 'production') {\n    if (transOption.print) {\n      var printStrArr = map(resultList, function (extSource) {\n        var pipeIndexStr = pipeIndex != null ? ' === pipe index: ' + pipeIndex : '';\n        return ['=== dataset index: ' + infoForPrint.datasetIndex + pipeIndexStr + ' ===', '- transform result data:', makePrintable(extSource.data), '- transform result dimensions:', makePrintable(extSource.dimensions)].join('\\n');\n      }).join('\\n');\n      log(printStrArr);\n    }\n  }\n  return map(resultList, function (result, resultIndex) {\n    var errMsg = '';\n    if (!isObject(result)) {\n      if (process.env.NODE_ENV !== 'production') {\n        errMsg = 'A transform should not return some empty results.';\n      }\n      throwError(errMsg);\n    }\n    if (!result.data) {\n      if (process.env.NODE_ENV !== 'production') {\n        errMsg = 'Transform result data should be not be null or undefined';\n      }\n      throwError(errMsg);\n    }\n    var sourceFormat = detectSourceFormat(result.data);\n    if (!isSupportedSourceFormat(sourceFormat)) {\n      if (process.env.NODE_ENV !== 'production') {\n        errMsg = 'Transform result data should be array rows or object rows.';\n      }\n      throwError(errMsg);\n    }\n    var resultMetaRawOption;\n    var firstUpSource = upSourceList[0];\n    /**\n     * Intuitively, the end users known the content of the original `dataset.source`,\n     * calucating the transform result in mind.\n     * Suppose the original `dataset.source` is:\n     * ```js\n     * [\n     *     ['product', '2012', '2013', '2014', '2015'],\n     *     ['AAA', 41.1, 30.4, 65.1, 53.3],\n     *     ['BBB', 86.5, 92.1, 85.7, 83.1],\n     *     ['CCC', 24.1, 67.2, 79.5, 86.4]\n     * ]\n     * ```\n     * The dimension info have to be detected from the source data.\n     * Some of the transformers (like filter, sort) will follow the dimension info\n     * of upstream, while others use new dimensions (like aggregate).\n     * Transformer can output a field `dimensions` to define the its own output dimensions.\n     * We also allow transformers to ignore the output `dimensions` field, and\n     * inherit the upstream dimensions definition. It can reduce the burden of handling\n     * dimensions in transformers.\n     *\n     * See also [DIMENSION_INHERIT_RULE] in `sourceManager.ts`.\n     */\n\n    if (firstUpSource && resultIndex === 0 // If transformer returns `dimensions`, it means that the transformer has different\n    // dimensions definitions. We do not inherit anything from upstream.\n    && !result.dimensions) {\n      var startIndex = firstUpSource.startIndex; // We copy the header of upstream to the result, because:\n      // (1) The returned data always does not contain header line and can not be used\n      // as dimension-detection. In this case we can not use \"detected dimensions\" of\n      // upstream directly, because it might be detected based on different `seriesLayoutBy`.\n      // (2) We should support that the series read the upstream source in `seriesLayoutBy: 'row'`.\n      // So the original detected header should be add to the result, otherwise they can not be read.\n\n      if (startIndex) {\n        result.data = firstUpSource.data.slice(0, startIndex).concat(result.data);\n      }\n      resultMetaRawOption = {\n        seriesLayoutBy: SERIES_LAYOUT_BY_COLUMN,\n        sourceHeader: startIndex,\n        dimensions: firstUpSource.metaRawOption.dimensions\n      };\n    } else {\n      resultMetaRawOption = {\n        seriesLayoutBy: SERIES_LAYOUT_BY_COLUMN,\n        sourceHeader: 0,\n        dimensions: result.dimensions\n      };\n    }\n    return createSource(result.data, resultMetaRawOption, null);\n  });\n}\nfunction isSupportedSourceFormat(sourceFormat) {\n  return sourceFormat === SOURCE_FORMAT_ARRAY_ROWS || sourceFormat === SOURCE_FORMAT_OBJECT_ROWS;\n}","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * This module exposes helper functions for developing extensions.\n */\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport createSeriesData from '../../chart/helper/createSeriesData.js'; // import createGraphFromNodeEdge from './chart/helper/createGraphFromNodeEdge.js';\n\nimport * as axisHelper from '../../coord/axisHelper.js';\nimport { AxisModelCommonMixin } from '../../coord/axisModelCommonMixin.js';\nimport Model from '../../model/Model.js';\nimport { getLayoutRect } from '../../util/layout.js';\nimport { enableDataStack, isDimensionStacked, getStackedDimension } from '../../data/helper/dataStackHelper.js';\nimport { getECData } from '../../util/innerStore.js';\nimport { createTextStyle as innerCreateTextStyle } from '../../label/labelStyle.js';\n/**\n * Create a multi dimension List structure from seriesModel.\n */\n\nexport function createList(seriesModel) {\n  return createSeriesData(null, seriesModel);\n} // export function createGraph(seriesModel) {\n//     let nodes = seriesModel.get('data');\n//     let links = seriesModel.get('links');\n//     return createGraphFromNodeEdge(nodes, links, seriesModel);\n// }\n\nexport { getLayoutRect };\nexport { createDimensions } from '../../data/helper/createDimensions.js';\nexport var dataStack = {\n  isDimensionStacked: isDimensionStacked,\n  enableDataStack: enableDataStack,\n  getStackedDimension: getStackedDimension\n};\n/**\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n * @param {string} symbolDesc\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {string} color\n */\n\nexport { createSymbol } from '../../util/symbol.js';\n/**\n * Create scale\n * @param {Array.<number>} dataExtent\n * @param {Object|module:echarts/Model} option If `optoin.type`\n *        is secified, it can only be `'value'` currently.\n */\n\nexport function createScale(dataExtent, option) {\n  var axisModel = option;\n  if (!(option instanceof Model)) {\n    axisModel = new Model(option); // FIXME\n    // Currently AxisModelCommonMixin has nothing to do with the\n    // the requirements of `axisHelper.createScaleByModel`. For\n    // example the methods `getCategories` and `getOrdinalMeta`\n    // are required for `'category'` axis, and ecModel is required\n    // for `'time'` axis. But occasionally echarts-gl happened\n    // to only use `'value'` axis.\n    // zrUtil.mixin(axisModel, AxisModelCommonMixin);\n  }\n\n  var scale = axisHelper.createScaleByModel(axisModel);\n  scale.setExtent(dataExtent[0], dataExtent[1]);\n  axisHelper.niceScaleExtent(scale, axisModel);\n  return scale;\n}\n/**\n * Mixin common methods to axis model,\n *\n * Include methods\n * `getFormattedLabels() => Array.<string>`\n * `getCategories() => Array.<string>`\n * `getMin(origin: boolean) => number`\n * `getMax(origin: boolean) => number`\n * `getNeedCrossZero() => boolean`\n */\n\nexport function mixinAxisModelCommonMethods(Model) {\n  zrUtil.mixin(Model, AxisModelCommonMixin);\n}\nexport { getECData };\nexport { enableHoverEmphasis } from '../../util/states.js';\nexport function createTextStyle(textStyleModel, opts) {\n  opts = opts || {};\n  return innerCreateTextStyle(textStyleModel, null, null, opts.state !== 'normal');\n}","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// These APIs are for more advanced usages\n// For example extend charts and components, creating graphic elements, formatting.\nimport ComponentModel from '../model/Component.js';\nimport ComponentView from '../view/Component.js';\nimport SeriesModel from '../model/Series.js';\nimport ChartView from '../view/Chart.js';\nimport SeriesData from '../data/SeriesData.js';\nimport * as zrender_1 from 'zrender/lib/zrender.js';\nexport { zrender_1 as zrender };\nimport * as matrix_1 from 'zrender/lib/core/matrix.js';\nexport { matrix_1 as matrix };\nimport * as vector_1 from 'zrender/lib/core/vector.js';\nexport { vector_1 as vector };\nimport * as zrUtil_1 from 'zrender/lib/core/util.js';\nexport { zrUtil_1 as zrUtil };\nimport * as color_1 from 'zrender/lib/tool/color.js';\nexport { color_1 as color };\nexport { throttle } from '../util/throttle.js';\nimport * as helper_1 from './api/helper.js';\nexport { helper_1 as helper };\nexport { use } from '../extension.js';\nexport { setPlatformAPI } from 'zrender/lib/core/platform.js'; // --------------------- Helper Methods ---------------------\n\nexport { default as parseGeoJSON } from '../coord/geo/parseGeoJson.js';\nexport { default as parseGeoJson } from '../coord/geo/parseGeoJson.js';\nimport * as number_1 from './api/number.js';\nexport { number_1 as number };\nimport * as time_1 from './api/time.js';\nexport { time_1 as time };\nimport * as graphic_1 from './api/graphic.js';\nexport { graphic_1 as graphic };\nimport * as format_1 from './api/format.js';\nexport { format_1 as format };\nimport * as util_1 from './api/util.js';\nexport { util_1 as util };\nexport { default as env } from 'zrender/lib/core/env.js'; // --------------------- Export for Extension Usage ---------------------\n// export {SeriesData};\n\nexport { SeriesData as List }; // TODO: Compatitable with exists echarts-gl code\n\nexport { default as Model } from '../model/Model.js';\nexport { default as Axis } from '../coord/Axis.js';\nexport { ComponentModel, ComponentView, SeriesModel, ChartView }; // Only for GL\n\nexport { brushSingle as innerDrawElementOnCanvas } from 'zrender/lib/canvas/graphic.js'; // --------------------- Deprecated Extension Methods ---------------------\n// Should use `ComponentModel.extend` or `class XXXX extend ComponentModel` to create class.\n// Then use `registerComponentModel` in `install` parameter when `use` this extension. For example:\n// class Bar3DModel extends ComponentModel {}\n// export function install(registers) { registers.registerComponentModel(Bar3DModel); }\n// echarts.use(install);\n\nexport function extendComponentModel(proto) {\n  var Model = ComponentModel.extend(proto);\n  ComponentModel.registerClass(Model);\n  return Model;\n}\nexport function extendComponentView(proto) {\n  var View = ComponentView.extend(proto);\n  ComponentView.registerClass(View);\n  return View;\n}\nexport function extendSeriesModel(proto) {\n  var Model = SeriesModel.extend(proto);\n  SeriesModel.registerClass(Model);\n  return Model;\n}\nexport function extendChartView(proto) {\n  var View = ChartView.extend(proto);\n  ChartView.registerClass(View);\n  return View;\n}","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Core API from echarts/src/echarts\nexport * from '../core/echarts.js';\nexport * from './api.js';\nimport { use } from '../extension.js'; // Import label layout by default.\n// TODO will be treeshaked.\n\nimport { installLabelLayout } from '../label/installLabelLayout.js';\nuse(installLabelLayout);","import \"core-js/modules/es.array.push.js\";\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { registerPreprocessor, registerProcessor, registerPostInit, registerPostUpdate, registerAction, registerCoordinateSystem, registerLayout, registerVisual, registerTransform, registerLoading, registerMap, registerUpdateLifecycle, PRIORITY } from './core/echarts.js';\nimport ComponentView from './view/Component.js';\nimport ChartView from './view/Chart.js';\nimport ComponentModel from './model/Component.js';\nimport SeriesModel from './model/Series.js';\nimport { isFunction, indexOf, isArray, each } from 'zrender/lib/core/util.js';\nimport { registerImpl } from './core/impl.js';\nimport { registerPainter as _registerPainter } from 'zrender/lib/zrender.js';\nvar extensions = [];\nvar extensionRegisters = {\n  registerPreprocessor: registerPreprocessor,\n  registerProcessor: registerProcessor,\n  registerPostInit: registerPostInit,\n  registerPostUpdate: registerPostUpdate,\n  registerUpdateLifecycle: registerUpdateLifecycle,\n  registerAction: registerAction,\n  registerCoordinateSystem: registerCoordinateSystem,\n  registerLayout: registerLayout,\n  registerVisual: registerVisual,\n  registerTransform: registerTransform,\n  registerLoading: registerLoading,\n  registerMap: registerMap,\n  registerImpl: registerImpl,\n  PRIORITY: PRIORITY,\n  ComponentModel: ComponentModel,\n  ComponentView: ComponentView,\n  SeriesModel: SeriesModel,\n  ChartView: ChartView,\n  // TODO Use ComponentModel and SeriesModel instead of Constructor\n  registerComponentModel: function registerComponentModel(ComponentModelClass) {\n    ComponentModel.registerClass(ComponentModelClass);\n  },\n  registerComponentView: function registerComponentView(ComponentViewClass) {\n    ComponentView.registerClass(ComponentViewClass);\n  },\n  registerSeriesModel: function registerSeriesModel(SeriesModelClass) {\n    SeriesModel.registerClass(SeriesModelClass);\n  },\n  registerChartView: function registerChartView(ChartViewClass) {\n    ChartView.registerClass(ChartViewClass);\n  },\n  registerSubTypeDefaulter: function registerSubTypeDefaulter(componentType, defaulter) {\n    ComponentModel.registerSubTypeDefaulter(componentType, defaulter);\n  },\n  registerPainter: function registerPainter(painterType, PainterCtor) {\n    _registerPainter(painterType, PainterCtor);\n  }\n};\nexport function use(ext) {\n  if (isArray(ext)) {\n    // use([ChartLine, ChartBar]);\n    each(ext, function (singleExt) {\n      use(singleExt);\n    });\n    return;\n  }\n  if (indexOf(extensions, ext) >= 0) {\n    return;\n  }\n  extensions.push(ext);\n  if (isFunction(ext)) {\n    ext = {\n      install: ext\n    };\n  }\n  ext.install(extensionRegisters);\n}"],"names":["inner","makeInner","dimTypeShort","float","int","ordinal","number","time","SeriesDataSchema","opt","this","dimensions","_dimOmitted","dimensionOmitted","source","_fullDimCount","fullDimensionCount","_updateDimOmitted","prototype","isDimensionOmitted","_dimNameMap","ensureSourceDimNameMap","getSourceDimensionIndex","dimName","retrieve2","get","getSourceDimension","dimIndex","dimensionsDefine","makeStoreSchema","dimCount","willRetrieveDataByName","shouldRetrieveDataByName","makeHashStrict","shouldOmitUnusedDimensions","dimHash","dims","fullDimIdx","seriesDimIdx","property","type","ordinalMeta","seriesDimDef","storeDimIndex","name","sourceDimDef","push","isCalculationCoord","replace","uid","hash","seriesLayoutBy","startIndex","join","makeOutputDimensionNames","result","name_1","appendCalculationDimension","dimDef","isSeriesDataSchema","schema","createDimNameMap","dimsDef","dataDimNameMap","createHashMap","i","length","dimDefItemRaw","userDimName","isObject","set","innerSource","dimNameMap","createDimensions","prepareSeriesDataSchema","isSourceInstance","createSourceFromSeriesDataOption","sysDims","coordDimensions","coordDimNameMap","resultList","getDimCount","dimensionsCount","omitUnusedDimensions","canOmitUnusedDimensions","isUsingSourceDimensionsDef","encodeDef","encodeDefine","encodeDefaulter","encodeDefMap","indicesMap","CtorInt32Array","getResultItem","dimIdx","idx","dimDefItem","resultItem","SeriesDimensionDefine","displayName","newIdx","each","dataDimsRaw","coordDim","dataDims","normalizeToArray","slice","isString","validDataDims","resultDimIdxOrName","resultDimIdx","applyDim","availDimIdx","coordDimIndex","VISUAL_DIMENSIONS","otherDims","sysDimItemRaw","sysDimItemDimsDef","sysDimItemOtherDims","sysDimItem","extend","defaults","sysDimItemDimsDefItem","defaultTooltip","generateCoord","generateCoordCount","fromZero","extra","ifNoNameFillWithCoordName","sort","item0","item1","genCoordDimName","isExtraCoord","guessOrdinal","BE_ORDINAL","itemName","seriesName","removeDuplication","duplicationMap","dim","dimOriginalName","count","optDimCount","Math","max","dimensionsDetectedCount","map","hasKey","_a","_b","_c","providerMethods","mountMethods","DefaultDataProvider","sourceParam","dimSize","_source","data","_data","sourceFormat","_offset","_dimSize","getSource","getItem","out","appendData","newData","clean","protoInitialize","proto","pure","persistent","internalField","provider","methods","getMethodMapKey","getItemForTypedArray","countForTypedArray","fillStorage","fillStorageForTypedArray","rawItemGetter","getRawSourceItemGetter","bind","rawCounter","getRawSourceDataCounter","offset","start","end","storage","extent","dimExtent","min","Infinity","arr","val","appendDataSimply","Error","newCol","key","oldCol","getItemSimply","rawData","rawSourceItemGetterMap","item","row","col","method","countSimply","rawSourceDataCounterMap","getRawValueSimply","dataItem","rawSourceValueGetterMap","value","Array","getRawSourceValueGetter","retrieveRawValue","dataIndex","getRawDataItem","store","getStore","getDimensionIndex","getDimensionProperty","enableDataStack","seriesModel","dimensionsInput","dimensionDefineList","byIndex","stackedCoordDimension","isLegacyDimensionsInput","stackedByDimInfo","stackedDimInfo","stackResultDimension","stackedOverDimension","mayStack","dimensionInfo","index","id","createInvertedIndices","stackedDimCoordDim_1","stackedDimType","stackedDimCoordIndex_1","stackedOverDimensionDefine","stackResultDimensionDefine","ensureCalculationDimension","stackedDimension","stackedByDimension","isStackedByIndex","isDimensionStacked","stackedDim","getCalculationInfo","getStackedDimension","targetDim","parseDataValue","dimType","isNumber","parseDate","NaN","valueParserMap","parseFloat","trim","getRawValueParser","ORDER_COMPARISON_OP_MAP","lt","lval","rval","lte","gt","gte","FilterOrderComparator","op","errMsg","process","throwError","_opFn","_rvalFloat","numericToNumber","evaluate","SortOrderComparator","order","incomparable","isDesc","_resultLT","_incomparable","lvalFloat","rvalFloat","lvalNotNumeric","isNaN","rvalNotNumeric","lvalIsStr","rvalIsStr","FilterEqualityComparator","isEq","_rval","_isEQ","_rvalTypeof","_typeof","eqResult","lvalTypeof","createFilterComparator","hasOwn","DimensionUserOuput","encode","dimRequest","_encode","_schema","fullDimensions","_getFullDimensionNames","_cachedDimNames","summarizeDimensions","summary","notExtraCoordDimMap","defaultedLabel","defaultedTooltip","userOutputEncode","dimItem","getDimensionInfo","getOrCreateEncodeArr","mayLabelDimType","v","otherDim","encodeArr","dataDimsOnCoord","encodeFirstDimNotExtra","dimArr","concat","dataDimIndicesOnCoord","encodeLabel","label","encodeTooltip","tooltip","userOutput","hasOwnProperty","getDimensionTypeByAxis","axisType","linkSeriesData","mainData","datas","main","datasAttr","linkAll","TRANSFERABLE_METHODS","methodName","wrapMethod","curry","transferInjection","cloneShallowInjection","CHANGABLE_METHODS","changeInjection","assert","dataType","res","isMainData","linkSingle","struct","update","cloneShallow","getLinkedData","getLinkedDataAll","keys","structAttr","Must","Might","Not","innerGlobalModel","resetSourceDefaulter","ecModel","datasetMap","makeSeriesEncodeForAxisCoordSys","datasetModel","querySeriesUpstreamDatasetModel","baseCategoryDimIndex","categoryWayValueDimStart","encodeItemName","encodeSeriesName","coordDimInfoLoose","coordDimIdx","coordDimInfo","getDataDimCountOnCoordDim","datasetRecord","categoryWayDim","valueWayDim","pushDim","dimIdxArr","idxFrom","idxCount","coordDimName","makeSeriesEncodeForNameBased","potentialNameDimIndex","idxResult","idxRes0","idxRes1","guessRecords","len","guessResult","doGuessOrdinal","isPureNumber","n","fulfilled","nameDimIndex","thisData","models","queryDatasetUpstreamDatasetModels","maxLoop","isTypedArray","dataArrayRows","sample","detectValue","dataObjectRows","dataKeyedColumns","dataOriginal","isArray","beStr","isFinite","SourceManager","sourceHost","_sourceList","_storeList","_upstreamSignList","_versionSignBase","_dirty","_sourceHost","dirty","_setLocalSource","sourceList","upstreamSignList","_getVersionSign","prepareSource","_isDirty","_createSource","resultSourceList","upSourceMgrList","_getUpstreamSourceManagers","hasUpstream","isSeries","upSource","upSourceMgr","newMetaRawOption","_getSourceMetaRawOption","upMetaRawOption","metaRawOption","sourceHeader","needsCreateSource","_applyTransform","sourceData","upMgrList","transformOption","fromTransformResult","doThrow","upSourceList","upMgr","datasetIndex","componentIndex","upSrcMgr","sourceIndex","getSharedDataStore","seriesDimRequest","_innerGetDataStore","storeDims","seriesSource","sourceReadKey","storeList","cachedStoreMap","cachedStore","initData","getSourceManager","model","disableTransformOptionMerge","option","transform","setAsPrimitive","mainType","ExternalSource","getRawData","cloneRawData","cloneAllDimensionInfo","retrieveValue","retrieveValueFromItem","convertValue","rawVal","dimInfo","createExternalSource","internalSource","externalTransform","extSource","sourceHeaderCount","dimsByName","dimDefExt","errMsg_1","__isBuiltIn","rawValueGetter","rawItem","upstream","isSupportedSourceFormat","clone","externalTransformMap","registerExternalTransform","typeParsed","split","isBuiltIn","applyDataTransform","rawTransOption","infoForPrint","pipedTransOption","pipeLen","transOption","applySingleDataTransform","pipeIndex","transType","extUpSourceList","upstreamList","config","resultIndex","resultMetaRawOption","firstUpSource","createList","createSeriesData","dataStack","createScale","dataExtent","axisModel","Model","scale","axisHelper","setExtent","mixinAxisModelCommonMethods","createTextStyle","textStyleModel","opts","state","extendComponentModel","Component","extendComponentView","View","extendSeriesModel","Series","extendChartView","Chart","installLabelLayout","extensions","extensionRegisters","registerPreprocessor","registerProcessor","registerPostInit","registerPostUpdate","registerUpdateLifecycle","registerAction","registerCoordinateSystem","registerLayout","registerVisual","registerTransform","registerLoading","registerMap","registerImpl","PRIORITY","ComponentModel","ComponentView","SeriesModel","ChartView","registerComponentModel","ComponentModelClass","registerComponentView","ComponentViewClass","registerSeriesModel","SeriesModelClass","registerChartView","ChartViewClass","registerSubTypeDefaulter","componentType","defaulter","registerPainter","painterType","PainterCtor","use","ext","singleExt","indexOf","isFunction","install"],"sourceRoot":""}