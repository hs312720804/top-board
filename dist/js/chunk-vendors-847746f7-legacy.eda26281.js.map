{"version":3,"file":"js/chunk-vendors-847746f7-legacy.eda26281.js","mappings":"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","sources":["webpack://databoard/./node_modules/echarts/lib/component/graphic/GraphicModel.js","webpack://databoard/./node_modules/echarts/lib/component/graphic/GraphicView.js","webpack://databoard/./node_modules/echarts/lib/component/graphic/install.js","webpack://databoard/./node_modules/echarts/lib/component/grid/install.js","webpack://databoard/./node_modules/echarts/lib/component/grid/installSimple.js","webpack://databoard/./node_modules/echarts/lib/component/helper/BrushController.js","webpack://databoard/./node_modules/echarts/lib/component/helper/BrushTargetManager.js","webpack://databoard/./node_modules/echarts/lib/component/helper/MapDraw.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport * as modelUtil from '../../util/model.js';\nimport ComponentModel from '../../model/Component.js';\nimport { copyLayoutParams, mergeLayoutParam } from '../../util/layout.js';\n;\n;\n;\nexport function setKeyInfoToNewElOption(resultItem, newElOption) {\n  var existElOption = resultItem.existing; // Set id and type after id assigned.\n\n  newElOption.id = resultItem.keyInfo.id;\n  !newElOption.type && existElOption && (newElOption.type = existElOption.type); // Set parent id if not specified\n\n  if (newElOption.parentId == null) {\n    var newElParentOption = newElOption.parentOption;\n\n    if (newElParentOption) {\n      newElOption.parentId = newElParentOption.id;\n    } else if (existElOption) {\n      newElOption.parentId = existElOption.parentId;\n    }\n  } // Clear\n\n\n  newElOption.parentOption = null;\n}\n\nfunction isSetLoc(obj, props) {\n  var isSet;\n  zrUtil.each(props, function (prop) {\n    obj[prop] != null && obj[prop] !== 'auto' && (isSet = true);\n  });\n  return isSet;\n}\n\nfunction mergeNewElOptionToExist(existList, index, newElOption) {\n  // Update existing options, for `getOption` feature.\n  var newElOptCopy = zrUtil.extend({}, newElOption);\n  var existElOption = existList[index];\n  var $action = newElOption.$action || 'merge';\n\n  if ($action === 'merge') {\n    if (existElOption) {\n      if (process.env.NODE_ENV !== 'production') {\n        var newType = newElOption.type;\n        zrUtil.assert(!newType || existElOption.type === newType, 'Please set $action: \"replace\" to change `type`');\n      } // We can ensure that newElOptCopy and existElOption are not\n      // the same object, so `merge` will not change newElOptCopy.\n\n\n      zrUtil.merge(existElOption, newElOptCopy, true); // Rigid body, use ignoreSize.\n\n      mergeLayoutParam(existElOption, newElOptCopy, {\n        ignoreSize: true\n      }); // Will be used in render.\n\n      copyLayoutParams(newElOption, existElOption); // Copy transition info to new option so it can be used in the transition.\n      // DO IT AFTER merge\n\n      copyTransitionInfo(newElOption, existElOption);\n      copyTransitionInfo(newElOption, existElOption, 'shape');\n      copyTransitionInfo(newElOption, existElOption, 'style');\n      copyTransitionInfo(newElOption, existElOption, 'extra'); // Copy clipPath\n\n      newElOption.clipPath = existElOption.clipPath;\n    } else {\n      existList[index] = newElOptCopy;\n    }\n  } else if ($action === 'replace') {\n    existList[index] = newElOptCopy;\n  } else if ($action === 'remove') {\n    // null will be cleaned later.\n    existElOption && (existList[index] = null);\n  }\n}\n\nvar TRANSITION_PROPS_TO_COPY = ['transition', 'enterFrom', 'leaveTo'];\nvar ROOT_TRANSITION_PROPS_TO_COPY = TRANSITION_PROPS_TO_COPY.concat(['enterAnimation', 'updateAnimation', 'leaveAnimation']);\n\nfunction copyTransitionInfo(target, source, targetProp) {\n  if (targetProp) {\n    if (!target[targetProp] && source[targetProp]) {\n      // TODO avoid creating this empty object when there is no transition configuration.\n      target[targetProp] = {};\n    }\n\n    target = target[targetProp];\n    source = source[targetProp];\n  }\n\n  if (!target || !source) {\n    return;\n  }\n\n  var props = targetProp ? TRANSITION_PROPS_TO_COPY : ROOT_TRANSITION_PROPS_TO_COPY;\n\n  for (var i = 0; i < props.length; i++) {\n    var prop = props[i];\n\n    if (target[prop] == null && source[prop] != null) {\n      target[prop] = source[prop];\n    }\n  }\n}\n\nfunction setLayoutInfoToExist(existItem, newElOption) {\n  if (!existItem) {\n    return;\n  }\n\n  existItem.hv = newElOption.hv = [// Rigid body, don't care about `width`.\n  isSetLoc(newElOption, ['left', 'right']), // Rigid body, don't care about `height`.\n  isSetLoc(newElOption, ['top', 'bottom'])]; // Give default group size. Otherwise layout error may occur.\n\n  if (existItem.type === 'group') {\n    var existingGroupOpt = existItem;\n    var newGroupOpt = newElOption;\n    existingGroupOpt.width == null && (existingGroupOpt.width = newGroupOpt.width = 0);\n    existingGroupOpt.height == null && (existingGroupOpt.height = newGroupOpt.height = 0);\n  }\n}\n\nvar GraphicComponentModel =\n/** @class */\nfunction (_super) {\n  __extends(GraphicComponentModel, _super);\n\n  function GraphicComponentModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = GraphicComponentModel.type;\n    _this.preventAutoZ = true;\n    return _this;\n  }\n\n  GraphicComponentModel.prototype.mergeOption = function (option, ecModel) {\n    // Prevent default merge to elements\n    var elements = this.option.elements;\n    this.option.elements = null;\n\n    _super.prototype.mergeOption.call(this, option, ecModel);\n\n    this.option.elements = elements;\n  };\n\n  GraphicComponentModel.prototype.optionUpdated = function (newOption, isInit) {\n    var thisOption = this.option;\n    var newList = (isInit ? thisOption : newOption).elements;\n    var existList = thisOption.elements = isInit ? [] : thisOption.elements;\n    var flattenedList = [];\n\n    this._flatten(newList, flattenedList, null);\n\n    var mappingResult = modelUtil.mappingToExists(existList, flattenedList, 'normalMerge'); // Clear elOptionsToUpdate\n\n    var elOptionsToUpdate = this._elOptionsToUpdate = [];\n    zrUtil.each(mappingResult, function (resultItem, index) {\n      var newElOption = resultItem.newOption;\n\n      if (process.env.NODE_ENV !== 'production') {\n        zrUtil.assert(zrUtil.isObject(newElOption) || resultItem.existing, 'Empty graphic option definition');\n      }\n\n      if (!newElOption) {\n        return;\n      }\n\n      elOptionsToUpdate.push(newElOption);\n      setKeyInfoToNewElOption(resultItem, newElOption);\n      mergeNewElOptionToExist(existList, index, newElOption);\n      setLayoutInfoToExist(existList[index], newElOption);\n    }, this); // Clean\n\n    thisOption.elements = zrUtil.filter(existList, function (item) {\n      // $action should be volatile, otherwise option gotten from\n      // `getOption` will contain unexpected $action.\n      item && delete item.$action;\n      return item != null;\n    });\n  };\n  /**\n   * Convert\n   * [{\n   *  type: 'group',\n   *  id: 'xx',\n   *  children: [{type: 'circle'}, {type: 'polygon'}]\n   * }]\n   * to\n   * [\n   *  {type: 'group', id: 'xx'},\n   *  {type: 'circle', parentId: 'xx'},\n   *  {type: 'polygon', parentId: 'xx'}\n   * ]\n   */\n\n\n  GraphicComponentModel.prototype._flatten = function (optionList, result, parentOption) {\n    zrUtil.each(optionList, function (option) {\n      if (!option) {\n        return;\n      }\n\n      if (parentOption) {\n        option.parentOption = parentOption;\n      }\n\n      result.push(option);\n      var children = option.children; // here we don't judge if option.type is `group`\n      // when new option doesn't provide `type`, it will cause that the children can't be updated.\n\n      if (children && children.length) {\n        this._flatten(children, result, option);\n      } // Deleting for JSON output, and for not affecting group creation.\n\n\n      delete option.children;\n    }, this);\n  }; // FIXME\n  // Pass to view using payload? setOption has a payload?\n\n\n  GraphicComponentModel.prototype.useElOptionsToUpdate = function () {\n    var els = this._elOptionsToUpdate; // Clear to avoid render duplicately when zooming.\n\n    this._elOptionsToUpdate = null;\n    return els;\n  };\n\n  GraphicComponentModel.type = 'graphic';\n  GraphicComponentModel.defaultOption = {\n    elements: [] // parentId: null\n\n  };\n  return GraphicComponentModel;\n}(ComponentModel);\n\nexport { GraphicComponentModel };","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport Displayable from 'zrender/lib/graphic/Displayable.js';\nimport * as modelUtil from '../../util/model.js';\nimport * as graphicUtil from '../../util/graphic.js';\nimport * as layoutUtil from '../../util/layout.js';\nimport { parsePercent } from '../../util/number.js';\nimport ComponentView from '../../view/Component.js';\nimport { getECData } from '../../util/innerStore.js';\nimport { isEC4CompatibleStyle, convertFromEC4CompatibleStyle } from '../../util/styleCompat.js';\nimport { applyLeaveTransition, applyUpdateTransition, isTransitionAll, updateLeaveTo } from '../../animation/customGraphicTransition.js';\nimport { updateProps } from '../../animation/basicTransition.js';\nimport { applyKeyframeAnimation, stopPreviousKeyframeAnimationAndRestore } from '../../animation/customGraphicKeyframeAnimation.js';\nvar nonShapeGraphicElements = {\n  // Reserved but not supported in graphic component.\n  path: null,\n  compoundPath: null,\n  // Supported in graphic component.\n  group: graphicUtil.Group,\n  image: graphicUtil.Image,\n  text: graphicUtil.Text\n};\nexport var inner = modelUtil.makeInner(); // ------------------------\n// View\n// ------------------------\n\nvar GraphicComponentView =\n/** @class */\nfunction (_super) {\n  __extends(GraphicComponentView, _super);\n\n  function GraphicComponentView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = GraphicComponentView.type;\n    return _this;\n  }\n\n  GraphicComponentView.prototype.init = function () {\n    this._elMap = zrUtil.createHashMap();\n  };\n\n  GraphicComponentView.prototype.render = function (graphicModel, ecModel, api) {\n    // Having leveraged between use cases and algorithm complexity, a very\n    // simple layout mechanism is used:\n    // The size(width/height) can be determined by itself or its parent (not\n    // implemented yet), but can not by its children. (Top-down travel)\n    // The location(x/y) can be determined by the bounding rect of itself\n    // (can including its descendants or not) and the size of its parent.\n    // (Bottom-up travel)\n    // When `chart.clear()` or `chart.setOption({...}, true)` with the same id,\n    // view will be reused.\n    if (graphicModel !== this._lastGraphicModel) {\n      this._clear();\n    }\n\n    this._lastGraphicModel = graphicModel;\n\n    this._updateElements(graphicModel);\n\n    this._relocate(graphicModel, api);\n  };\n  /**\n   * Update graphic elements.\n   */\n\n\n  GraphicComponentView.prototype._updateElements = function (graphicModel) {\n    var elOptionsToUpdate = graphicModel.useElOptionsToUpdate();\n\n    if (!elOptionsToUpdate) {\n      return;\n    }\n\n    var elMap = this._elMap;\n    var rootGroup = this.group;\n    var globalZ = graphicModel.get('z');\n    var globalZLevel = graphicModel.get('zlevel'); // Top-down tranverse to assign graphic settings to each elements.\n\n    zrUtil.each(elOptionsToUpdate, function (elOption) {\n      var id = modelUtil.convertOptionIdName(elOption.id, null);\n      var elExisting = id != null ? elMap.get(id) : null;\n      var parentId = modelUtil.convertOptionIdName(elOption.parentId, null);\n      var targetElParent = parentId != null ? elMap.get(parentId) : rootGroup;\n      var elType = elOption.type;\n      var elOptionStyle = elOption.style;\n\n      if (elType === 'text' && elOptionStyle) {\n        // In top/bottom mode, textVerticalAlign should not be used, which cause\n        // inaccurately locating.\n        if (elOption.hv && elOption.hv[1]) {\n          elOptionStyle.textVerticalAlign = elOptionStyle.textBaseline = elOptionStyle.verticalAlign = elOptionStyle.align = null;\n        }\n      }\n\n      var textContentOption = elOption.textContent;\n      var textConfig = elOption.textConfig;\n\n      if (elOptionStyle && isEC4CompatibleStyle(elOptionStyle, elType, !!textConfig, !!textContentOption)) {\n        var convertResult = convertFromEC4CompatibleStyle(elOptionStyle, elType, true);\n\n        if (!textConfig && convertResult.textConfig) {\n          textConfig = elOption.textConfig = convertResult.textConfig;\n        }\n\n        if (!textContentOption && convertResult.textContent) {\n          textContentOption = convertResult.textContent;\n        }\n      } // Remove unnecessary props to avoid potential problems.\n\n\n      var elOptionCleaned = getCleanedElOption(elOption); // For simple, do not support parent change, otherwise reorder is needed.\n\n      if (process.env.NODE_ENV !== 'production') {\n        elExisting && zrUtil.assert(targetElParent === elExisting.parent, 'Changing parent is not supported.');\n      }\n\n      var $action = elOption.$action || 'merge';\n      var isMerge = $action === 'merge';\n      var isReplace = $action === 'replace';\n\n      if (isMerge) {\n        var isInit = !elExisting;\n        var el_1 = elExisting;\n\n        if (isInit) {\n          el_1 = createEl(id, targetElParent, elOption.type, elMap);\n        } else {\n          el_1 && (inner(el_1).isNew = false); // Stop and restore before update any other attributes.\n\n          stopPreviousKeyframeAnimationAndRestore(el_1);\n        }\n\n        if (el_1) {\n          applyUpdateTransition(el_1, elOptionCleaned, graphicModel, {\n            isInit: isInit\n          });\n          updateCommonAttrs(el_1, elOption, globalZ, globalZLevel);\n        }\n      } else if (isReplace) {\n        removeEl(elExisting, elOption, elMap, graphicModel);\n        var el_2 = createEl(id, targetElParent, elOption.type, elMap);\n\n        if (el_2) {\n          applyUpdateTransition(el_2, elOptionCleaned, graphicModel, {\n            isInit: true\n          });\n          updateCommonAttrs(el_2, elOption, globalZ, globalZLevel);\n        }\n      } else if ($action === 'remove') {\n        updateLeaveTo(elExisting, elOption);\n        removeEl(elExisting, elOption, elMap, graphicModel);\n      }\n\n      var el = elMap.get(id);\n\n      if (el && textContentOption) {\n        if (isMerge) {\n          var textContentExisting = el.getTextContent();\n          textContentExisting ? textContentExisting.attr(textContentOption) : el.setTextContent(new graphicUtil.Text(textContentOption));\n        } else if (isReplace) {\n          el.setTextContent(new graphicUtil.Text(textContentOption));\n        }\n      }\n\n      if (el) {\n        var clipPathOption = elOption.clipPath;\n\n        if (clipPathOption) {\n          var clipPathType = clipPathOption.type;\n          var clipPath = void 0;\n          var isInit = false;\n\n          if (isMerge) {\n            var oldClipPath = el.getClipPath();\n            isInit = !oldClipPath || inner(oldClipPath).type !== clipPathType;\n            clipPath = isInit ? newEl(clipPathType) : oldClipPath;\n          } else if (isReplace) {\n            isInit = true;\n            clipPath = newEl(clipPathType);\n          }\n\n          el.setClipPath(clipPath);\n          applyUpdateTransition(clipPath, clipPathOption, graphicModel, {\n            isInit: isInit\n          });\n          applyKeyframeAnimation(clipPath, clipPathOption.keyframeAnimation, graphicModel);\n        }\n\n        var elInner = inner(el);\n        el.setTextConfig(textConfig);\n        elInner.option = elOption;\n        setEventData(el, graphicModel, elOption);\n        graphicUtil.setTooltipConfig({\n          el: el,\n          componentModel: graphicModel,\n          itemName: el.name,\n          itemTooltipOption: elOption.tooltip\n        });\n        applyKeyframeAnimation(el, elOption.keyframeAnimation, graphicModel);\n      }\n    });\n  };\n  /**\n   * Locate graphic elements.\n   */\n\n\n  GraphicComponentView.prototype._relocate = function (graphicModel, api) {\n    var elOptions = graphicModel.option.elements;\n    var rootGroup = this.group;\n    var elMap = this._elMap;\n    var apiWidth = api.getWidth();\n    var apiHeight = api.getHeight();\n    var xy = ['x', 'y']; // Top-down to calculate percentage width/height of group\n\n    for (var i = 0; i < elOptions.length; i++) {\n      var elOption = elOptions[i];\n      var id = modelUtil.convertOptionIdName(elOption.id, null);\n      var el = id != null ? elMap.get(id) : null;\n\n      if (!el || !el.isGroup) {\n        continue;\n      }\n\n      var parentEl = el.parent;\n      var isParentRoot = parentEl === rootGroup; // Like 'position:absolut' in css, default 0.\n\n      var elInner = inner(el);\n      var parentElInner = inner(parentEl);\n      elInner.width = parsePercent(elInner.option.width, isParentRoot ? apiWidth : parentElInner.width) || 0;\n      elInner.height = parsePercent(elInner.option.height, isParentRoot ? apiHeight : parentElInner.height) || 0;\n    } // Bottom-up tranvese all elements (consider ec resize) to locate elements.\n\n\n    for (var i = elOptions.length - 1; i >= 0; i--) {\n      var elOption = elOptions[i];\n      var id = modelUtil.convertOptionIdName(elOption.id, null);\n      var el = id != null ? elMap.get(id) : null;\n\n      if (!el) {\n        continue;\n      }\n\n      var parentEl = el.parent;\n      var parentElInner = inner(parentEl);\n      var containerInfo = parentEl === rootGroup ? {\n        width: apiWidth,\n        height: apiHeight\n      } : {\n        width: parentElInner.width,\n        height: parentElInner.height\n      }; // PENDING\n      // Currently, when `bounding: 'all'`, the union bounding rect of the group\n      // does not include the rect of [0, 0, group.width, group.height], which\n      // is probably weird for users. Should we make a break change for it?\n\n      var layoutPos = {};\n      var layouted = layoutUtil.positionElement(el, elOption, containerInfo, null, {\n        hv: elOption.hv,\n        boundingMode: elOption.bounding\n      }, layoutPos);\n\n      if (!inner(el).isNew && layouted) {\n        var transition = elOption.transition;\n        var animatePos = {};\n\n        for (var k = 0; k < xy.length; k++) {\n          var key = xy[k];\n          var val = layoutPos[key];\n\n          if (transition && (isTransitionAll(transition) || zrUtil.indexOf(transition, key) >= 0)) {\n            animatePos[key] = val;\n          } else {\n            el[key] = val;\n          }\n        }\n\n        updateProps(el, animatePos, graphicModel, 0);\n      } else {\n        el.attr(layoutPos);\n      }\n    }\n  };\n  /**\n   * Clear all elements.\n   */\n\n\n  GraphicComponentView.prototype._clear = function () {\n    var _this = this;\n\n    var elMap = this._elMap;\n    elMap.each(function (el) {\n      removeEl(el, inner(el).option, elMap, _this._lastGraphicModel);\n    });\n    this._elMap = zrUtil.createHashMap();\n  };\n\n  GraphicComponentView.prototype.dispose = function () {\n    this._clear();\n  };\n\n  GraphicComponentView.type = 'graphic';\n  return GraphicComponentView;\n}(ComponentView);\n\nexport { GraphicComponentView };\n\nfunction newEl(graphicType) {\n  if (process.env.NODE_ENV !== 'production') {\n    zrUtil.assert(graphicType, 'graphic type MUST be set');\n  }\n\n  var Clz = zrUtil.hasOwn(nonShapeGraphicElements, graphicType) // Those graphic elements are not shapes. They should not be\n  // overwritten by users, so do them first.\n  ? nonShapeGraphicElements[graphicType] : graphicUtil.getShapeClass(graphicType);\n\n  if (process.env.NODE_ENV !== 'production') {\n    zrUtil.assert(Clz, \"graphic type \" + graphicType + \" can not be found\");\n  }\n\n  var el = new Clz({});\n  inner(el).type = graphicType;\n  return el;\n}\n\nfunction createEl(id, targetElParent, graphicType, elMap) {\n  var el = newEl(graphicType);\n  targetElParent.add(el);\n  elMap.set(id, el);\n  inner(el).id = id;\n  inner(el).isNew = true;\n  return el;\n}\n\nfunction removeEl(elExisting, elOption, elMap, graphicModel) {\n  var existElParent = elExisting && elExisting.parent;\n\n  if (existElParent) {\n    elExisting.type === 'group' && elExisting.traverse(function (el) {\n      removeEl(el, elOption, elMap, graphicModel);\n    });\n    applyLeaveTransition(elExisting, elOption, graphicModel);\n    elMap.removeKey(inner(elExisting).id);\n  }\n}\n\nfunction updateCommonAttrs(el, elOption, defaultZ, defaultZlevel) {\n  if (!el.isGroup) {\n    zrUtil.each([['cursor', Displayable.prototype.cursor], // We should not support configure z and zlevel in the element level.\n    // But seems we didn't limit it previously. So here still use it to avoid breaking.\n    ['zlevel', defaultZlevel || 0], ['z', defaultZ || 0], // z2 must not be null/undefined, otherwise sort error may occur.\n    ['z2', 0]], function (item) {\n      var prop = item[0];\n\n      if (zrUtil.hasOwn(elOption, prop)) {\n        el[prop] = zrUtil.retrieve2(elOption[prop], item[1]);\n      } else if (el[prop] == null) {\n        el[prop] = item[1];\n      }\n    });\n  }\n\n  zrUtil.each(zrUtil.keys(elOption), function (key) {\n    // Assign event handlers.\n    // PENDING: should enumerate all event names or use pattern matching?\n    if (key.indexOf('on') === 0) {\n      var val = elOption[key];\n      el[key] = zrUtil.isFunction(val) ? val : null;\n    }\n  });\n\n  if (zrUtil.hasOwn(elOption, 'draggable')) {\n    el.draggable = elOption.draggable;\n  } // Other attributes\n\n\n  elOption.name != null && (el.name = elOption.name);\n  elOption.id != null && (el.id = elOption.id);\n} // Remove unnecessary props to avoid potential problems.\n\n\nfunction getCleanedElOption(elOption) {\n  elOption = zrUtil.extend({}, elOption);\n  zrUtil.each(['id', 'parentId', '$action', 'hv', 'bounding', 'textContent', 'clipPath'].concat(layoutUtil.LOCATION_PARAMS), function (name) {\n    delete elOption[name];\n  });\n  return elOption;\n}\n\nfunction setEventData(el, graphicModel, elOption) {\n  var eventData = getECData(el).eventData; // Simple optimize for large amount of elements that no need event.\n\n  if (!el.silent && !el.ignore && !eventData) {\n    eventData = getECData(el).eventData = {\n      componentType: 'graphic',\n      componentIndex: graphicModel.componentIndex,\n      name: el.name\n    };\n  } // `elOption.info` enables user to mount some info on\n  // elements and use them in event handlers.\n\n\n  if (eventData) {\n    eventData.info = elOption.info;\n  }\n}","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { isArray } from 'zrender/lib/core/util.js';\nimport { GraphicComponentModel } from './GraphicModel.js';\nimport { GraphicComponentView } from './GraphicView.js';\nexport function install(registers) {\n  registers.registerComponentModel(GraphicComponentModel);\n  registers.registerComponentView(GraphicComponentView);\n  registers.registerPreprocessor(function (option) {\n    var graphicOption = option.graphic; // Convert\n    // {graphic: [{left: 10, type: 'circle'}, ...]}\n    // or\n    // {graphic: {left: 10, type: 'circle'}}\n    // to\n    // {graphic: [{elements: [{left: 10, type: 'circle'}, ...]}]}\n\n    if (isArray(graphicOption)) {\n      if (!graphicOption[0] || !graphicOption[0].elements) {\n        option.graphic = [{\n          elements: graphicOption\n        }];\n      } else {\n        // Only one graphic instance can be instantiated. (We don't\n        // want that too many views are created in echarts._viewMap.)\n        option.graphic = [option.graphic[0]];\n      }\n    } else if (graphicOption && !graphicOption.elements) {\n      option.graphic = [{\n        elements: [graphicOption]\n      }];\n    }\n  });\n}","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { install as installSimple } from './installSimple.js';\nimport { install as installAxisPointer } from '../axisPointer/install.js';\nimport { use } from '../../extension.js';\nexport function install(registers) {\n  use(installSimple);\n  use(installAxisPointer);\n}","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport ComponentView from '../../view/Component.js';\nimport GridModel from '../../coord/cartesian/GridModel.js';\nimport { Rect } from '../../util/graphic.js';\nimport { defaults } from 'zrender/lib/core/util.js';\nimport { CartesianAxisModel } from '../../coord/cartesian/AxisModel.js';\nimport axisModelCreator from '../../coord/axisModelCreator.js';\nimport Grid from '../../coord/cartesian/Grid.js';\nimport { CartesianXAxisView, CartesianYAxisView } from '../axis/CartesianAxisView.js'; // Grid view\n\nvar GridView = /** @class */\nfunction (_super) {\n  __extends(GridView, _super);\n  function GridView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = 'grid';\n    return _this;\n  }\n  GridView.prototype.render = function (gridModel, ecModel) {\n    this.group.removeAll();\n    if (gridModel.get('show')) {\n      this.group.add(new Rect({\n        shape: gridModel.coordinateSystem.getRect(),\n        style: defaults({\n          fill: gridModel.get('backgroundColor')\n        }, gridModel.getItemStyle()),\n        silent: true,\n        z2: -1\n      }));\n    }\n  };\n  GridView.type = 'grid';\n  return GridView;\n}(ComponentView);\nvar extraOption = {\n  // gridIndex: 0,\n  // gridId: '',\n  offset: 0\n};\nexport function install(registers) {\n  registers.registerComponentView(GridView);\n  registers.registerComponentModel(GridModel);\n  registers.registerCoordinateSystem('cartesian2d', Grid);\n  axisModelCreator(registers, 'x', CartesianAxisModel, extraOption);\n  axisModelCreator(registers, 'y', CartesianAxisModel, extraOption);\n  registers.registerComponentView(CartesianXAxisView);\n  registers.registerComponentView(CartesianYAxisView);\n  registers.registerPreprocessor(function (option) {\n    // Only create grid when need\n    if (option.xAxis && option.yAxis && !option.grid) {\n      option.grid = {};\n    }\n  });\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport { curry, each, map, bind, merge, clone, defaults, assert } from 'zrender/lib/core/util.js';\nimport Eventful from 'zrender/lib/core/Eventful.js';\nimport * as graphic from '../../util/graphic.js';\nimport * as interactionMutex from './interactionMutex.js';\nimport DataDiffer from '../../data/DataDiffer.js';\nvar BRUSH_PANEL_GLOBAL = true;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathPow = Math.pow;\nvar COVER_Z = 10000;\nvar UNSELECT_THRESHOLD = 6;\nvar MIN_RESIZE_LINE_WIDTH = 6;\nvar MUTEX_RESOURCE_KEY = 'globalPan';\nvar DIRECTION_MAP = {\n  w: [0, 0],\n  e: [0, 1],\n  n: [1, 0],\n  s: [1, 1]\n};\nvar CURSOR_MAP = {\n  w: 'ew',\n  e: 'ew',\n  n: 'ns',\n  s: 'ns',\n  ne: 'nesw',\n  sw: 'nesw',\n  nw: 'nwse',\n  se: 'nwse'\n};\nvar DEFAULT_BRUSH_OPT = {\n  brushStyle: {\n    lineWidth: 2,\n    stroke: 'rgba(210,219,238,0.3)',\n    fill: '#D2DBEE'\n  },\n  transformable: true,\n  brushMode: 'single',\n  removeOnClick: false\n};\nvar baseUID = 0;\n/**\n * params:\n *     areas: Array.<Array>, coord relates to container group,\n *                             If no container specified, to global.\n *     opt {\n *         isEnd: boolean,\n *         removeOnClick: boolean\n *     }\n */\n\nvar BrushController =\n/** @class */\nfunction (_super) {\n  __extends(BrushController, _super);\n\n  function BrushController(zr) {\n    var _this = _super.call(this) || this;\n    /**\n     * @internal\n     */\n\n\n    _this._track = [];\n    /**\n     * @internal\n     */\n\n    _this._covers = [];\n    _this._handlers = {};\n\n    if (process.env.NODE_ENV !== 'production') {\n      assert(zr);\n    }\n\n    _this._zr = zr;\n    _this.group = new graphic.Group();\n    _this._uid = 'brushController_' + baseUID++;\n    each(pointerHandlers, function (handler, eventName) {\n      this._handlers[eventName] = bind(handler, this);\n    }, _this);\n    return _this;\n  }\n  /**\n   * If set to `false`, select disabled.\n   */\n\n\n  BrushController.prototype.enableBrush = function (brushOption) {\n    if (process.env.NODE_ENV !== 'production') {\n      assert(this._mounted);\n    }\n\n    this._brushType && this._doDisableBrush();\n    brushOption.brushType && this._doEnableBrush(brushOption);\n    return this;\n  };\n\n  BrushController.prototype._doEnableBrush = function (brushOption) {\n    var zr = this._zr; // Consider roam, which takes globalPan too.\n\n    if (!this._enableGlobalPan) {\n      interactionMutex.take(zr, MUTEX_RESOURCE_KEY, this._uid);\n    }\n\n    each(this._handlers, function (handler, eventName) {\n      zr.on(eventName, handler);\n    });\n    this._brushType = brushOption.brushType;\n    this._brushOption = merge(clone(DEFAULT_BRUSH_OPT), brushOption, true);\n  };\n\n  BrushController.prototype._doDisableBrush = function () {\n    var zr = this._zr;\n    interactionMutex.release(zr, MUTEX_RESOURCE_KEY, this._uid);\n    each(this._handlers, function (handler, eventName) {\n      zr.off(eventName, handler);\n    });\n    this._brushType = this._brushOption = null;\n  };\n  /**\n   * @param panelOpts If not pass, it is global brush.\n   */\n\n\n  BrushController.prototype.setPanels = function (panelOpts) {\n    if (panelOpts && panelOpts.length) {\n      var panels_1 = this._panels = {};\n      each(panelOpts, function (panelOpts) {\n        panels_1[panelOpts.panelId] = clone(panelOpts);\n      });\n    } else {\n      this._panels = null;\n    }\n\n    return this;\n  };\n\n  BrushController.prototype.mount = function (opt) {\n    opt = opt || {};\n\n    if (process.env.NODE_ENV !== 'production') {\n      this._mounted = true; // should be at first.\n    }\n\n    this._enableGlobalPan = opt.enableGlobalPan;\n    var thisGroup = this.group;\n\n    this._zr.add(thisGroup);\n\n    thisGroup.attr({\n      x: opt.x || 0,\n      y: opt.y || 0,\n      rotation: opt.rotation || 0,\n      scaleX: opt.scaleX || 1,\n      scaleY: opt.scaleY || 1\n    });\n    this._transform = thisGroup.getLocalTransform();\n    return this;\n  }; // eachCover(cb, context): void {\n  //     each(this._covers, cb, context);\n  // }\n\n  /**\n   * Update covers.\n   * @param coverConfigList\n   *        If coverConfigList is null/undefined, all covers removed.\n   */\n\n\n  BrushController.prototype.updateCovers = function (coverConfigList) {\n    if (process.env.NODE_ENV !== 'production') {\n      assert(this._mounted);\n    }\n\n    coverConfigList = map(coverConfigList, function (coverConfig) {\n      return merge(clone(DEFAULT_BRUSH_OPT), coverConfig, true);\n    });\n    var tmpIdPrefix = '\\0-brush-index-';\n    var oldCovers = this._covers;\n    var newCovers = this._covers = [];\n    var controller = this;\n    var creatingCover = this._creatingCover;\n    new DataDiffer(oldCovers, coverConfigList, oldGetKey, getKey).add(addOrUpdate).update(addOrUpdate).remove(remove).execute();\n    return this;\n\n    function getKey(brushOption, index) {\n      return (brushOption.id != null ? brushOption.id : tmpIdPrefix + index) + '-' + brushOption.brushType;\n    }\n\n    function oldGetKey(cover, index) {\n      return getKey(cover.__brushOption, index);\n    }\n\n    function addOrUpdate(newIndex, oldIndex) {\n      var newBrushInternal = coverConfigList[newIndex]; // Consider setOption in event listener of brushSelect,\n      // where updating cover when creating should be forbidden.\n\n      if (oldIndex != null && oldCovers[oldIndex] === creatingCover) {\n        newCovers[newIndex] = oldCovers[oldIndex];\n      } else {\n        var cover = newCovers[newIndex] = oldIndex != null ? (oldCovers[oldIndex].__brushOption = newBrushInternal, oldCovers[oldIndex]) : endCreating(controller, createCover(controller, newBrushInternal));\n        updateCoverAfterCreation(controller, cover);\n      }\n    }\n\n    function remove(oldIndex) {\n      if (oldCovers[oldIndex] !== creatingCover) {\n        controller.group.remove(oldCovers[oldIndex]);\n      }\n    }\n  };\n\n  BrushController.prototype.unmount = function () {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!this._mounted) {\n        return;\n      }\n    }\n\n    this.enableBrush(false); // container may 'removeAll' outside.\n\n    clearCovers(this);\n\n    this._zr.remove(this.group);\n\n    if (process.env.NODE_ENV !== 'production') {\n      this._mounted = false; // should be at last.\n    }\n\n    return this;\n  };\n\n  BrushController.prototype.dispose = function () {\n    this.unmount();\n    this.off();\n  };\n\n  return BrushController;\n}(Eventful);\n\nfunction createCover(controller, brushOption) {\n  var cover = coverRenderers[brushOption.brushType].createCover(controller, brushOption);\n  cover.__brushOption = brushOption;\n  updateZ(cover, brushOption);\n  controller.group.add(cover);\n  return cover;\n}\n\nfunction endCreating(controller, creatingCover) {\n  var coverRenderer = getCoverRenderer(creatingCover);\n\n  if (coverRenderer.endCreating) {\n    coverRenderer.endCreating(controller, creatingCover);\n    updateZ(creatingCover, creatingCover.__brushOption);\n  }\n\n  return creatingCover;\n}\n\nfunction updateCoverShape(controller, cover) {\n  var brushOption = cover.__brushOption;\n  getCoverRenderer(cover).updateCoverShape(controller, cover, brushOption.range, brushOption);\n}\n\nfunction updateZ(cover, brushOption) {\n  var z = brushOption.z;\n  z == null && (z = COVER_Z);\n  cover.traverse(function (el) {\n    el.z = z;\n    el.z2 = z; // Consider in given container.\n  });\n}\n\nfunction updateCoverAfterCreation(controller, cover) {\n  getCoverRenderer(cover).updateCommon(controller, cover);\n  updateCoverShape(controller, cover);\n}\n\nfunction getCoverRenderer(cover) {\n  return coverRenderers[cover.__brushOption.brushType];\n} // return target panel or `true` (means global panel)\n\n\nfunction getPanelByPoint(controller, e, localCursorPoint) {\n  var panels = controller._panels;\n\n  if (!panels) {\n    return BRUSH_PANEL_GLOBAL; // Global panel\n  }\n\n  var panel;\n  var transform = controller._transform;\n  each(panels, function (pn) {\n    pn.isTargetByCursor(e, localCursorPoint, transform) && (panel = pn);\n  });\n  return panel;\n} // Return a panel or true\n\n\nfunction getPanelByCover(controller, cover) {\n  var panels = controller._panels;\n\n  if (!panels) {\n    return BRUSH_PANEL_GLOBAL; // Global panel\n  }\n\n  var panelId = cover.__brushOption.panelId; // User may give cover without coord sys info,\n  // which is then treated as global panel.\n\n  return panelId != null ? panels[panelId] : BRUSH_PANEL_GLOBAL;\n}\n\nfunction clearCovers(controller) {\n  var covers = controller._covers;\n  var originalLength = covers.length;\n  each(covers, function (cover) {\n    controller.group.remove(cover);\n  }, controller);\n  covers.length = 0;\n  return !!originalLength;\n}\n\nfunction trigger(controller, opt) {\n  var areas = map(controller._covers, function (cover) {\n    var brushOption = cover.__brushOption;\n    var range = clone(brushOption.range);\n    return {\n      brushType: brushOption.brushType,\n      panelId: brushOption.panelId,\n      range: range\n    };\n  });\n  controller.trigger('brush', {\n    areas: areas,\n    isEnd: !!opt.isEnd,\n    removeOnClick: !!opt.removeOnClick\n  });\n}\n\nfunction shouldShowCover(controller) {\n  var track = controller._track;\n\n  if (!track.length) {\n    return false;\n  }\n\n  var p2 = track[track.length - 1];\n  var p1 = track[0];\n  var dx = p2[0] - p1[0];\n  var dy = p2[1] - p1[1];\n  var dist = mathPow(dx * dx + dy * dy, 0.5);\n  return dist > UNSELECT_THRESHOLD;\n}\n\nfunction getTrackEnds(track) {\n  var tail = track.length - 1;\n  tail < 0 && (tail = 0);\n  return [track[0], track[tail]];\n}\n\n;\n\nfunction createBaseRectCover(rectRangeConverter, controller, brushOption, edgeNameSequences) {\n  var cover = new graphic.Group();\n  cover.add(new graphic.Rect({\n    name: 'main',\n    style: makeStyle(brushOption),\n    silent: true,\n    draggable: true,\n    cursor: 'move',\n    drift: curry(driftRect, rectRangeConverter, controller, cover, ['n', 's', 'w', 'e']),\n    ondragend: curry(trigger, controller, {\n      isEnd: true\n    })\n  }));\n  each(edgeNameSequences, function (nameSequence) {\n    cover.add(new graphic.Rect({\n      name: nameSequence.join(''),\n      style: {\n        opacity: 0\n      },\n      draggable: true,\n      silent: true,\n      invisible: true,\n      drift: curry(driftRect, rectRangeConverter, controller, cover, nameSequence),\n      ondragend: curry(trigger, controller, {\n        isEnd: true\n      })\n    }));\n  });\n  return cover;\n}\n\nfunction updateBaseRect(controller, cover, localRange, brushOption) {\n  var lineWidth = brushOption.brushStyle.lineWidth || 0;\n  var handleSize = mathMax(lineWidth, MIN_RESIZE_LINE_WIDTH);\n  var x = localRange[0][0];\n  var y = localRange[1][0];\n  var xa = x - lineWidth / 2;\n  var ya = y - lineWidth / 2;\n  var x2 = localRange[0][1];\n  var y2 = localRange[1][1];\n  var x2a = x2 - handleSize + lineWidth / 2;\n  var y2a = y2 - handleSize + lineWidth / 2;\n  var width = x2 - x;\n  var height = y2 - y;\n  var widtha = width + lineWidth;\n  var heighta = height + lineWidth;\n  updateRectShape(controller, cover, 'main', x, y, width, height);\n\n  if (brushOption.transformable) {\n    updateRectShape(controller, cover, 'w', xa, ya, handleSize, heighta);\n    updateRectShape(controller, cover, 'e', x2a, ya, handleSize, heighta);\n    updateRectShape(controller, cover, 'n', xa, ya, widtha, handleSize);\n    updateRectShape(controller, cover, 's', xa, y2a, widtha, handleSize);\n    updateRectShape(controller, cover, 'nw', xa, ya, handleSize, handleSize);\n    updateRectShape(controller, cover, 'ne', x2a, ya, handleSize, handleSize);\n    updateRectShape(controller, cover, 'sw', xa, y2a, handleSize, handleSize);\n    updateRectShape(controller, cover, 'se', x2a, y2a, handleSize, handleSize);\n  }\n}\n\nfunction updateCommon(controller, cover) {\n  var brushOption = cover.__brushOption;\n  var transformable = brushOption.transformable;\n  var mainEl = cover.childAt(0);\n  mainEl.useStyle(makeStyle(brushOption));\n  mainEl.attr({\n    silent: !transformable,\n    cursor: transformable ? 'move' : 'default'\n  });\n  each([['w'], ['e'], ['n'], ['s'], ['s', 'e'], ['s', 'w'], ['n', 'e'], ['n', 'w']], function (nameSequence) {\n    var el = cover.childOfName(nameSequence.join(''));\n    var globalDir = nameSequence.length === 1 ? getGlobalDirection1(controller, nameSequence[0]) : getGlobalDirection2(controller, nameSequence);\n    el && el.attr({\n      silent: !transformable,\n      invisible: !transformable,\n      cursor: transformable ? CURSOR_MAP[globalDir] + '-resize' : null\n    });\n  });\n}\n\nfunction updateRectShape(controller, cover, name, x, y, w, h) {\n  var el = cover.childOfName(name);\n  el && el.setShape(pointsToRect(clipByPanel(controller, cover, [[x, y], [x + w, y + h]])));\n}\n\nfunction makeStyle(brushOption) {\n  return defaults({\n    strokeNoScale: true\n  }, brushOption.brushStyle);\n}\n\nfunction formatRectRange(x, y, x2, y2) {\n  var min = [mathMin(x, x2), mathMin(y, y2)];\n  var max = [mathMax(x, x2), mathMax(y, y2)];\n  return [[min[0], max[0]], [min[1], max[1]] // y range\n  ];\n}\n\nfunction getTransform(controller) {\n  return graphic.getTransform(controller.group);\n}\n\nfunction getGlobalDirection1(controller, localDirName) {\n  var map = {\n    w: 'left',\n    e: 'right',\n    n: 'top',\n    s: 'bottom'\n  };\n  var inverseMap = {\n    left: 'w',\n    right: 'e',\n    top: 'n',\n    bottom: 's'\n  };\n  var dir = graphic.transformDirection(map[localDirName], getTransform(controller));\n  return inverseMap[dir];\n}\n\nfunction getGlobalDirection2(controller, localDirNameSeq) {\n  var globalDir = [getGlobalDirection1(controller, localDirNameSeq[0]), getGlobalDirection1(controller, localDirNameSeq[1])];\n  (globalDir[0] === 'e' || globalDir[0] === 'w') && globalDir.reverse();\n  return globalDir.join('');\n}\n\nfunction driftRect(rectRangeConverter, controller, cover, dirNameSequence, dx, dy) {\n  var brushOption = cover.__brushOption;\n  var rectRange = rectRangeConverter.toRectRange(brushOption.range);\n  var localDelta = toLocalDelta(controller, dx, dy);\n  each(dirNameSequence, function (dirName) {\n    var ind = DIRECTION_MAP[dirName];\n    rectRange[ind[0]][ind[1]] += localDelta[ind[0]];\n  });\n  brushOption.range = rectRangeConverter.fromRectRange(formatRectRange(rectRange[0][0], rectRange[1][0], rectRange[0][1], rectRange[1][1]));\n  updateCoverAfterCreation(controller, cover);\n  trigger(controller, {\n    isEnd: false\n  });\n}\n\nfunction driftPolygon(controller, cover, dx, dy) {\n  var range = cover.__brushOption.range;\n  var localDelta = toLocalDelta(controller, dx, dy);\n  each(range, function (point) {\n    point[0] += localDelta[0];\n    point[1] += localDelta[1];\n  });\n  updateCoverAfterCreation(controller, cover);\n  trigger(controller, {\n    isEnd: false\n  });\n}\n\nfunction toLocalDelta(controller, dx, dy) {\n  var thisGroup = controller.group;\n  var localD = thisGroup.transformCoordToLocal(dx, dy);\n  var localZero = thisGroup.transformCoordToLocal(0, 0);\n  return [localD[0] - localZero[0], localD[1] - localZero[1]];\n}\n\nfunction clipByPanel(controller, cover, data) {\n  var panel = getPanelByCover(controller, cover);\n  return panel && panel !== BRUSH_PANEL_GLOBAL ? panel.clipPath(data, controller._transform) : clone(data);\n}\n\nfunction pointsToRect(points) {\n  var xmin = mathMin(points[0][0], points[1][0]);\n  var ymin = mathMin(points[0][1], points[1][1]);\n  var xmax = mathMax(points[0][0], points[1][0]);\n  var ymax = mathMax(points[0][1], points[1][1]);\n  return {\n    x: xmin,\n    y: ymin,\n    width: xmax - xmin,\n    height: ymax - ymin\n  };\n}\n\nfunction resetCursor(controller, e, localCursorPoint) {\n  if ( // Check active\n  !controller._brushType // resetCursor should be always called when mouse is in zr area,\n  // but not called when mouse is out of zr area to avoid bad influence\n  // if `mousemove`, `mouseup` are triggered from `document` event.\n  || isOutsideZrArea(controller, e.offsetX, e.offsetY)) {\n    return;\n  }\n\n  var zr = controller._zr;\n  var covers = controller._covers;\n  var currPanel = getPanelByPoint(controller, e, localCursorPoint); // Check whether in covers.\n\n  if (!controller._dragging) {\n    for (var i = 0; i < covers.length; i++) {\n      var brushOption = covers[i].__brushOption;\n\n      if (currPanel && (currPanel === BRUSH_PANEL_GLOBAL || brushOption.panelId === currPanel.panelId) && coverRenderers[brushOption.brushType].contain(covers[i], localCursorPoint[0], localCursorPoint[1])) {\n        // Use cursor style set on cover.\n        return;\n      }\n    }\n  }\n\n  currPanel && zr.setCursorStyle('crosshair');\n}\n\nfunction preventDefault(e) {\n  var rawE = e.event;\n  rawE.preventDefault && rawE.preventDefault();\n}\n\nfunction mainShapeContain(cover, x, y) {\n  return cover.childOfName('main').contain(x, y);\n}\n\nfunction updateCoverByMouse(controller, e, localCursorPoint, isEnd) {\n  var creatingCover = controller._creatingCover;\n  var panel = controller._creatingPanel;\n  var thisBrushOption = controller._brushOption;\n  var eventParams;\n\n  controller._track.push(localCursorPoint.slice());\n\n  if (shouldShowCover(controller) || creatingCover) {\n    if (panel && !creatingCover) {\n      thisBrushOption.brushMode === 'single' && clearCovers(controller);\n      var brushOption = clone(thisBrushOption);\n      brushOption.brushType = determineBrushType(brushOption.brushType, panel);\n      brushOption.panelId = panel === BRUSH_PANEL_GLOBAL ? null : panel.panelId;\n      creatingCover = controller._creatingCover = createCover(controller, brushOption);\n\n      controller._covers.push(creatingCover);\n    }\n\n    if (creatingCover) {\n      var coverRenderer = coverRenderers[determineBrushType(controller._brushType, panel)];\n      var coverBrushOption = creatingCover.__brushOption;\n      coverBrushOption.range = coverRenderer.getCreatingRange(clipByPanel(controller, creatingCover, controller._track));\n\n      if (isEnd) {\n        endCreating(controller, creatingCover);\n        coverRenderer.updateCommon(controller, creatingCover);\n      }\n\n      updateCoverShape(controller, creatingCover);\n      eventParams = {\n        isEnd: isEnd\n      };\n    }\n  } else if (isEnd && thisBrushOption.brushMode === 'single' && thisBrushOption.removeOnClick) {\n    // Help user to remove covers easily, only by a tiny drag, in 'single' mode.\n    // But a single click do not clear covers, because user may have casual\n    // clicks (for example, click on other component and do not expect covers\n    // disappear).\n    // Only some cover removed, trigger action, but not every click trigger action.\n    if (getPanelByPoint(controller, e, localCursorPoint) && clearCovers(controller)) {\n      eventParams = {\n        isEnd: isEnd,\n        removeOnClick: true\n      };\n    }\n  }\n\n  return eventParams;\n}\n\nfunction determineBrushType(brushType, panel) {\n  if (brushType === 'auto') {\n    if (process.env.NODE_ENV !== 'production') {\n      assert(panel && panel.defaultBrushType, 'MUST have defaultBrushType when brushType is \"atuo\"');\n    }\n\n    return panel.defaultBrushType;\n  }\n\n  return brushType;\n}\n\nvar pointerHandlers = {\n  mousedown: function (e) {\n    if (this._dragging) {\n      // In case some browser do not support globalOut,\n      // and release mouse out side the browser.\n      handleDragEnd(this, e);\n    } else if (!e.target || !e.target.draggable) {\n      preventDefault(e);\n      var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n      this._creatingCover = null;\n      var panel = this._creatingPanel = getPanelByPoint(this, e, localCursorPoint);\n\n      if (panel) {\n        this._dragging = true;\n        this._track = [localCursorPoint.slice()];\n      }\n    }\n  },\n  mousemove: function (e) {\n    var x = e.offsetX;\n    var y = e.offsetY;\n    var localCursorPoint = this.group.transformCoordToLocal(x, y);\n    resetCursor(this, e, localCursorPoint);\n\n    if (this._dragging) {\n      preventDefault(e);\n      var eventParams = updateCoverByMouse(this, e, localCursorPoint, false);\n      eventParams && trigger(this, eventParams);\n    }\n  },\n  mouseup: function (e) {\n    handleDragEnd(this, e);\n  }\n};\n\nfunction handleDragEnd(controller, e) {\n  if (controller._dragging) {\n    preventDefault(e);\n    var x = e.offsetX;\n    var y = e.offsetY;\n    var localCursorPoint = controller.group.transformCoordToLocal(x, y);\n    var eventParams = updateCoverByMouse(controller, e, localCursorPoint, true);\n    controller._dragging = false;\n    controller._track = [];\n    controller._creatingCover = null; // trigger event should be at final, after procedure will be nested.\n\n    eventParams && trigger(controller, eventParams);\n  }\n}\n\nfunction isOutsideZrArea(controller, x, y) {\n  var zr = controller._zr;\n  return x < 0 || x > zr.getWidth() || y < 0 || y > zr.getHeight();\n}\n/**\n * key: brushType\n */\n\n\nvar coverRenderers = {\n  lineX: getLineRenderer(0),\n  lineY: getLineRenderer(1),\n  rect: {\n    createCover: function (controller, brushOption) {\n      function returnInput(range) {\n        return range;\n      }\n\n      return createBaseRectCover({\n        toRectRange: returnInput,\n        fromRectRange: returnInput\n      }, controller, brushOption, [['w'], ['e'], ['n'], ['s'], ['s', 'e'], ['s', 'w'], ['n', 'e'], ['n', 'w']]);\n    },\n    getCreatingRange: function (localTrack) {\n      var ends = getTrackEnds(localTrack);\n      return formatRectRange(ends[1][0], ends[1][1], ends[0][0], ends[0][1]);\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      updateBaseRect(controller, cover, localRange, brushOption);\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  },\n  polygon: {\n    createCover: function (controller, brushOption) {\n      var cover = new graphic.Group(); // Do not use graphic.Polygon because graphic.Polyline do not close the\n      // border of the shape when drawing, which is a better experience for user.\n\n      cover.add(new graphic.Polyline({\n        name: 'main',\n        style: makeStyle(brushOption),\n        silent: true\n      }));\n      return cover;\n    },\n    getCreatingRange: function (localTrack) {\n      return localTrack;\n    },\n    endCreating: function (controller, cover) {\n      cover.remove(cover.childAt(0)); // Use graphic.Polygon close the shape.\n\n      cover.add(new graphic.Polygon({\n        name: 'main',\n        draggable: true,\n        drift: curry(driftPolygon, controller, cover),\n        ondragend: curry(trigger, controller, {\n          isEnd: true\n        })\n      }));\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      cover.childAt(0).setShape({\n        points: clipByPanel(controller, cover, localRange)\n      });\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  }\n};\n\nfunction getLineRenderer(xyIndex) {\n  return {\n    createCover: function (controller, brushOption) {\n      return createBaseRectCover({\n        toRectRange: function (range) {\n          var rectRange = [range, [0, 100]];\n          xyIndex && rectRange.reverse();\n          return rectRange;\n        },\n        fromRectRange: function (rectRange) {\n          return rectRange[xyIndex];\n        }\n      }, controller, brushOption, [[['w'], ['e']], [['n'], ['s']]][xyIndex]);\n    },\n    getCreatingRange: function (localTrack) {\n      var ends = getTrackEnds(localTrack);\n      var min = mathMin(ends[0][xyIndex], ends[1][xyIndex]);\n      var max = mathMax(ends[0][xyIndex], ends[1][xyIndex]);\n      return [min, max];\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      var otherExtent; // If brushWidth not specified, fit the panel.\n\n      var panel = getPanelByCover(controller, cover);\n\n      if (panel !== BRUSH_PANEL_GLOBAL && panel.getLinearBrushOtherExtent) {\n        otherExtent = panel.getLinearBrushOtherExtent(xyIndex);\n      } else {\n        var zr = controller._zr;\n        otherExtent = [0, [zr.getWidth(), zr.getHeight()][1 - xyIndex]];\n      }\n\n      var rectRange = [localRange, otherExtent];\n      xyIndex && rectRange.reverse();\n      updateBaseRect(controller, cover, rectRange, brushOption);\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  };\n}\n\nexport default BrushController;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { each, indexOf, curry, assert, map, createHashMap } from 'zrender/lib/core/util.js';\nimport * as graphic from '../../util/graphic.js';\nimport * as brushHelper from './brushHelper.js';\nimport { parseFinder as modelUtilParseFinder } from '../../util/model.js'; // FIXME\n// how to genarialize to more coordinate systems.\n\nvar INCLUDE_FINDER_MAIN_TYPES = ['grid', 'xAxis', 'yAxis', 'geo', 'graph', 'polar', 'radiusAxis', 'angleAxis', 'bmap'];\n\nvar BrushTargetManager =\n/** @class */\nfunction () {\n  /**\n   * @param finder contains Index/Id/Name of xAxis/yAxis/geo/grid\n   *        Each can be {number|Array.<number>}. like: {xAxisIndex: [3, 4]}\n   * @param opt.include include coordinate system types.\n   */\n  function BrushTargetManager(finder, ecModel, opt) {\n    var _this = this;\n\n    this._targetInfoList = [];\n    var foundCpts = parseFinder(ecModel, finder);\n    each(targetInfoBuilders, function (builder, type) {\n      if (!opt || !opt.include || indexOf(opt.include, type) >= 0) {\n        builder(foundCpts, _this._targetInfoList);\n      }\n    });\n  }\n\n  BrushTargetManager.prototype.setOutputRanges = function (areas, ecModel) {\n    this.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n      (area.coordRanges || (area.coordRanges = [])).push(coordRange); // area.coordRange is the first of area.coordRanges\n\n      if (!area.coordRange) {\n        area.coordRange = coordRange; // In 'category' axis, coord to pixel is not reversible, so we can not\n        // rebuild range by coordRange accrately, which may bring trouble when\n        // brushing only one item. So we use __rangeOffset to rebuilding range\n        // by coordRange. And this it only used in brush component so it is no\n        // need to be adapted to coordRanges.\n\n        var result = coordConvert[area.brushType](0, coordSys, coordRange);\n        area.__rangeOffset = {\n          offset: diffProcessor[area.brushType](result.values, area.range, [1, 1]),\n          xyMinMax: result.xyMinMax\n        };\n      }\n    });\n    return areas;\n  };\n\n  BrushTargetManager.prototype.matchOutputRanges = function (areas, ecModel, cb) {\n    each(areas, function (area) {\n      var targetInfo = this.findTargetInfo(area, ecModel);\n\n      if (targetInfo && targetInfo !== true) {\n        each(targetInfo.coordSyses, function (coordSys) {\n          var result = coordConvert[area.brushType](1, coordSys, area.range, true);\n          cb(area, result.values, coordSys, ecModel);\n        });\n      }\n    }, this);\n  };\n  /**\n   * the `areas` is `BrushModel.areas`.\n   * Called in layout stage.\n   * convert `area.coordRange` to global range and set panelId to `area.range`.\n   */\n\n\n  BrushTargetManager.prototype.setInputRanges = function (areas, ecModel) {\n    each(areas, function (area) {\n      var targetInfo = this.findTargetInfo(area, ecModel);\n\n      if (process.env.NODE_ENV !== 'production') {\n        assert(!targetInfo || targetInfo === true || area.coordRange, 'coordRange must be specified when coord index specified.');\n        assert(!targetInfo || targetInfo !== true || area.range, 'range must be specified in global brush.');\n      }\n\n      area.range = area.range || []; // convert coordRange to global range and set panelId.\n\n      if (targetInfo && targetInfo !== true) {\n        area.panelId = targetInfo.panelId; // (1) area.range should always be calculate from coordRange but does\n        // not keep its original value, for the sake of the dataZoom scenario,\n        // where area.coordRange remains unchanged but area.range may be changed.\n        // (2) Only support converting one coordRange to pixel range in brush\n        // component. So do not consider `coordRanges`.\n        // (3) About __rangeOffset, see comment above.\n\n        var result = coordConvert[area.brushType](0, targetInfo.coordSys, area.coordRange);\n        var rangeOffset = area.__rangeOffset;\n        area.range = rangeOffset ? diffProcessor[area.brushType](result.values, rangeOffset.offset, getScales(result.xyMinMax, rangeOffset.xyMinMax)) : result.values;\n      }\n    }, this);\n  };\n\n  BrushTargetManager.prototype.makePanelOpts = function (api, getDefaultBrushType) {\n    return map(this._targetInfoList, function (targetInfo) {\n      var rect = targetInfo.getPanelRect();\n      return {\n        panelId: targetInfo.panelId,\n        defaultBrushType: getDefaultBrushType ? getDefaultBrushType(targetInfo) : null,\n        clipPath: brushHelper.makeRectPanelClipPath(rect),\n        isTargetByCursor: brushHelper.makeRectIsTargetByCursor(rect, api, targetInfo.coordSysModel),\n        getLinearBrushOtherExtent: brushHelper.makeLinearBrushOtherExtent(rect)\n      };\n    });\n  };\n\n  BrushTargetManager.prototype.controlSeries = function (area, seriesModel, ecModel) {\n    // Check whether area is bound in coord, and series do not belong to that coord.\n    // If do not do this check, some brush (like lineX) will controll all axes.\n    var targetInfo = this.findTargetInfo(area, ecModel);\n    return targetInfo === true || targetInfo && indexOf(targetInfo.coordSyses, seriesModel.coordinateSystem) >= 0;\n  };\n  /**\n   * If return Object, a coord found.\n   * If return true, global found.\n   * Otherwise nothing found.\n   */\n\n\n  BrushTargetManager.prototype.findTargetInfo = function (area, ecModel) {\n    var targetInfoList = this._targetInfoList;\n    var foundCpts = parseFinder(ecModel, area);\n\n    for (var i = 0; i < targetInfoList.length; i++) {\n      var targetInfo = targetInfoList[i];\n      var areaPanelId = area.panelId;\n\n      if (areaPanelId) {\n        if (targetInfo.panelId === areaPanelId) {\n          return targetInfo;\n        }\n      } else {\n        for (var j = 0; j < targetInfoMatchers.length; j++) {\n          if (targetInfoMatchers[j](foundCpts, targetInfo)) {\n            return targetInfo;\n          }\n        }\n      }\n    }\n\n    return true;\n  };\n\n  return BrushTargetManager;\n}();\n\nfunction formatMinMax(minMax) {\n  minMax[0] > minMax[1] && minMax.reverse();\n  return minMax;\n}\n\nfunction parseFinder(ecModel, finder) {\n  return modelUtilParseFinder(ecModel, finder, {\n    includeMainTypes: INCLUDE_FINDER_MAIN_TYPES\n  });\n}\n\nvar targetInfoBuilders = {\n  grid: function (foundCpts, targetInfoList) {\n    var xAxisModels = foundCpts.xAxisModels;\n    var yAxisModels = foundCpts.yAxisModels;\n    var gridModels = foundCpts.gridModels; // Remove duplicated.\n\n    var gridModelMap = createHashMap();\n    var xAxesHas = {};\n    var yAxesHas = {};\n\n    if (!xAxisModels && !yAxisModels && !gridModels) {\n      return;\n    }\n\n    each(xAxisModels, function (axisModel) {\n      var gridModel = axisModel.axis.grid.model;\n      gridModelMap.set(gridModel.id, gridModel);\n      xAxesHas[gridModel.id] = true;\n    });\n    each(yAxisModels, function (axisModel) {\n      var gridModel = axisModel.axis.grid.model;\n      gridModelMap.set(gridModel.id, gridModel);\n      yAxesHas[gridModel.id] = true;\n    });\n    each(gridModels, function (gridModel) {\n      gridModelMap.set(gridModel.id, gridModel);\n      xAxesHas[gridModel.id] = true;\n      yAxesHas[gridModel.id] = true;\n    });\n    gridModelMap.each(function (gridModel) {\n      var grid = gridModel.coordinateSystem;\n      var cartesians = [];\n      each(grid.getCartesians(), function (cartesian, index) {\n        if (indexOf(xAxisModels, cartesian.getAxis('x').model) >= 0 || indexOf(yAxisModels, cartesian.getAxis('y').model) >= 0) {\n          cartesians.push(cartesian);\n        }\n      });\n      targetInfoList.push({\n        panelId: 'grid--' + gridModel.id,\n        gridModel: gridModel,\n        coordSysModel: gridModel,\n        // Use the first one as the representitive coordSys.\n        coordSys: cartesians[0],\n        coordSyses: cartesians,\n        getPanelRect: panelRectBuilders.grid,\n        xAxisDeclared: xAxesHas[gridModel.id],\n        yAxisDeclared: yAxesHas[gridModel.id]\n      });\n    });\n  },\n  geo: function (foundCpts, targetInfoList) {\n    each(foundCpts.geoModels, function (geoModel) {\n      var coordSys = geoModel.coordinateSystem;\n      targetInfoList.push({\n        panelId: 'geo--' + geoModel.id,\n        geoModel: geoModel,\n        coordSysModel: geoModel,\n        coordSys: coordSys,\n        coordSyses: [coordSys],\n        getPanelRect: panelRectBuilders.geo\n      });\n    });\n  }\n};\nvar targetInfoMatchers = [// grid\nfunction (foundCpts, targetInfo) {\n  var xAxisModel = foundCpts.xAxisModel;\n  var yAxisModel = foundCpts.yAxisModel;\n  var gridModel = foundCpts.gridModel;\n  !gridModel && xAxisModel && (gridModel = xAxisModel.axis.grid.model);\n  !gridModel && yAxisModel && (gridModel = yAxisModel.axis.grid.model);\n  return gridModel && gridModel === targetInfo.gridModel;\n}, // geo\nfunction (foundCpts, targetInfo) {\n  var geoModel = foundCpts.geoModel;\n  return geoModel && geoModel === targetInfo.geoModel;\n}];\nvar panelRectBuilders = {\n  grid: function () {\n    // grid is not Transformable.\n    return this.coordSys.master.getRect().clone();\n  },\n  geo: function () {\n    var coordSys = this.coordSys;\n    var rect = coordSys.getBoundingRect().clone(); // geo roam and zoom transform\n\n    rect.applyTransform(graphic.getTransform(coordSys));\n    return rect;\n  }\n};\nvar coordConvert = {\n  lineX: curry(axisConvert, 0),\n  lineY: curry(axisConvert, 1),\n  rect: function (to, coordSys, rangeOrCoordRange, clamp) {\n    var xminymin = to ? coordSys.pointToData([rangeOrCoordRange[0][0], rangeOrCoordRange[1][0]], clamp) : coordSys.dataToPoint([rangeOrCoordRange[0][0], rangeOrCoordRange[1][0]], clamp);\n    var xmaxymax = to ? coordSys.pointToData([rangeOrCoordRange[0][1], rangeOrCoordRange[1][1]], clamp) : coordSys.dataToPoint([rangeOrCoordRange[0][1], rangeOrCoordRange[1][1]], clamp);\n    var values = [formatMinMax([xminymin[0], xmaxymax[0]]), formatMinMax([xminymin[1], xmaxymax[1]])];\n    return {\n      values: values,\n      xyMinMax: values\n    };\n  },\n  polygon: function (to, coordSys, rangeOrCoordRange, clamp) {\n    var xyMinMax = [[Infinity, -Infinity], [Infinity, -Infinity]];\n    var values = map(rangeOrCoordRange, function (item) {\n      var p = to ? coordSys.pointToData(item, clamp) : coordSys.dataToPoint(item, clamp);\n      xyMinMax[0][0] = Math.min(xyMinMax[0][0], p[0]);\n      xyMinMax[1][0] = Math.min(xyMinMax[1][0], p[1]);\n      xyMinMax[0][1] = Math.max(xyMinMax[0][1], p[0]);\n      xyMinMax[1][1] = Math.max(xyMinMax[1][1], p[1]);\n      return p;\n    });\n    return {\n      values: values,\n      xyMinMax: xyMinMax\n    };\n  }\n};\n\nfunction axisConvert(axisNameIndex, to, coordSys, rangeOrCoordRange) {\n  if (process.env.NODE_ENV !== 'production') {\n    assert(coordSys.type === 'cartesian2d', 'lineX/lineY brush is available only in cartesian2d.');\n  }\n\n  var axis = coordSys.getAxis(['x', 'y'][axisNameIndex]);\n  var values = formatMinMax(map([0, 1], function (i) {\n    return to ? axis.coordToData(axis.toLocalCoord(rangeOrCoordRange[i]), true) : axis.toGlobalCoord(axis.dataToCoord(rangeOrCoordRange[i]));\n  }));\n  var xyMinMax = [];\n  xyMinMax[axisNameIndex] = values;\n  xyMinMax[1 - axisNameIndex] = [NaN, NaN];\n  return {\n    values: values,\n    xyMinMax: xyMinMax\n  };\n}\n\nvar diffProcessor = {\n  lineX: curry(axisDiffProcessor, 0),\n  lineY: curry(axisDiffProcessor, 1),\n  rect: function (values, refer, scales) {\n    return [[values[0][0] - scales[0] * refer[0][0], values[0][1] - scales[0] * refer[0][1]], [values[1][0] - scales[1] * refer[1][0], values[1][1] - scales[1] * refer[1][1]]];\n  },\n  polygon: function (values, refer, scales) {\n    return map(values, function (item, idx) {\n      return [item[0] - scales[0] * refer[idx][0], item[1] - scales[1] * refer[idx][1]];\n    });\n  }\n};\n\nfunction axisDiffProcessor(axisNameIndex, values, refer, scales) {\n  return [values[0] - scales[axisNameIndex] * refer[0], values[1] - scales[axisNameIndex] * refer[1]];\n} // We have to process scale caused by dataZoom manually,\n// although it might be not accurate.\n// Return [0~1, 0~1]\n\n\nfunction getScales(xyMinMaxCurr, xyMinMaxOrigin) {\n  var sizeCurr = getSize(xyMinMaxCurr);\n  var sizeOrigin = getSize(xyMinMaxOrigin);\n  var scales = [sizeCurr[0] / sizeOrigin[0], sizeCurr[1] / sizeOrigin[1]];\n  isNaN(scales[0]) && (scales[0] = 1);\n  isNaN(scales[1]) && (scales[1] = 1);\n  return scales;\n}\n\nfunction getSize(xyMinMax) {\n  return xyMinMax ? [xyMinMax[0][1] - xyMinMax[0][0], xyMinMax[1][1] - xyMinMax[1][0]] : [NaN, NaN];\n}\n\nexport default BrushTargetManager;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport RoamController from './RoamController.js';\nimport * as roamHelper from '../../component/helper/roamHelper.js';\nimport { onIrrelevantElement } from '../../component/helper/cursorHelper.js';\nimport * as graphic from '../../util/graphic.js';\nimport { toggleHoverEmphasis, enableComponentHighDownFeatures, setDefaultStateProxy } from '../../util/states.js';\nimport geoSourceManager from '../../coord/geo/geoSourceManager.js';\nimport { getUID } from '../../util/component.js';\nimport { setLabelStyle, getLabelStatesModels } from '../../label/labelStyle.js';\nimport { getECData } from '../../util/innerStore.js';\nimport { createOrUpdatePatternFromDecal } from '../../util/decal.js';\nimport Displayable from 'zrender/lib/graphic/Displayable.js';\nimport { makeInner } from '../../util/model.js';\n/**\n * Only these tags enable use `itemStyle` if they are named in SVG.\n * Other tags like <text> <tspan> <image> might not suitable for `itemStyle`.\n * They will not be considered to be styled until some requirements come.\n */\n\nvar OPTION_STYLE_ENABLED_TAGS = ['rect', 'circle', 'line', 'ellipse', 'polygon', 'polyline', 'path'];\nvar OPTION_STYLE_ENABLED_TAG_MAP = zrUtil.createHashMap(OPTION_STYLE_ENABLED_TAGS);\nvar STATE_TRIGGER_TAG_MAP = zrUtil.createHashMap(OPTION_STYLE_ENABLED_TAGS.concat(['g']));\nvar LABEL_HOST_MAP = zrUtil.createHashMap(OPTION_STYLE_ENABLED_TAGS.concat(['g']));\nvar mapLabelRaw = makeInner();\n\nfunction getFixedItemStyle(model) {\n  var itemStyle = model.getItemStyle();\n  var areaColor = model.get('areaColor'); // If user want the color not to be changed when hover,\n  // they should both set areaColor and color to be null.\n\n  if (areaColor != null) {\n    itemStyle.fill = areaColor;\n  }\n\n  return itemStyle;\n} // Only stroke can be used for line.\n// Using fill in style if stroke not exits.\n// TODO Not sure yet. Perhaps a separate `lineStyle`?\n\n\nfunction fixLineStyle(styleHost) {\n  var style = styleHost.style;\n\n  if (style) {\n    style.stroke = style.stroke || style.fill;\n    style.fill = null;\n  }\n}\n\nvar MapDraw =\n/** @class */\nfunction () {\n  function MapDraw(api) {\n    var group = new graphic.Group();\n    this.uid = getUID('ec_map_draw');\n    this._controller = new RoamController(api.getZr());\n    this._controllerHost = {\n      target: group\n    };\n    this.group = group;\n    group.add(this._regionsGroup = new graphic.Group());\n    group.add(this._svgGroup = new graphic.Group());\n  }\n\n  MapDraw.prototype.draw = function (mapOrGeoModel, ecModel, api, fromView, payload) {\n    var isGeo = mapOrGeoModel.mainType === 'geo'; // Map series has data. GEO model that controlled by map series\n    // will be assigned with map data. Other GEO model has no data.\n\n    var data = mapOrGeoModel.getData && mapOrGeoModel.getData();\n    isGeo && ecModel.eachComponent({\n      mainType: 'series',\n      subType: 'map'\n    }, function (mapSeries) {\n      if (!data && mapSeries.getHostGeoModel() === mapOrGeoModel) {\n        data = mapSeries.getData();\n      }\n    });\n    var geo = mapOrGeoModel.coordinateSystem;\n    var regionsGroup = this._regionsGroup;\n    var group = this.group;\n    var transformInfo = geo.getTransformInfo();\n    var transformInfoRaw = transformInfo.raw;\n    var transformInfoRoam = transformInfo.roam; // No animation when first draw or in action\n\n    var isFirstDraw = !regionsGroup.childAt(0) || payload;\n\n    if (isFirstDraw) {\n      group.x = transformInfoRoam.x;\n      group.y = transformInfoRoam.y;\n      group.scaleX = transformInfoRoam.scaleX;\n      group.scaleY = transformInfoRoam.scaleY;\n      group.dirty();\n    } else {\n      graphic.updateProps(group, transformInfoRoam, mapOrGeoModel);\n    }\n\n    var isVisualEncodedByVisualMap = data && data.getVisual('visualMeta') && data.getVisual('visualMeta').length > 0;\n    var viewBuildCtx = {\n      api: api,\n      geo: geo,\n      mapOrGeoModel: mapOrGeoModel,\n      data: data,\n      isVisualEncodedByVisualMap: isVisualEncodedByVisualMap,\n      isGeo: isGeo,\n      transformInfoRaw: transformInfoRaw\n    };\n\n    if (geo.resourceType === 'geoJSON') {\n      this._buildGeoJSON(viewBuildCtx);\n    } else if (geo.resourceType === 'geoSVG') {\n      this._buildSVG(viewBuildCtx);\n    }\n\n    this._updateController(mapOrGeoModel, ecModel, api);\n\n    this._updateMapSelectHandler(mapOrGeoModel, regionsGroup, api, fromView);\n  };\n\n  MapDraw.prototype._buildGeoJSON = function (viewBuildCtx) {\n    var regionsGroupByName = this._regionsGroupByName = zrUtil.createHashMap();\n    var regionsInfoByName = zrUtil.createHashMap();\n    var regionsGroup = this._regionsGroup;\n    var transformInfoRaw = viewBuildCtx.transformInfoRaw;\n    var mapOrGeoModel = viewBuildCtx.mapOrGeoModel;\n    var data = viewBuildCtx.data;\n    var projection = viewBuildCtx.geo.projection;\n    var projectionStream = projection && projection.stream;\n\n    function transformPoint(point, project) {\n      if (project) {\n        // projection may return null point.\n        point = project(point);\n      }\n\n      return point && [point[0] * transformInfoRaw.scaleX + transformInfoRaw.x, point[1] * transformInfoRaw.scaleY + transformInfoRaw.y];\n    }\n\n    ;\n\n    function transformPolygonPoints(inPoints) {\n      var outPoints = []; // If projectionStream is provided. Use it instead of single point project.\n\n      var project = !projectionStream && projection && projection.project;\n\n      for (var i = 0; i < inPoints.length; ++i) {\n        var newPt = transformPoint(inPoints[i], project);\n        newPt && outPoints.push(newPt);\n      }\n\n      return outPoints;\n    }\n\n    function getPolyShape(points) {\n      return {\n        shape: {\n          points: transformPolygonPoints(points)\n        }\n      };\n    }\n\n    regionsGroup.removeAll(); // Only when the resource is GeoJSON, there is `geo.regions`.\n\n    zrUtil.each(viewBuildCtx.geo.regions, function (region) {\n      var regionName = region.name; // Consider in GeoJson properties.name may be duplicated, for example,\n      // there is multiple region named \"United Kindom\" or \"France\" (so many\n      // colonies). And it is not appropriate to merge them in geo, which\n      // will make them share the same label and bring trouble in label\n      // location calculation.\n\n      var regionGroup = regionsGroupByName.get(regionName);\n\n      var _a = regionsInfoByName.get(regionName) || {},\n          dataIdx = _a.dataIdx,\n          regionModel = _a.regionModel;\n\n      if (!regionGroup) {\n        regionGroup = regionsGroupByName.set(regionName, new graphic.Group());\n        regionsGroup.add(regionGroup);\n        dataIdx = data ? data.indexOfName(regionName) : null;\n        regionModel = viewBuildCtx.isGeo ? mapOrGeoModel.getRegionModel(regionName) : data ? data.getItemModel(dataIdx) : null;\n        regionsInfoByName.set(regionName, {\n          dataIdx: dataIdx,\n          regionModel: regionModel\n        });\n      }\n\n      var polygonSubpaths = [];\n      var polylineSubpaths = [];\n      zrUtil.each(region.geometries, function (geometry) {\n        // Polygon and MultiPolygon\n        if (geometry.type === 'polygon') {\n          var polys = [geometry.exterior].concat(geometry.interiors || []);\n\n          if (projectionStream) {\n            polys = projectPolys(polys, projectionStream);\n          }\n\n          zrUtil.each(polys, function (poly) {\n            polygonSubpaths.push(new graphic.Polygon(getPolyShape(poly)));\n          });\n        } // LineString and MultiLineString\n        else {\n            var points = geometry.points;\n\n            if (projectionStream) {\n              points = projectPolys(points, projectionStream, true);\n            }\n\n            zrUtil.each(points, function (points) {\n              polylineSubpaths.push(new graphic.Polyline(getPolyShape(points)));\n            });\n          }\n      });\n      var centerPt = transformPoint(region.getCenter(), projection && projection.project);\n\n      function createCompoundPath(subpaths, isLine) {\n        if (!subpaths.length) {\n          return;\n        }\n\n        var compoundPath = new graphic.CompoundPath({\n          culling: true,\n          segmentIgnoreThreshold: 1,\n          shape: {\n            paths: subpaths\n          }\n        });\n        regionGroup.add(compoundPath);\n        applyOptionStyleForRegion(viewBuildCtx, compoundPath, dataIdx, regionModel);\n        resetLabelForRegion(viewBuildCtx, compoundPath, regionName, regionModel, mapOrGeoModel, dataIdx, centerPt);\n\n        if (isLine) {\n          fixLineStyle(compoundPath);\n          zrUtil.each(compoundPath.states, fixLineStyle);\n        }\n      }\n\n      createCompoundPath(polygonSubpaths);\n      createCompoundPath(polylineSubpaths, true);\n    }); // Ensure children have been added to `regionGroup` before calling them.\n\n    regionsGroupByName.each(function (regionGroup, regionName) {\n      var _a = regionsInfoByName.get(regionName),\n          dataIdx = _a.dataIdx,\n          regionModel = _a.regionModel;\n\n      resetEventTriggerForRegion(viewBuildCtx, regionGroup, regionName, regionModel, mapOrGeoModel, dataIdx);\n      resetTooltipForRegion(viewBuildCtx, regionGroup, regionName, regionModel, mapOrGeoModel);\n      resetStateTriggerForRegion(viewBuildCtx, regionGroup, regionName, regionModel, mapOrGeoModel);\n    }, this);\n  };\n\n  MapDraw.prototype._buildSVG = function (viewBuildCtx) {\n    var mapName = viewBuildCtx.geo.map;\n    var transformInfoRaw = viewBuildCtx.transformInfoRaw;\n    this._svgGroup.x = transformInfoRaw.x;\n    this._svgGroup.y = transformInfoRaw.y;\n    this._svgGroup.scaleX = transformInfoRaw.scaleX;\n    this._svgGroup.scaleY = transformInfoRaw.scaleY;\n\n    if (this._svgResourceChanged(mapName)) {\n      this._freeSVG();\n\n      this._useSVG(mapName);\n    }\n\n    var svgDispatcherMap = this._svgDispatcherMap = zrUtil.createHashMap();\n    var focusSelf = false;\n    zrUtil.each(this._svgGraphicRecord.named, function (namedItem) {\n      // Note that we also allow different elements have the same name.\n      // For example, a glyph of a city and the label of the city have\n      // the same name and their tooltip info can be defined in a single\n      // region option.\n      var regionName = namedItem.name;\n      var mapOrGeoModel = viewBuildCtx.mapOrGeoModel;\n      var data = viewBuildCtx.data;\n      var svgNodeTagLower = namedItem.svgNodeTagLower;\n      var el = namedItem.el;\n      var dataIdx = data ? data.indexOfName(regionName) : null;\n      var regionModel = mapOrGeoModel.getRegionModel(regionName);\n\n      if (OPTION_STYLE_ENABLED_TAG_MAP.get(svgNodeTagLower) != null && el instanceof Displayable) {\n        applyOptionStyleForRegion(viewBuildCtx, el, dataIdx, regionModel);\n      }\n\n      if (el instanceof Displayable) {\n        el.culling = true;\n      } // We do not know how the SVG like so we'd better not to change z2.\n      // Otherwise it might bring some unexpected result. For example,\n      // an area hovered that make some inner city can not be clicked.\n\n\n      el.z2EmphasisLift = 0; // If self named:\n\n      if (!namedItem.namedFrom) {\n        // label should batter to be displayed based on the center of <g>\n        // if it is named rather than displayed on each child.\n        if (LABEL_HOST_MAP.get(svgNodeTagLower) != null) {\n          resetLabelForRegion(viewBuildCtx, el, regionName, regionModel, mapOrGeoModel, dataIdx, null);\n        }\n\n        resetEventTriggerForRegion(viewBuildCtx, el, regionName, regionModel, mapOrGeoModel, dataIdx);\n        resetTooltipForRegion(viewBuildCtx, el, regionName, regionModel, mapOrGeoModel);\n\n        if (STATE_TRIGGER_TAG_MAP.get(svgNodeTagLower) != null) {\n          var focus_1 = resetStateTriggerForRegion(viewBuildCtx, el, regionName, regionModel, mapOrGeoModel);\n\n          if (focus_1 === 'self') {\n            focusSelf = true;\n          }\n\n          var els = svgDispatcherMap.get(regionName) || svgDispatcherMap.set(regionName, []);\n          els.push(el);\n        }\n      }\n    }, this);\n\n    this._enableBlurEntireSVG(focusSelf, viewBuildCtx);\n  };\n\n  MapDraw.prototype._enableBlurEntireSVG = function (focusSelf, viewBuildCtx) {\n    // It's a little complicated to support blurring the entire geoSVG in series-map.\n    // So do not support it until some requirements come.\n    // At present, in series-map, only regions can be blurred.\n    if (focusSelf && viewBuildCtx.isGeo) {\n      var blurStyle = viewBuildCtx.mapOrGeoModel.getModel(['blur', 'itemStyle']).getItemStyle(); // Only support `opacity` here. Because not sure that other props are suitable for\n      // all of the elements generated by SVG (especially for Text/TSpan/Image/... ).\n\n      var opacity_1 = blurStyle.opacity;\n\n      this._svgGraphicRecord.root.traverse(function (el) {\n        if (!el.isGroup) {\n          // PENDING: clear those settings to SVG elements when `_freeSVG`.\n          // (Currently it happen not to be needed.)\n          setDefaultStateProxy(el);\n          var style = el.ensureState('blur').style || {}; // Do not overwrite the region style that already set from region option.\n\n          if (style.opacity == null && opacity_1 != null) {\n            style.opacity = opacity_1;\n          } // If `ensureState('blur').style = {}`, there will be default opacity.\n          // Enable `stateTransition` (animation).\n\n\n          el.ensureState('emphasis');\n        }\n      });\n    }\n  };\n\n  MapDraw.prototype.remove = function () {\n    this._regionsGroup.removeAll();\n\n    this._regionsGroupByName = null;\n\n    this._svgGroup.removeAll();\n\n    this._freeSVG();\n\n    this._controller.dispose();\n\n    this._controllerHost = null;\n  };\n\n  MapDraw.prototype.findHighDownDispatchers = function (name, geoModel) {\n    if (name == null) {\n      return [];\n    }\n\n    var geo = geoModel.coordinateSystem;\n\n    if (geo.resourceType === 'geoJSON') {\n      var regionsGroupByName = this._regionsGroupByName;\n\n      if (regionsGroupByName) {\n        var regionGroup = regionsGroupByName.get(name);\n        return regionGroup ? [regionGroup] : [];\n      }\n    } else if (geo.resourceType === 'geoSVG') {\n      return this._svgDispatcherMap && this._svgDispatcherMap.get(name) || [];\n    }\n  };\n\n  MapDraw.prototype._svgResourceChanged = function (mapName) {\n    return this._svgMapName !== mapName;\n  };\n\n  MapDraw.prototype._useSVG = function (mapName) {\n    var resource = geoSourceManager.getGeoResource(mapName);\n\n    if (resource && resource.type === 'geoSVG') {\n      var svgGraphic = resource.useGraphic(this.uid);\n\n      this._svgGroup.add(svgGraphic.root);\n\n      this._svgGraphicRecord = svgGraphic;\n      this._svgMapName = mapName;\n    }\n  };\n\n  MapDraw.prototype._freeSVG = function () {\n    var mapName = this._svgMapName;\n\n    if (mapName == null) {\n      return;\n    }\n\n    var resource = geoSourceManager.getGeoResource(mapName);\n\n    if (resource && resource.type === 'geoSVG') {\n      resource.freeGraphic(this.uid);\n    }\n\n    this._svgGraphicRecord = null;\n    this._svgDispatcherMap = null;\n\n    this._svgGroup.removeAll();\n\n    this._svgMapName = null;\n  };\n\n  MapDraw.prototype._updateController = function (mapOrGeoModel, ecModel, api) {\n    var geo = mapOrGeoModel.coordinateSystem;\n    var controller = this._controller;\n    var controllerHost = this._controllerHost; // @ts-ignore FIXME:TS\n\n    controllerHost.zoomLimit = mapOrGeoModel.get('scaleLimit');\n    controllerHost.zoom = geo.getZoom(); // roamType is will be set default true if it is null\n    // @ts-ignore FIXME:TS\n\n    controller.enable(mapOrGeoModel.get('roam') || false);\n    var mainType = mapOrGeoModel.mainType;\n\n    function makeActionBase() {\n      var action = {\n        type: 'geoRoam',\n        componentType: mainType\n      };\n      action[mainType + 'Id'] = mapOrGeoModel.id;\n      return action;\n    }\n\n    controller.off('pan').on('pan', function (e) {\n      this._mouseDownFlag = false;\n      roamHelper.updateViewOnPan(controllerHost, e.dx, e.dy);\n      api.dispatchAction(zrUtil.extend(makeActionBase(), {\n        dx: e.dx,\n        dy: e.dy,\n        animation: {\n          duration: 0\n        }\n      }));\n    }, this);\n    controller.off('zoom').on('zoom', function (e) {\n      this._mouseDownFlag = false;\n      roamHelper.updateViewOnZoom(controllerHost, e.scale, e.originX, e.originY);\n      api.dispatchAction(zrUtil.extend(makeActionBase(), {\n        zoom: e.scale,\n        originX: e.originX,\n        originY: e.originY,\n        animation: {\n          duration: 0\n        }\n      }));\n    }, this);\n    controller.setPointerChecker(function (e, x, y) {\n      return geo.containPoint([x, y]) && !onIrrelevantElement(e, api, mapOrGeoModel);\n    });\n  };\n  /**\n   * FIXME: this is a temporarily workaround.\n   * When `geoRoam` the elements need to be reset in `MapView['render']`, because the props like\n   * `ignore` might have been modified by `LabelManager`, and `LabelManager#addLabelsOfSeries`\n   * will subsequently cache `defaultAttr` like `ignore`. If do not do this reset, the modified\n   * props will have no chance to be restored.\n   * Note: This reset should be after `clearStates` in `renderSeries` because `useStates` in\n   * `renderSeries` will cache the modified `ignore` to `el._normalState`.\n   * TODO:\n   * Use clone/immutable in `LabelManager`?\n   */\n\n\n  MapDraw.prototype.resetForLabelLayout = function () {\n    this.group.traverse(function (el) {\n      var label = el.getTextContent();\n\n      if (label) {\n        label.ignore = mapLabelRaw(label).ignore;\n      }\n    });\n  };\n\n  MapDraw.prototype._updateMapSelectHandler = function (mapOrGeoModel, regionsGroup, api, fromView) {\n    var mapDraw = this;\n    regionsGroup.off('mousedown');\n    regionsGroup.off('click'); // @ts-ignore FIXME:TS resolve type conflict\n\n    if (mapOrGeoModel.get('selectedMode')) {\n      regionsGroup.on('mousedown', function () {\n        mapDraw._mouseDownFlag = true;\n      });\n      regionsGroup.on('click', function (e) {\n        if (!mapDraw._mouseDownFlag) {\n          return;\n        }\n\n        mapDraw._mouseDownFlag = false;\n      });\n    }\n  };\n\n  return MapDraw;\n}();\n\n;\n\nfunction applyOptionStyleForRegion(viewBuildCtx, el, dataIndex, regionModel) {\n  // All of the path are using `itemStyle`, because\n  // (1) Some SVG also use fill on polyline (The different between\n  // polyline and polygon is \"open\" or \"close\" but not fill or not).\n  // (2) For the common props like opacity, if some use itemStyle\n  // and some use `lineStyle`, it might confuse users.\n  // (3) Most SVG use <path>, where can not detect whether to draw a \"line\"\n  // or a filled shape, so use `itemStyle` for <path>.\n  var normalStyleModel = regionModel.getModel('itemStyle');\n  var emphasisStyleModel = regionModel.getModel(['emphasis', 'itemStyle']);\n  var blurStyleModel = regionModel.getModel(['blur', 'itemStyle']);\n  var selectStyleModel = regionModel.getModel(['select', 'itemStyle']); // NOTE: DON'T use 'style' in visual when drawing map.\n  // This component is used for drawing underlying map for both geo component and map series.\n\n  var normalStyle = getFixedItemStyle(normalStyleModel);\n  var emphasisStyle = getFixedItemStyle(emphasisStyleModel);\n  var selectStyle = getFixedItemStyle(selectStyleModel);\n  var blurStyle = getFixedItemStyle(blurStyleModel); // Update the itemStyle if has data visual\n\n  var data = viewBuildCtx.data;\n\n  if (data) {\n    // Only visual color of each item will be used. It can be encoded by visualMap\n    // But visual color of series is used in symbol drawing\n    // Visual color for each series is for the symbol draw\n    var style = data.getItemVisual(dataIndex, 'style');\n    var decal = data.getItemVisual(dataIndex, 'decal');\n\n    if (viewBuildCtx.isVisualEncodedByVisualMap && style.fill) {\n      normalStyle.fill = style.fill;\n    }\n\n    if (decal) {\n      normalStyle.decal = createOrUpdatePatternFromDecal(decal, viewBuildCtx.api);\n    }\n  } // SVG text, tspan and image can be named but not supporeted\n  // to be styled by region option yet.\n\n\n  el.setStyle(normalStyle);\n  el.style.strokeNoScale = true;\n  el.ensureState('emphasis').style = emphasisStyle;\n  el.ensureState('select').style = selectStyle;\n  el.ensureState('blur').style = blurStyle; // Enable blur\n\n  setDefaultStateProxy(el);\n}\n\nfunction resetLabelForRegion(viewBuildCtx, el, regionName, regionModel, mapOrGeoModel, // Exist only if `viewBuildCtx.data` exists.\ndataIdx, // If labelXY not provided, use `textConfig.position: 'inside'`\nlabelXY) {\n  var data = viewBuildCtx.data;\n  var isGeo = viewBuildCtx.isGeo;\n  var isDataNaN = data && isNaN(data.get(data.mapDimension('value'), dataIdx));\n  var itemLayout = data && data.getItemLayout(dataIdx); // In the following cases label will be drawn\n  // 1. In map series and data value is NaN\n  // 2. In geo component\n  // 3. Region has no series legendIcon, which will be add a showLabel flag in mapSymbolLayout\n\n  if (isGeo || isDataNaN || itemLayout && itemLayout.showLabel) {\n    var query = !isGeo ? dataIdx : regionName;\n    var labelFetcher = void 0; // Consider dataIdx not found.\n\n    if (!data || dataIdx >= 0) {\n      labelFetcher = mapOrGeoModel;\n    }\n\n    var specifiedTextOpt = labelXY ? {\n      normal: {\n        align: 'center',\n        verticalAlign: 'middle'\n      }\n    } : null; // Caveat: must be called after `setDefaultStateProxy(el);` called.\n    // because textContent will be assign with `el.stateProxy` inside.\n\n    setLabelStyle(el, getLabelStatesModels(regionModel), {\n      labelFetcher: labelFetcher,\n      labelDataIndex: query,\n      defaultText: regionName\n    }, specifiedTextOpt);\n    var textEl = el.getTextContent();\n\n    if (textEl) {\n      mapLabelRaw(textEl).ignore = textEl.ignore;\n\n      if (el.textConfig && labelXY) {\n        // Compute a relative offset based on the el bounding rect.\n        var rect = el.getBoundingRect().clone(); // Need to make sure the percent position base on the same rect in normal and\n        // emphasis state. Otherwise if using boundingRect of el, but the emphasis state\n        // has borderWidth (even 0.5px), the text position will be changed obviously\n        // if the position is very big like ['1234%', '1345%'].\n\n        el.textConfig.layoutRect = rect;\n        el.textConfig.position = [(labelXY[0] - rect.x) / rect.width * 100 + '%', (labelXY[1] - rect.y) / rect.height * 100 + '%'];\n      }\n    } // PENDING:\n    // If labelLayout is enabled (test/label-layout.html), el.dataIndex should be specified.\n    // But el.dataIndex is also used to determine whether user event should be triggered,\n    // where el.seriesIndex or el.dataModel must be specified. At present for a single el\n    // there is not case that \"only label layout enabled but user event disabled\", so here\n    // we depends `resetEventTriggerForRegion` to do the job of setting `el.dataIndex`.\n\n\n    el.disableLabelAnimation = true;\n  } else {\n    el.removeTextContent();\n    el.removeTextConfig();\n    el.disableLabelAnimation = null;\n  }\n}\n\nfunction resetEventTriggerForRegion(viewBuildCtx, eventTrigger, regionName, regionModel, mapOrGeoModel, // Exist only if `viewBuildCtx.data` exists.\ndataIdx) {\n  // setItemGraphicEl, setHoverStyle after all polygons and labels\n  // are added to the regionGroup\n  if (viewBuildCtx.data) {\n    // FIXME: when series-map use a SVG map, and there are duplicated name specified\n    // on different SVG elements, after `data.setItemGraphicEl(...)`:\n    // (1) all of them will be mounted with `dataIndex`, `seriesIndex`, so that tooltip\n    // can be triggered only mouse hover. That's correct.\n    // (2) only the last element will be kept in `data`, so that if trigger tooltip\n    // by `dispatchAction`, only the last one can be found and triggered. That might be\n    // not correct. We will fix it in future if anyone demanding that.\n    viewBuildCtx.data.setItemGraphicEl(dataIdx, eventTrigger);\n  } // series-map will not trigger \"geoselectchange\" no matter it is\n  // based on a declared geo component. Because series-map will\n  // trigger \"selectchange\". If it trigger both the two events,\n  // If users call `chart.dispatchAction({type: 'toggleSelect'})`,\n  // it not easy to also fire event \"geoselectchanged\".\n  else {\n      // Package custom mouse event for geo component\n      getECData(eventTrigger).eventData = {\n        componentType: 'geo',\n        componentIndex: mapOrGeoModel.componentIndex,\n        geoIndex: mapOrGeoModel.componentIndex,\n        name: regionName,\n        region: regionModel && regionModel.option || {}\n      };\n    }\n}\n\nfunction resetTooltipForRegion(viewBuildCtx, el, regionName, regionModel, mapOrGeoModel) {\n  if (!viewBuildCtx.data) {\n    graphic.setTooltipConfig({\n      el: el,\n      componentModel: mapOrGeoModel,\n      itemName: regionName,\n      // @ts-ignore FIXME:TS fix the \"compatible with each other\"?\n      itemTooltipOption: regionModel.get('tooltip')\n    });\n  }\n}\n\nfunction resetStateTriggerForRegion(viewBuildCtx, el, regionName, regionModel, mapOrGeoModel) {\n  // @ts-ignore FIXME:TS fix the \"compatible with each other\"?\n  el.highDownSilentOnTouch = !!mapOrGeoModel.get('selectedMode'); // @ts-ignore FIXME:TS fix the \"compatible with each other\"?\n\n  var emphasisModel = regionModel.getModel('emphasis');\n  var focus = emphasisModel.get('focus');\n  toggleHoverEmphasis(el, focus, emphasisModel.get('blurScope'), emphasisModel.get('disabled'));\n\n  if (viewBuildCtx.isGeo) {\n    enableComponentHighDownFeatures(el, mapOrGeoModel, regionName);\n  }\n\n  return focus;\n}\n\nfunction projectPolys(rings, // Polygons include exterior and interiors. Or polylines.\ncreateStream, isLine) {\n  var polygons = [];\n  var curPoly;\n\n  function startPolygon() {\n    curPoly = [];\n  }\n\n  function endPolygon() {\n    if (curPoly.length) {\n      polygons.push(curPoly);\n      curPoly = [];\n    }\n  }\n\n  var stream = createStream({\n    polygonStart: startPolygon,\n    polygonEnd: endPolygon,\n    lineStart: startPolygon,\n    lineEnd: endPolygon,\n    point: function (x, y) {\n      // May have NaN values from stream.\n      if (isFinite(x) && isFinite(y)) {\n        curPoly.push([x, y]);\n      }\n    },\n    sphere: function () {}\n  });\n  !isLine && stream.polygonStart();\n  zrUtil.each(rings, function (ring) {\n    stream.lineStart();\n\n    for (var i = 0; i < ring.length; i++) {\n      stream.point(ring[i][0], ring[i][1]);\n    }\n\n    stream.lineEnd();\n  });\n  !isLine && stream.polygonEnd();\n  return polygons;\n}\n\nexport default MapDraw; // @ts-ignore FIXME:TS fix the \"compatible with each other\"?"],"names":["setKeyInfoToNewElOption","resultItem","newElOption","existElOption","existing","id","keyInfo","type","parentId","newElParentOption","parentOption","isSetLoc","obj","props","isSet","zrUtil","prop","mergeNewElOptionToExist","existList","index","newElOptCopy","$action","mergeLayoutParam","ignoreSize","copyLayoutParams","copyTransitionInfo","clipPath","TRANSITION_PROPS_TO_COPY","ROOT_TRANSITION_PROPS_TO_COPY","concat","target","source","targetProp","i","length","setLayoutInfoToExist","existItem","hv","existingGroupOpt","newGroupOpt","width","height","GraphicComponentModel","_super","_this","apply","this","arguments","preventAutoZ","__extends","prototype","mergeOption","option","ecModel","elements","call","optionUpdated","newOption","isInit","thisOption","newList","flattenedList","_flatten","mappingResult","modelUtil","elOptionsToUpdate","_elOptionsToUpdate","push","item","optionList","result","children","useElOptionsToUpdate","els","defaultOption","ComponentModel","nonShapeGraphicElements","path","compoundPath","group","graphicUtil","image","text","inner","GraphicComponentView","init","_elMap","render","graphicModel","api","_lastGraphicModel","_clear","_updateElements","_relocate","elMap","rootGroup","globalZ","get","globalZLevel","elOption","elExisting","targetElParent","elType","elOptionStyle","style","textVerticalAlign","textBaseline","verticalAlign","align","textContentOption","textContent","textConfig","isEC4CompatibleStyle","convertResult","convertFromEC4CompatibleStyle","elOptionCleaned","getCleanedElOption","isMerge","isReplace","el_1","createEl","isNew","stopPreviousKeyframeAnimationAndRestore","applyUpdateTransition","updateCommonAttrs","removeEl","el_2","updateLeaveTo","el","textContentExisting","getTextContent","attr","setTextContent","clipPathOption","clipPathType","oldClipPath","getClipPath","newEl","setClipPath","applyKeyframeAnimation","keyframeAnimation","elInner","setTextConfig","setEventData","componentModel","itemName","name","itemTooltipOption","tooltip","elOptions","apiWidth","getWidth","apiHeight","getHeight","xy","isGroup","parentEl","parent","isParentRoot","parentElInner","parsePercent","containerInfo","layoutPos","layouted","layoutUtil","boundingMode","bounding","transition","animatePos","k","key","val","isTransitionAll","updateProps","each","dispose","ComponentView","graphicType","Clz","add","set","existElParent","traverse","applyLeaveTransition","removeKey","defaultZ","defaultZlevel","Displayable","indexOf","draggable","eventData","getECData","silent","ignore","componentType","componentIndex","info","install","registers","registerComponentModel","registerComponentView","registerPreprocessor","graphicOption","graphic","isArray","GridView","gridModel","removeAll","shape","coordinateSystem","getRect","defaults","fill","getItemStyle","z2","extraOption","offset","registerCoordinateSystem","xAxis","yAxis","grid","BRUSH_PANEL_GLOBAL","mathMin","Math","min","mathMax","max","mathPow","pow","COVER_Z","UNSELECT_THRESHOLD","MIN_RESIZE_LINE_WIDTH","MUTEX_RESOURCE_KEY","DIRECTION_MAP","w","e","n","s","CURSOR_MAP","ne","sw","nw","se","DEFAULT_BRUSH_OPT","brushStyle","lineWidth","stroke","transformable","brushMode","removeOnClick","baseUID","BrushController","zr","_track","_covers","_handlers","_zr","_uid","pointerHandlers","handler","eventName","bind","enableBrush","brushOption","_brushType","_doDisableBrush","brushType","_doEnableBrush","_enableGlobalPan","interactionMutex","on","_brushOption","merge","clone","off","setPanels","panelOpts","panels_1","_panels","panelId","mount","opt","enableGlobalPan","thisGroup","x","y","rotation","scaleX","scaleY","_transform","getLocalTransform","updateCovers","coverConfigList","map","coverConfig","tmpIdPrefix","oldCovers","newCovers","controller","creatingCover","_creatingCover","DataDiffer","oldGetKey","getKey","addOrUpdate","update","remove","execute","cover","__brushOption","newIndex","oldIndex","newBrushInternal","endCreating","createCover","updateCoverAfterCreation","unmount","clearCovers","Eventful","coverRenderers","updateZ","coverRenderer","getCoverRenderer","updateCoverShape","range","z","updateCommon","getPanelByPoint","localCursorPoint","panel","panels","transform","pn","isTargetByCursor","getPanelByCover","covers","originalLength","trigger","areas","isEnd","shouldShowCover","track","p2","p1","dx","dy","dist","getTrackEnds","tail","createBaseRectCover","rectRangeConverter","edgeNameSequences","makeStyle","cursor","drift","curry","driftRect","ondragend","nameSequence","join","opacity","invisible","updateBaseRect","localRange","handleSize","xa","ya","x2","y2","x2a","y2a","widtha","heighta","updateRectShape","mainEl","childAt","useStyle","childOfName","globalDir","getGlobalDirection1","getGlobalDirection2","h","setShape","pointsToRect","clipByPanel","strokeNoScale","formatRectRange","getTransform","localDirName","inverseMap","left","right","top","bottom","dir","localDirNameSeq","reverse","dirNameSequence","rectRange","toRectRange","localDelta","toLocalDelta","dirName","ind","fromRectRange","driftPolygon","point","localD","transformCoordToLocal","localZero","data","points","xmin","ymin","xmax","ymax","resetCursor","isOutsideZrArea","offsetX","offsetY","currPanel","_dragging","contain","setCursorStyle","preventDefault","rawE","event","mainShapeContain","updateCoverByMouse","eventParams","_creatingPanel","thisBrushOption","slice","determineBrushType","coverBrushOption","getCreatingRange","defaultBrushType","mousedown","handleDragEnd","mousemove","mouseup","lineX","getLineRenderer","lineY","rect","returnInput","localTrack","ends","polygon","xyIndex","otherExtent","getLinearBrushOtherExtent","INCLUDE_FINDER_MAIN_TYPES","BrushTargetManager","finder","_targetInfoList","foundCpts","parseFinder","targetInfoBuilders","builder","include","setOutputRanges","matchOutputRanges","area","coordRange","coordSys","coordRanges","coordConvert","__rangeOffset","diffProcessor","values","xyMinMax","cb","targetInfo","findTargetInfo","coordSyses","setInputRanges","rangeOffset","getScales","makePanelOpts","getDefaultBrushType","getPanelRect","brushHelper","coordSysModel","controlSeries","seriesModel","targetInfoList","areaPanelId","j","targetInfoMatchers","formatMinMax","minMax","modelUtilParseFinder","includeMainTypes","xAxisModels","yAxisModels","gridModels","gridModelMap","createHashMap","xAxesHas","yAxesHas","axisModel","axis","model","cartesians","getCartesians","cartesian","getAxis","panelRectBuilders","xAxisDeclared","yAxisDeclared","geo","geoModels","geoModel","xAxisModel","yAxisModel","master","getBoundingRect","applyTransform","axisConvert","to","rangeOrCoordRange","clamp","xminymin","pointToData","dataToPoint","xmaxymax","Infinity","p","axisNameIndex","coordToData","toLocalCoord","toGlobalCoord","dataToCoord","NaN","axisDiffProcessor","refer","scales","idx","xyMinMaxCurr","xyMinMaxOrigin","sizeCurr","getSize","sizeOrigin","isNaN","OPTION_STYLE_ENABLED_TAGS","OPTION_STYLE_ENABLED_TAG_MAP","STATE_TRIGGER_TAG_MAP","LABEL_HOST_MAP","mapLabelRaw","makeInner","getFixedItemStyle","itemStyle","areaColor","fixLineStyle","styleHost","MapDraw","uid","getUID","_controller","RoamController","getZr","_controllerHost","_regionsGroup","_svgGroup","draw","mapOrGeoModel","fromView","payload","isGeo","mainType","getData","eachComponent","subType","mapSeries","getHostGeoModel","regionsGroup","transformInfo","getTransformInfo","transformInfoRaw","raw","transformInfoRoam","roam","isFirstDraw","dirty","isVisualEncodedByVisualMap","getVisual","viewBuildCtx","resourceType","_buildGeoJSON","_buildSVG","_updateController","_updateMapSelectHandler","regionsGroupByName","_regionsGroupByName","regionsInfoByName","projection","projectionStream","stream","transformPoint","project","transformPolygonPoints","inPoints","outPoints","newPt","getPolyShape","regions","region","regionName","regionGroup","_a","dataIdx","regionModel","indexOfName","getRegionModel","getItemModel","polygonSubpaths","polylineSubpaths","geometries","geometry","polys","exterior","interiors","projectPolys","poly","centerPt","getCenter","createCompoundPath","subpaths","isLine","culling","segmentIgnoreThreshold","paths","applyOptionStyleForRegion","resetLabelForRegion","states","resetEventTriggerForRegion","resetTooltipForRegion","resetStateTriggerForRegion","mapName","_svgResourceChanged","_freeSVG","_useSVG","svgDispatcherMap","_svgDispatcherMap","focusSelf","_svgGraphicRecord","named","namedItem","svgNodeTagLower","z2EmphasisLift","namedFrom","focus_1","_enableBlurEntireSVG","blurStyle","getModel","opacity_1","root","setDefaultStateProxy","ensureState","findHighDownDispatchers","_svgMapName","resource","geoSourceManager","svgGraphic","useGraphic","freeGraphic","controllerHost","zoomLimit","zoom","getZoom","enable","makeActionBase","action","_mouseDownFlag","roamHelper","dispatchAction","animation","duration","scale","originX","originY","setPointerChecker","containPoint","onIrrelevantElement","resetForLabelLayout","label","mapDraw","dataIndex","normalStyleModel","emphasisStyleModel","blurStyleModel","selectStyleModel","normalStyle","emphasisStyle","selectStyle","getItemVisual","decal","createOrUpdatePatternFromDecal","setStyle","labelXY","isDataNaN","mapDimension","itemLayout","getItemLayout","showLabel","query","labelFetcher","specifiedTextOpt","normal","setLabelStyle","getLabelStatesModels","labelDataIndex","defaultText","textEl","layoutRect","position","disableLabelAnimation","removeTextContent","removeTextConfig","eventTrigger","setItemGraphicEl","geoIndex","highDownSilentOnTouch","emphasisModel","focus","toggleHoverEmphasis","enableComponentHighDownFeatures","rings","createStream","curPoly","polygons","startPolygon","endPolygon","polygonStart","polygonEnd","lineStart","lineEnd","isFinite","sphere","ring"],"sourceRoot":""}